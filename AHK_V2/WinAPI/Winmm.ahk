CloseDriver(hdrvr, lParam1, lParam2) => DllCall('Winmm\CloseDriver', 'ptr', hdrvr, 'uptr', lParam1, 'uptr', lParam2, 'ptr')
DefDriverProc(dwDriverId, hdrvr, msg, lParam1, lParam2) => DllCall('Winmm\DefDriverProc', 'uptr', dwDriverId, 'ptr', hdrvr, 'uint', msg, 'int', lParam1, 'int', lParam2, 'ptr')
DriverCallback(dwCallBack, dwFlags, hdrvr, msg, dwUser, dwParam1, dwParam2) => DllCall('Winmm\DriverCallback', 'uint', dwCallBack, 'uint', dwFlags, 'ptr', hdrvr, 'uint', msg, 'uint', dwUser, 'uint', dwParam1, 'uint', dwParam2, 'int')
DrvGetModuleHandle(hDriver) => DllCall('Winmm\DrvGetModuleHandle', 'ptr', hDriver, 'ptr')
GetDriverModuleHandle(hdrvr) => DllCall('Winmm\GetDriverModuleHandle', 'ptr', hdrvr, 'ptr')
OpenDriver(lpDriverName, lpSectionName, lParam) => DllCall('Winmm\OpenDriver', 'wstr', lpDriverName, 'wstr', lpSectionName, 'uptr', lParam, 'ptr')
PlaySound(pszSound, hmod, fdwSound) => DllCall('Winmm\PlaySound', 'str', pszSound, 'ptr', hmod, 'uint', fdwSound, 'int')
SendDriverMessage(hdrvr, msg, lParam1, lParam2) => DllCall('Winmm\SendDriverMessage', 'ptr', hdrvr, 'uint', msg, 'uptr', lParam1, 'uptr', lParam2, 'ptr')
auxGetDevCaps(uDeviceID, lpCaps, cbCaps) => DllCall('Winmm\auxGetDevCaps', 'uptr', uDeviceID, 'ptr', lpCaps, 'uint', cbCaps, 'uint')
auxGetNumDevs() => DllCall('Winmm\auxGetNumDevs', 'uint')
auxGetVolume(uDeviceID, lpdwVolume) => DllCall('Winmm\auxGetVolume', 'uint', uDeviceID, 'ptr', lpdwVolume, 'uint')
auxOutMessage(uDeviceID, uMsg, dwParam1, dwParam2) => DllCall('Winmm\auxOutMessage', 'uint', uDeviceID, 'uint', uMsg, 'uptr', dwParam1, 'uptr', dwParam2, 'uint')
auxSetVolume(uDeviceID, dwVolume) => DllCall('Winmm\auxSetVolume', 'uint', uDeviceID, 'uint', dwVolume, 'uint')
joyConfigChanged(dwFlags) => DllCall('Winmm\joyConfigChanged', 'uint', dwFlags, 'uint')
joyGetDevCaps(uJoyID, pjc, cbjc) => DllCall('Winmm\joyGetDevCaps', 'uptr', uJoyID, 'ptr', pjc, 'uint', cbjc, 'uint')
joyGetNumDevs() => DllCall('Winmm\joyGetNumDevs', 'uint')
joyGetPos(uJoyID, pji) => DllCall('Winmm\joyGetPos', 'uint', uJoyID, 'ptr', pji, 'uint')
joyGetPosEx(uJoyID, pji) => DllCall('Winmm\joyGetPosEx', 'uint', uJoyID, 'ptr', pji, 'uint')
joyGetThreshold(uJoyID, puThreshold) => DllCall('Winmm\joyGetThreshold', 'uint', uJoyID, 'ptr', puThreshold, 'uint')
joyReleaseCapture(uJoyID) => DllCall('Winmm\joyReleaseCapture', 'uint', uJoyID, 'uint')
joySetCapture(hwnd, uJoyID, uPeriod, fChanged) => DllCall('Winmm\joySetCapture', 'ptr', hwnd, 'uint', uJoyID, 'uint', uPeriod, 'int', fChanged, 'uint')
joySetThreshold(uJoyID, uThreshold) => DllCall('Winmm\joySetThreshold', 'uint', uJoyID, 'uint', uThreshold, 'uint')
mciExecute(pszCommand) => DllCall('Winmm\mciExecute', 'astr', pszCommand, 'int')
mciGetCreatorTask(IDDevice) => DllCall('Winmm\mciGetCreatorTask', 'uint', IDDevice, 'ptr')
mciGetDeviceID(lpszDevice) => DllCall('Winmm\mciGetDeviceID', 'str', lpszDevice, 'uint')
mciGetDeviceIDFromElementID(dwElementID, lpstrType) => DllCall('Winmm\mciGetDeviceIDFromElementID', 'uint', dwElementID, 'str', lpstrType, 'uint')
mciGetErrorString(fdwError, lpszErrorText, cchErrorText) => DllCall('Winmm\mciGetErrorString', 'uint', fdwError, 'str', lpszErrorText, 'uint', cchErrorText, 'int')
mciGetYieldProc(IDDevice, lpdwYieldData) => DllCall('Winmm\mciGetYieldProc', 'uint', IDDevice, 'ptr', lpdwYieldData, 'ptr')
mciSendCommand(IDDevice, uMsg, fdwCommand, dwParam) => DllCall('Winmm\mciSendCommand', 'uint', IDDevice, 'uint', uMsg, 'uptr', fdwCommand, 'uptr', dwParam, 'uint')
mciSendString(lpszCommand, lpszReturnString, cchReturn, hwndCallback) => DllCall('Winmm\mciSendString', 'str', lpszCommand, 'str', lpszReturnString, 'uint', cchReturn, 'ptr', hwndCallback, 'uint')
mciSetYieldProc(IDDevice, yp, dwYieldData) => DllCall('Winmm\mciSetYieldProc', 'uint', IDDevice, 'ptr', yp, 'uint', dwYieldData, 'uint')
midiConnect(hMidi, hmo, pReserved) => DllCall('Winmm\midiConnect', 'ptr', hMidi, 'ptr', hmo, 'ptr', pReserved, 'uint')
midiDisconnect(hMidi, hmo, pReserved) => DllCall('Winmm\midiDisconnect', 'ptr', hMidi, 'ptr', hmo, 'ptr', pReserved, 'uint')
midiInAddBuffer(hMidiIn, lpMidiInHdr, cbMidiInHdr) => DllCall('Winmm\midiInAddBuffer', 'ptr', hMidiIn, 'ptr', lpMidiInHdr, 'uint', cbMidiInHdr, 'uint')
midiInClose(hMidiIn) => DllCall('Winmm\midiInClose', 'ptr', hMidiIn, 'uint')
midiInGetDevCaps(uDeviceID, lpMidiInCaps, cbMidiInCaps) => DllCall('Winmm\midiInGetDevCaps', 'uptr', uDeviceID, 'ptr', lpMidiInCaps, 'uint', cbMidiInCaps, 'uint')
midiInGetErrorText(wError, lpText, cchText) => DllCall('Winmm\midiInGetErrorText', 'uint', wError, 'str', lpText, 'uint', cchText, 'uint')
midiInGetID(hmi, puDeviceID) => DllCall('Winmm\midiInGetID', 'ptr', hmi, 'ptr', puDeviceID, 'uint')
midiInGetNumDevs() => DllCall('Winmm\midiInGetNumDevs', 'uint')
midiInMessage(deviceID, msg, dw1, dw2) => DllCall('Winmm\midiInMessage', 'ptr', deviceID, 'uint', msg, 'uptr', dw1, 'uptr', dw2, 'uint')
midiInOpen(lphMidiIn, uDeviceID, dwCallback, dwCallbackInstance, dwFlags) => DllCall('Winmm\midiInOpen', 'ptr', lphMidiIn, 'uint', uDeviceID, 'uptr', dwCallback, 'uptr', dwCallbackInstance, 'uint', dwFlags, 'uint')
midiInPrepareHeader(hMidiIn, lpMidiInHdr, cbMidiInHdr) => DllCall('Winmm\midiInPrepareHeader', 'ptr', hMidiIn, 'ptr', lpMidiInHdr, 'uint', cbMidiInHdr, 'uint')
midiInReset(hMidiIn) => DllCall('Winmm\midiInReset', 'ptr', hMidiIn, 'uint')
midiInStart(hMidiIn) => DllCall('Winmm\midiInStart', 'ptr', hMidiIn, 'uint')
midiInStop(hMidiIn) => DllCall('Winmm\midiInStop', 'ptr', hMidiIn, 'uint')
midiInUnprepareHeader(hMidiIn, lpMidiInHdr, cbMidiInHdr) => DllCall('Winmm\midiInUnprepareHeader', 'ptr', hMidiIn, 'ptr', lpMidiInHdr, 'uint', cbMidiInHdr, 'uint')
midiOutCacheDrumPatches(hmo, wPatch, &lpKeyArray, wFlags) => DllCall('Winmm\midiOutCacheDrumPatches', 'ptr', hmo, 'uint', wPatch, 'ushort*', &lpKeyArray, 'uint', wFlags, 'uint')
midiOutCachePatches(hmo, wBank, &lpPatchArray, wFlags) => DllCall('Winmm\midiOutCachePatches', 'ptr', hmo, 'uint', wBank, 'ushort*', &lpPatchArray, 'uint', wFlags, 'uint')
midiOutClose(hmo) => DllCall('Winmm\midiOutClose', 'ptr', hmo, 'uint')
midiOutGetDevCaps(uDeviceID, lpMidiOutCaps, cbMidiOutCaps) => DllCall('Winmm\midiOutGetDevCaps', 'uptr', uDeviceID, 'ptr', lpMidiOutCaps, 'uint', cbMidiOutCaps, 'uint')
midiOutGetErrorText(mmrError, lpText, cchText) => DllCall('Winmm\midiOutGetErrorText', 'uint', mmrError, 'str', lpText, 'uint', cchText, 'uint')
midiOutGetID(hmo, puDeviceID) => DllCall('Winmm\midiOutGetID', 'ptr', hmo, 'ptr', puDeviceID, 'uint')
midiOutGetNumDevs() => DllCall('Winmm\midiOutGetNumDevs', 'uint')
midiOutGetVolume(hmo, lpdwVolume) => DllCall('Winmm\midiOutGetVolume', 'ptr', hmo, 'ptr', lpdwVolume, 'uint')
midiOutLongMsg(hmo, lpMidiOutHdr, cbMidiOutHdr) => DllCall('Winmm\midiOutLongMsg', 'ptr', hmo, 'ptr', lpMidiOutHdr, 'uint', cbMidiOutHdr, 'uint')
midiOutMessage(deviceID, msg, dw1, dw2) => DllCall('Winmm\midiOutMessage', 'ptr', deviceID, 'uint', msg, 'uptr', dw1, 'uptr', dw2, 'uint')
midiOutOpen(lphmo, uDeviceID, dwCallback, dwCallbackInstance, dwFlags) => DllCall('Winmm\midiOutOpen', 'ptr', lphmo, 'uint', uDeviceID, 'uptr', dwCallback, 'uptr', dwCallbackInstance, 'uint', dwFlags, 'uint')
midiOutPrepareHeader(hmo, lpMidiOutHdr, cbMidiOutHdr) => DllCall('Winmm\midiOutPrepareHeader', 'ptr', hmo, 'ptr', lpMidiOutHdr, 'uint', cbMidiOutHdr, 'uint')
midiOutReset(hmo) => DllCall('Winmm\midiOutReset', 'ptr', hmo, 'uint')
midiOutSetVolume(hmo, dwVolume) => DllCall('Winmm\midiOutSetVolume', 'ptr', hmo, 'uint', dwVolume, 'uint')
midiOutShortMsg(hmo, dwMsg) => DllCall('Winmm\midiOutShortMsg', 'ptr', hmo, 'uint', dwMsg, 'uint')
midiOutUnprepareHeader(hmo, lpMidiOutHdr, cbMidiOutHdr) => DllCall('Winmm\midiOutUnprepareHeader', 'ptr', hmo, 'ptr', lpMidiOutHdr, 'uint', cbMidiOutHdr, 'uint')
midiStreamClose(hStream) => DllCall('Winmm\midiStreamClose', 'ptr', hStream, 'uint')
midiStreamOpen(lphStream, puDeviceID, cMidi, dwCallback, dwInstance, fdwOpen) => DllCall('Winmm\midiStreamOpen', 'ptr', lphStream, 'ptr', puDeviceID, 'uint', cMidi, 'uptr', dwCallback, 'uptr', dwInstance, 'uint', fdwOpen, 'uint')
midiStreamOut(hMidiStream, lpMidiHdr, cbMidiHdr) => DllCall('Winmm\midiStreamOut', 'ptr', hMidiStream, 'ptr', lpMidiHdr, 'uint', cbMidiHdr, 'uint')
midiStreamPause(hms) => DllCall('Winmm\midiStreamPause', 'ptr', hms, 'uint')
midiStreamPosition(hms, pmmt, cbmmt) => DllCall('Winmm\midiStreamPosition', 'ptr', hms, 'ptr', pmmt, 'uint', cbmmt, 'uint')
midiStreamProperty(hm, lppropdata, dwProperty) => DllCall('Winmm\midiStreamProperty', 'ptr', hm, 'ptr', lppropdata, 'uint', dwProperty, 'uint')
midiStreamRestart(hms) => DllCall('Winmm\midiStreamRestart', 'ptr', hms, 'uint')
midiStreamStop(hms) => DllCall('Winmm\midiStreamStop', 'ptr', hms, 'uint')
mixerClose(hmx) => DllCall('Winmm\mixerClose', 'ptr', hmx, 'uint')
mixerGetControlDetails(hmxobj, pmxcd, fdwDetails) => DllCall('Winmm\mixerGetControlDetails', 'ptr', hmxobj, 'ptr', pmxcd, 'uint', fdwDetails, 'uint')
mixerGetDevCaps(uMxId, pmxcaps, cbmxcaps) => DllCall('Winmm\mixerGetDevCaps', 'uptr', uMxId, 'ptr', pmxcaps, 'uint', cbmxcaps, 'uint')
mixerGetID(hmxobj, puMxId, fdwId) => DllCall('Winmm\mixerGetID', 'ptr', hmxobj, 'ptr', puMxId, 'uint', fdwId, 'uint')
mixerGetLineControls(hmxobj, pmxlc, fdwControls) => DllCall('Winmm\mixerGetLineControls', 'ptr', hmxobj, 'ptr', pmxlc, 'uint', fdwControls, 'uint')
mixerGetLineInfo(hmxobj, pmxl, fdwInfo) => DllCall('Winmm\mixerGetLineInfo', 'ptr', hmxobj, 'ptr', pmxl, 'uint', fdwInfo, 'uint')
mixerGetNumDevs() => DllCall('Winmm\mixerGetNumDevs', 'uint')
mixerMessage(driverID, uMsg, dwParam1, dwParam2) => DllCall('Winmm\mixerMessage', 'ptr', driverID, 'uint', uMsg, 'uptr', dwParam1, 'uptr', dwParam2, 'uint')
mixerOpen(phmx, uMxId, dwCallback, dwInstance, fdwOpen) => DllCall('Winmm\mixerOpen', 'ptr', phmx, 'uint', uMxId, 'uptr', dwCallback, 'uptr', dwInstance, 'uint', fdwOpen, 'uint')
mixerSetControlDetails(hmxobj, pmxcd, fdwDetails) => DllCall('Winmm\mixerSetControlDetails', 'ptr', hmxobj, 'ptr', pmxcd, 'uint', fdwDetails, 'uint')
mmGetCurrentTask() => DllCall('Winmm\mmGetCurrentTask', 'uint')
mmTaskBlock(h) => DllCall('Winmm\mmTaskBlock', 'uint', h, 'int')
mmTaskCreate(lpfn, lph, dwInst) => DllCall('Winmm\mmTaskCreate', 'ptr', lpfn, 'ptr', lph, 'uptr', dwInst, 'uint')
mmTaskYield() => DllCall('Winmm\mmTaskYield', 'int')
mmioAdvance(hmmio, lpmmioinfo, wFlags) => DllCall('Winmm\mmioAdvance', 'ptr', hmmio, 'ptr', lpmmioinfo, 'uint', wFlags, 'uint')
mmioAscend(hmmio, lpck, wFlags) => DllCall('Winmm\mmioAscend', 'ptr', hmmio, 'ptr', lpck, 'uint', wFlags, 'uint')
mmioClose(hmmio, wFlags) => DllCall('Winmm\mmioClose', 'ptr', hmmio, 'uint', wFlags, 'uint')
mmioCreateChunk(hmmio, lpck, wFlags) => DllCall('Winmm\mmioCreateChunk', 'ptr', hmmio, 'ptr', lpck, 'uint', wFlags, 'uint')
mmioDescend(hmmio, lpck, lpckParent, wFlags) => DllCall('Winmm\mmioDescend', 'ptr', hmmio, 'ptr', lpck, 'ptr', lpckParent, 'uint', wFlags, 'uint')
mmioFlush(hmmio, fuFlush) => DllCall('Winmm\mmioFlush', 'ptr', hmmio, 'uint', fuFlush, 'uint')
mmioGetInfo(hmmio, lpmmioinfo, wFlags) => DllCall('Winmm\mmioGetInfo', 'ptr', hmmio, 'ptr', lpmmioinfo, 'uint', wFlags, 'uint')
mmioInstallIOProc(fccIOProc, pIOProc, dwFlags) => DllCall('Winmm\mmioInstallIOProc', 'uint', fccIOProc, 'ptr', pIOProc, 'uint', dwFlags, 'ptr')
mmioOpen(szFilename, lpmmioinfo, dwOpenFlags) => DllCall('Winmm\mmioOpen', 'str', szFilename, 'ptr', lpmmioinfo, 'uint', dwOpenFlags, 'ptr')
mmioRead(hmmio, pch, cch) => DllCall('Winmm\mmioRead', 'ptr', hmmio, 'ptr', pch, 'int', cch, 'int')
mmioRename(szFilename, szNewFilename, lpmmioinfo, dwRenameFlags) => DllCall('Winmm\mmioRename', 'str', szFilename, 'str', szNewFilename, 'ptr', lpmmioinfo, 'uint', dwRenameFlags, 'uint')
mmioSeek(hmmio, lOffset, iOrigin) => DllCall('Winmm\mmioSeek', 'ptr', hmmio, 'int', lOffset, 'int', iOrigin, 'int')
mmioSendMessage(hmmio, wMsg, lParam1, lParam2) => DllCall('Winmm\mmioSendMessage', 'ptr', hmmio, 'uint', wMsg, 'uptr', lParam1, 'uptr', lParam2, 'ptr')
mmioSetBuffer(hmmio, pchBuffer, cchBuffer, wFlags) => DllCall('Winmm\mmioSetBuffer', 'ptr', hmmio, 'astr', pchBuffer, 'int', cchBuffer, 'uint', wFlags, 'uint')
mmioSetInfo(hmmio, lpmmioinfo, wFlags) => DllCall('Winmm\mmioSetInfo', 'ptr', hmmio, 'ptr', lpmmioinfo, 'uint', wFlags, 'uint')
mmioStringToFOURCC(sz, wFlags) => DllCall('Winmm\mmioStringToFOURCC', 'str', sz, 'uint', wFlags, 'uint')
mmioWrite(hmmio, pch, cch) => DllCall('Winmm\mmioWrite', 'ptr', hmmio, 'ptr', pch, 'int', cch, 'int')
mmsystemGetVersion() => DllCall('Winmm\mmsystemGetVersion', 'uint')
sndPlaySound(lpszSound, fuSound) => DllCall('Winmm\sndPlaySound', 'str', lpszSound, 'uint', fuSound, 'int')
timeBeginPeriod(uPeriod) => DllCall('Winmm\timeBeginPeriod', 'uint', uPeriod, 'uint')
timeEndPeriod(uPeriod) => DllCall('Winmm\timeEndPeriod', 'uint', uPeriod, 'uint')
timeGetDevCaps(ptc, cbtc) => DllCall('Winmm\timeGetDevCaps', 'ptr', ptc, 'uint', cbtc, 'uint')
timeGetSystemTime(pmmt, cbmmt) => DllCall('Winmm\timeGetSystemTime', 'ptr', pmmt, 'uint', cbmmt, 'uint')
timeGetTime() => DllCall('Winmm\timeGetTime', 'uint')
timeKillEvent(uTimerID) => DllCall('Winmm\timeKillEvent', 'uint', uTimerID, 'uint')
timeSetEvent(uDelay, uResolution, lpTimeProc, dwUser, fuEvent) => DllCall('Winmm\timeSetEvent', 'uint', uDelay, 'uint', uResolution, 'ptr', lpTimeProc, 'uptr', dwUser, 'uint', fuEvent, 'uint')
waveInAddBuffer(hwi, pwh, cbwh) => DllCall('Winmm\waveInAddBuffer', 'ptr', hwi, 'ptr', pwh, 'uint', cbwh, 'uint')
waveInClose(hwi) => DllCall('Winmm\waveInClose', 'ptr', hwi, 'uint')
waveInGetDevCaps(uDeviceID, pwic, cbwic) => DllCall('Winmm\waveInGetDevCaps', 'uptr', uDeviceID, 'ptr', pwic, 'uint', cbwic, 'uint')
waveInGetErrorText(mmrError, pszText, cchText) => DllCall('Winmm\waveInGetErrorText', 'uint', mmrError, 'str', pszText, 'uint', cchText, 'uint')
waveInGetID(hwi, puDeviceID) => DllCall('Winmm\waveInGetID', 'ptr', hwi, 'ptr', puDeviceID, 'uint')
waveInGetNumDevs() => DllCall('Winmm\waveInGetNumDevs', 'uint')
waveInGetPosition(hwi, pmmt, cbmmt) => DllCall('Winmm\waveInGetPosition', 'ptr', hwi, 'ptr', pmmt, 'uint', cbmmt, 'uint')
waveInMessage(deviceID, uMsg, dwParam1, dwParam2) => DllCall('Winmm\waveInMessage', 'ptr', deviceID, 'uint', uMsg, 'uptr', dwParam1, 'uptr', dwParam2, 'uint')
waveInOpen(phwi, uDeviceID, pwfx, dwCallback, dwCallbackInstance, fdwOpen) => DllCall('Winmm\waveInOpen', 'ptr', phwi, 'uint', uDeviceID, 'ptr', pwfx, 'uptr', dwCallback, 'uptr', dwCallbackInstance, 'uint', fdwOpen, 'uint')
waveInPrepareHeader(hwi, pwh, cbwh) => DllCall('Winmm\waveInPrepareHeader', 'ptr', hwi, 'ptr', pwh, 'uint', cbwh, 'uint')
waveInReset(hwi) => DllCall('Winmm\waveInReset', 'ptr', hwi, 'uint')
waveInStart(hwi) => DllCall('Winmm\waveInStart', 'ptr', hwi, 'uint')
waveInStop(hwi) => DllCall('Winmm\waveInStop', 'ptr', hwi, 'uint')
waveInUnprepareHeader(hwi, pwh, cbwh) => DllCall('Winmm\waveInUnprepareHeader', 'ptr', hwi, 'ptr', pwh, 'uint', cbwh, 'uint')
waveOutBreakLoop(hwo) => DllCall('Winmm\waveOutBreakLoop', 'ptr', hwo, 'uint')
waveOutClose(hwo) => DllCall('Winmm\waveOutClose', 'ptr', hwo, 'uint')
waveOutGetDevCaps(uDeviceID, pwoc, cbwoc) => DllCall('Winmm\waveOutGetDevCaps', 'uptr', uDeviceID, 'ptr', pwoc, 'uint', cbwoc, 'uint')
waveOutGetErrorText(mmrError, pszText, cchText) => DllCall('Winmm\waveOutGetErrorText', 'uint', mmrError, 'str', pszText, 'uint', cchText, 'uint')
waveOutGetID(hwo, puDeviceID) => DllCall('Winmm\waveOutGetID', 'ptr', hwo, 'ptr', puDeviceID, 'uint')
waveOutGetNumDevs() => DllCall('Winmm\waveOutGetNumDevs', 'uint')
waveOutGetPitch(hwo, pdwPitch) => DllCall('Winmm\waveOutGetPitch', 'ptr', hwo, 'ptr', pdwPitch, 'uint')
waveOutGetPlaybackRate(hwo, pdwRate) => DllCall('Winmm\waveOutGetPlaybackRate', 'ptr', hwo, 'ptr', pdwRate, 'uint')
waveOutGetPosition(hwo, pmmt, cbmmt) => DllCall('Winmm\waveOutGetPosition', 'ptr', hwo, 'ptr', pmmt, 'uint', cbmmt, 'uint')
waveOutGetVolume(hwo, pdwVolume) => DllCall('Winmm\waveOutGetVolume', 'ptr', hwo, 'ptr', pdwVolume, 'uint')
waveOutMessage(deviceID, uMsg, dwParam1, dwParam2) => DllCall('Winmm\waveOutMessage', 'ptr', deviceID, 'uint', uMsg, 'uptr', dwParam1, 'uptr', dwParam2, 'uint')
waveOutOpen(phwo, uDeviceID, pwfx, dwCallback, dwCallbackInstance, fdwOpen) => DllCall('Winmm\waveOutOpen', 'ptr', phwo, 'uptr', uDeviceID, 'ptr', pwfx, 'uptr', dwCallback, 'uptr', dwCallbackInstance, 'uint', fdwOpen, 'uint')
waveOutPause(hwo) => DllCall('Winmm\waveOutPause', 'ptr', hwo, 'uint')
waveOutPrepareHeader(hwo, pwh, cbwh) => DllCall('Winmm\waveOutPrepareHeader', 'ptr', hwo, 'ptr', pwh, 'uint', cbwh, 'uint')
waveOutReset(hwo) => DllCall('Winmm\waveOutReset', 'ptr', hwo, 'uint')
waveOutRestart(hwo) => DllCall('Winmm\waveOutRestart', 'ptr', hwo, 'uint')
waveOutSetPitch(hwo, dwPitch) => DllCall('Winmm\waveOutSetPitch', 'ptr', hwo, 'uint', dwPitch, 'uint')
waveOutSetPlaybackRate(hwo, dwRate) => DllCall('Winmm\waveOutSetPlaybackRate', 'ptr', hwo, 'uint', dwRate, 'uint')
waveOutSetVolume(hwo, dwVolume) => DllCall('Winmm\waveOutSetVolume', 'ptr', hwo, 'uint', dwVolume, 'uint')
waveOutUnprepareHeader(hwo, pwh, cbwh) => DllCall('Winmm\waveOutUnprepareHeader', 'ptr', hwo, 'ptr', pwh, 'uint', cbwh, 'uint')
waveOutWrite(hwo, pwh, cbwh) => DllCall('Winmm\waveOutWrite', 'ptr', hwo, 'ptr', pwh, 'uint', cbwh, 'uint')
