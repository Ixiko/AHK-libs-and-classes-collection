AssocCreate(clsid, riid, ppv) => DllCall('Shlwapi\AssocCreate', 'ptr', clsid, 'ptr', riid, 'ptr', ppv, 'int')
AssocGetPerceivedType(pszExt, ptype, pflag, ppszType) => DllCall('Shlwapi\AssocGetPerceivedType', 'wstr', pszExt, 'ptr', ptype, 'ptr', pflag, 'wstr', ppszType, 'int')
AssocIsDangerous(pszAssoc) => DllCall('Shlwapi\AssocIsDangerous', 'wstr', pszAssoc, 'int')
AssocQueryKey(flags, key, pszAssoc, pszExtra, phkeyOut) => DllCall('Shlwapi\AssocQueryKey', 'int', flags, 'int', key, 'str', pszAssoc, 'str', pszExtra, 'ptr', phkeyOut, 'int')
AssocQueryString(flags, str, pszAssoc, pszExtra, pszOut, &pcchOut) => DllCall('Shlwapi\AssocQueryString', 'int', flags, 'int', str, 'str', pszAssoc, 'str', pszExtra, 'str', pszOut, 'uint*', &pcchOut, 'int')
AssocQueryStringByKey(flags, str, hkAssoc, pszExtra, pszOut, &pcchOut) => DllCall('Shlwapi\AssocQueryStringByKey', 'int', flags, 'int', str, 'ptr', hkAssoc, 'str', pszExtra, 'str', pszOut, 'uint*', &pcchOut, 'int')
ChrCmpI(w1, w2) => DllCall('Shlwapi\ChrCmpI', 'short', w1, 'short', w2, 'int')
ColorAdjustLuma(clrRGB, n, fScale) => DllCall('Shlwapi\ColorAdjustLuma', 'uint', clrRGB, 'int', n, 'int', fScale, 'uint')
ColorHLSToRGB(wHue, wLuminance, wSaturation) => DllCall('Shlwapi\ColorHLSToRGB', 'ushort', wHue, 'ushort', wLuminance, 'ushort', wSaturation, 'uint')
ColorRGBToHLS(clrRGB, &pwHue, &pwLuminance, &pwSaturation) => DllCall('Shlwapi\ColorRGBToHLS', 'uint', clrRGB, 'ushort*', &pwHue, 'ushort*', &pwLuminance, 'ushort*', &pwSaturation, 'int')
ConnectToConnectionPoint(punk, riidEvent, fConnect, punkTarget, &pdwCookie, ppcpOut) => DllCall('Shlwapi\ConnectToConnectionPoint', 'ptr', punk, 'ptr', riidEvent, 'int', fConnect, 'ptr', punkTarget, 'uint*', &pdwCookie, 'ptr', ppcpOut, 'int')
DllInstall(bInstall, pszCmdLine) => DllCall('Shlwapi\DllInstall', 'int', bInstall, 'wstr', pszCmdLine, 'int')
GetAcceptLanguages(pszLanguages, &pcchLanguages) => DllCall('Shlwapi\GetAcceptLanguages', 'str', pszLanguages, 'uint*', &pcchLanguages, 'int')
GetMenuPosFromID(hmenu, id) => DllCall('Shlwapi\GetMenuPosFromID', 'ptr', hmenu, 'uint', id, 'int')
HashData(&pbData, cbData, &pbHash, cbHash) => DllCall('Shlwapi\HashData', 'uchar*', &pbData, 'uint', cbData, 'uchar*', &pbHash, 'uint', cbHash, 'int')
IStream_Copy(pstmFrom, pstmTo, cb) => DllCall('Shlwapi\IStream_Copy', 'ptr', pstmFrom, 'ptr', pstmTo, 'uint', cb, 'int')
IStream_Read(pstm, pv, cb) => DllCall('Shlwapi\IStream_Read', 'ptr', pstm, 'ptr', pv, 'uint', cb, 'int')
IStream_ReadPidl(pstm, ppidlOut) => DllCall('Shlwapi\IStream_ReadPidl', 'ptr', pstm, 'ptr', ppidlOut, 'int')
IStream_ReadStr(pstm, ppsz) => DllCall('Shlwapi\IStream_ReadStr', 'ptr', pstm, 'wstr', ppsz, 'int')
IStream_Reset(pstm) => DllCall('Shlwapi\IStream_Reset', 'ptr', pstm, 'int')
IStream_Size(pstm, pui) => DllCall('Shlwapi\IStream_Size', 'ptr', pstm, 'ptr', pui, 'int')
IStream_Write(pstm, pv, cb) => DllCall('Shlwapi\IStream_Write', 'ptr', pstm, 'ptr', pv, 'uint', cb, 'int')
IStream_WritePidl(pstm, pidlWrite) => DllCall('Shlwapi\IStream_WritePidl', 'ptr', pstm, 'ptr', pidlWrite, 'int')
IStream_WriteStr(pstm, psz) => DllCall('Shlwapi\IStream_WriteStr', 'ptr', pstm, 'wstr', psz, 'int')
IUnknown_AtomicRelease(ppunk) => DllCall('Shlwapi\IUnknown_AtomicRelease', 'ptr', ppunk, 'int')
IUnknown_GetSite(punk, riid, ppvSite) => DllCall('Shlwapi\IUnknown_GetSite', 'ptr', punk, 'ptr', riid, 'ptr', ppvSite, 'int')
IUnknown_GetWindow(punk, phwnd) => DllCall('Shlwapi\IUnknown_GetWindow', 'ptr', punk, 'ptr', phwnd, 'int')
IUnknown_QueryService(punk, guidService, riid, ppvOut) => DllCall('Shlwapi\IUnknown_QueryService', 'ptr', punk, 'ptr', guidService, 'ptr', riid, 'ptr', ppvOut, 'int')
IUnknown_Set(ppunk, punk) => DllCall('Shlwapi\IUnknown_Set', 'ptr', ppunk, 'ptr', punk, 'int')
IUnknown_SetSite(punk, punkSite) => DllCall('Shlwapi\IUnknown_SetSite', 'ptr', punk, 'ptr', punkSite, 'int')
IntlStrEqWorker(fCaseSens, pszStr1, pszStr2, nChar) => DllCall('Shlwapi\IntlStrEqWorker', 'int', fCaseSens, 'str', pszStr1, 'str', pszStr2, 'int', nChar, 'int')
IsCharSpace(wch) => DllCall('Shlwapi\IsCharSpace', 'short', wch, 'int')
IsInternetESCEnabled() => DllCall('Shlwapi\IsInternetESCEnabled', 'int')
IsOS(dwOS) => DllCall('Shlwapi\IsOS', 'uint', dwOS, 'int')
MLFreeLibrary(hModule) => DllCall('Shlwapi\MLFreeLibrary', 'ptr', hModule, 'int')
MLLoadLibrary(lpszLibFileName, hModule, dwCrossCodePage) => DllCall('Shlwapi\MLLoadLibrary', 'str', lpszLibFileName, 'ptr', hModule, 'uint', dwCrossCodePage, 'ptr')
ParseURL(pcszUrl, ppu) => DllCall('Shlwapi\ParseURL', 'str', pcszUrl, 'ptr', ppu, 'int')
PathAddBackslash(lpszPath) => DllCall('Shlwapi\PathAddBackslash', 'str', lpszPath, 'str')
PathAddExtension(pszPath, pszExtension) => DllCall('Shlwapi\PathAddExtension', 'str', pszPath, 'str', pszExtension, 'int')
PathAppend(pszPath, pszMore) => DllCall('Shlwapi\PathAppend', 'str', pszPath, 'str', pszMore, 'int')
PathBuildRoot(szRoot, iDrive) => DllCall('Shlwapi\PathBuildRoot', 'str', szRoot, 'int', iDrive, 'str')
PathCanonicalize(lpszDst, lpszSrc) => DllCall('Shlwapi\PathCanonicalize', 'str', lpszDst, 'str', lpszSrc, 'int')
PathCombine(pszPathOut, pszPathIn, pszMore) => DllCall('Shlwapi\PathCombine', 'str', pszPathOut, 'str', pszPathIn, 'str', pszMore, 'str')
PathCommonPrefix(pszFile1, pszFile2, pszPath) => DllCall('Shlwapi\PathCommonPrefix', 'str', pszFile1, 'str', pszFile2, 'str', pszPath, 'int')
PathCompactPath(hDC, lpszPath, dx) => DllCall('Shlwapi\PathCompactPath', 'ptr', hDC, 'str', lpszPath, 'uint', dx, 'int')
PathCompactPathEx(pszOut, pszSrc, cchMax, dwFlags) => DllCall('Shlwapi\PathCompactPathEx', 'str', pszOut, 'str', pszSrc, 'uint', cchMax, 'uint', dwFlags, 'int')
PathCreateFromUrl(pszUrl, pszPath, &pcchPath, dwFlags) => DllCall('Shlwapi\PathCreateFromUrl', 'str', pszUrl, 'str', pszPath, 'uint*', &pcchPath, 'uint', dwFlags, 'int')
PathCreateFromUrlAlloc(pszIn, ppszOut, dwFlags) => DllCall('Shlwapi\PathCreateFromUrlAlloc', 'wstr', pszIn, 'wstr', ppszOut, 'uint', dwFlags, 'int')
PathFileExists(pszPath) => DllCall('Shlwapi\PathFileExists', 'str', pszPath, 'int')
PathFindExtension(pszPath) => DllCall('Shlwapi\PathFindExtension', 'str', pszPath, 'str')
PathFindFileName(pPath) => DllCall('Shlwapi\PathFindFileName', 'str', pPath, 'str')
PathFindNextComponent(pszPath) => DllCall('Shlwapi\PathFindNextComponent', 'str', pszPath, 'str')
PathFindOnPath(pszFile, ppszOtherDirs) => DllCall('Shlwapi\PathFindOnPath', 'str', pszFile, 'str', ppszOtherDirs, 'int')
PathFindSuffixArray(pszPath, apszSuffix, iArraySize) => DllCall('Shlwapi\PathFindSuffixArray', 'str', pszPath, 'str', apszSuffix, 'int', iArraySize, 'str')
PathGetArgs(pszPath) => DllCall('Shlwapi\PathGetArgs', 'str', pszPath, 'str')
PathGetCharType(ch) => DllCall('Shlwapi\PathGetCharType', 'ushort', ch, 'uint')
PathGetDriveNumber(lpsz) => DllCall('Shlwapi\PathGetDriveNumber', 'str', lpsz, 'int')
PathIsContentType(pszPath, pszContentType) => DllCall('Shlwapi\PathIsContentType', 'str', pszPath, 'str', pszContentType, 'int')
PathIsDirectory(pszPath) => DllCall('Shlwapi\PathIsDirectory', 'str', pszPath, 'int')
PathIsDirectoryEmpty(pszPath) => DllCall('Shlwapi\PathIsDirectoryEmpty', 'str', pszPath, 'int')
PathIsFileSpec(lpszPath) => DllCall('Shlwapi\PathIsFileSpec', 'str', lpszPath, 'int')
PathIsLFNFileSpec(pszName) => DllCall('Shlwapi\PathIsLFNFileSpec', 'str', pszName, 'int')
PathIsNetworkPath(pszPath) => DllCall('Shlwapi\PathIsNetworkPath', 'str', pszPath, 'int')
PathIsPrefix(pszPrefix, pszPath) => DllCall('Shlwapi\PathIsPrefix', 'str', pszPrefix, 'str', pszPath, 'int')
PathIsRelative(lpszPath) => DllCall('Shlwapi\PathIsRelative', 'str', lpszPath, 'int')
PathIsRoot(pPath) => DllCall('Shlwapi\PathIsRoot', 'str', pPath, 'int')
PathIsSameRoot(pszPath1, pszPath2) => DllCall('Shlwapi\PathIsSameRoot', 'str', pszPath1, 'str', pszPath2, 'int')
PathIsSystemFolder(pszPath, dwAttrb) => DllCall('Shlwapi\PathIsSystemFolder', 'str', pszPath, 'uint', dwAttrb, 'int')
PathIsUNC(pszPath) => DllCall('Shlwapi\PathIsUNC', 'str', pszPath, 'int')
PathIsUNCServer(pszPath) => DllCall('Shlwapi\PathIsUNCServer', 'str', pszPath, 'int')
PathIsUNCServerShare(pszPath) => DllCall('Shlwapi\PathIsUNCServerShare', 'str', pszPath, 'int')
PathIsURL(pszPath) => DllCall('Shlwapi\PathIsURL', 'str', pszPath, 'int')
PathMakePretty(lpPath) => DllCall('Shlwapi\PathMakePretty', 'str', lpPath, 'int')
PathMakeSystemFolder(pszPath) => DllCall('Shlwapi\PathMakeSystemFolder', 'str', pszPath, 'int')
PathMatchSpec(pszFile, pszSpec) => DllCall('Shlwapi\PathMatchSpec', 'astr', pszFile, 'astr', pszSpec, 'int')
PathMatchSpecEx(pszFile, pszSpec, dwFlags) => DllCall('Shlwapi\PathMatchSpecEx', 'str', pszFile, 'str', pszSpec, 'uint', dwFlags, 'int')
PathParseIconLocation(pszIconFile) => DllCall('Shlwapi\PathParseIconLocation', 'str', pszIconFile, 'int')
PathQuoteSpaces(lpsz) => DllCall('Shlwapi\PathQuoteSpaces', 'str', lpsz, 'int')
PathRelativePathTo(pszPath, pszFrom, dwAttrFrom, pszTo, dwAttrTo) => DllCall('Shlwapi\PathRelativePathTo', 'str', pszPath, 'str', pszFrom, 'uint', dwAttrFrom, 'str', pszTo, 'uint', dwAttrTo, 'int')
PathRemoveArgs(pszPath) => DllCall('Shlwapi\PathRemoveArgs', 'str', pszPath, 'int')
PathRemoveBackslash(lpszPath) => DllCall('Shlwapi\PathRemoveBackslash', 'str', lpszPath, 'str')
PathRemoveBlanks(lpszString) => DllCall('Shlwapi\PathRemoveBlanks', 'str', lpszString, 'int')
PathRemoveExtension(pszPath) => DllCall('Shlwapi\PathRemoveExtension', 'str', pszPath, 'int')
PathRemoveFileSpec(pszPath) => DllCall('Shlwapi\PathRemoveFileSpec', 'str', pszPath, 'int')
PathRenameExtension(pszPath, pszExt) => DllCall('Shlwapi\PathRenameExtension', 'str', pszPath, 'str', pszExt, 'int')
PathSearchAndQualify(pcszPath, pszFullyQualifiedPath, cchFullyQualifiedPath) => DllCall('Shlwapi\PathSearchAndQualify', 'str', pcszPath, 'str', pszFullyQualifiedPath, 'uint', cchFullyQualifiedPath, 'int')
PathSetDlgItemPath(hDlg, id, pszPath) => DllCall('Shlwapi\PathSetDlgItemPath', 'ptr', hDlg, 'int', id, 'astr', pszPath, 'int')
PathSkipRoot(pszPath) => DllCall('Shlwapi\PathSkipRoot', 'str', pszPath, 'str')
PathStripPath(pszPath) => DllCall('Shlwapi\PathStripPath', 'str', pszPath, 'int')
PathStripToRoot(szRoot) => DllCall('Shlwapi\PathStripToRoot', 'str', szRoot, 'int')
PathUnExpandEnvStrings(pszPath, pszBuf, cchBuf) => DllCall('Shlwapi\PathUnExpandEnvStrings', 'str', pszPath, 'str', pszBuf, 'uint', cchBuf, 'int')
PathUndecorate(pszPath) => DllCall('Shlwapi\PathUndecorate', 'str', pszPath, 'int')
PathUnmakeSystemFolder(pszPath) => DllCall('Shlwapi\PathUnmakeSystemFolder', 'str', pszPath, 'int')
PathUnquoteSpaces(lpsz) => DllCall('Shlwapi\PathUnquoteSpaces', 'str', lpsz, 'int')
QISearch(that, pqit, riid, ppv) => DllCall('Shlwapi\QISearch', 'ptr', that, 'ptr', pqit, 'ptr', riid, 'ptr', ppv, 'int')
SHAllocShared(pvData, dwSize, dwDestinationProcessId) => DllCall('Shlwapi\SHAllocShared', 'ptr', pvData, 'uint', dwSize, 'uint', dwDestinationProcessId, 'ptr')
SHAnsiToAnsi(pszSrc, pszDst, cchBuf) => DllCall('Shlwapi\SHAnsiToAnsi', 'astr', pszSrc, 'wstr', pszDst, 'int', cchBuf, 'int')
SHAnsiToUnicode(pszSrc, pwszDst, cwchBuf) => DllCall('Shlwapi\SHAnsiToUnicode', 'astr', pszSrc, 'ptr', pwszDst, 'int', cwchBuf, 'int')
SHAutoComplete(hwndEdit, dwFlags) => DllCall('Shlwapi\SHAutoComplete', 'ptr', hwndEdit, 'uint', dwFlags, 'int')
SHCopyKey(hkeySrc, pszSrcSubKey, hkeyDest, fReserved) => DllCall('Shlwapi\SHCopyKey', 'ptr', hkeySrc, 'str', pszSrcSubKey, 'ptr', hkeyDest, 'uint', fReserved, 'int')
SHCreateMemStream(&pInit, cbInit) => DllCall('Shlwapi\SHCreateMemStream', 'uchar*', &pInit, 'uint', cbInit, 'ptr')
SHCreateShellPalette(hdc) => DllCall('Shlwapi\SHCreateShellPalette', 'ptr', hdc, 'ptr')
SHCreateStreamOnFile(pszFile, grfMode, ppstm) => DllCall('Shlwapi\SHCreateStreamOnFile', 'str', pszFile, 'uint', grfMode, 'ptr', ppstm, 'int')
SHCreateStreamOnFileEx(pszFile, grfMode, dwAttributes, fCreate, pstmTemplate, ppstm) => DllCall('Shlwapi\SHCreateStreamOnFileEx', 'wstr', pszFile, 'uint', grfMode, 'uint', dwAttributes, 'int', fCreate, 'ptr', pstmTemplate, 'ptr', ppstm, 'int')
SHCreateThread(pfnThreadProc, pData, dwFlags, pfnCallback) => DllCall('Shlwapi\SHCreateThread', 'ptr', pfnThreadProc, 'ptr', pData, 'uint', dwFlags, 'ptr', pfnCallback, 'int')
SHCreateThreadRef(&pcRef, ppunk) => DllCall('Shlwapi\SHCreateThreadRef', 'int*', &pcRef, 'ptr', ppunk, 'int')
SHCreateThreadWithHandle(pfnThreadProc, pData, flags, pfnCallback, pHandle) => DllCall('Shlwapi\SHCreateThreadWithHandle', 'ptr', pfnThreadProc, 'ptr', pData, 'uint', flags, 'ptr', pfnCallback, 'ptr', pHandle, 'int')
SHDeleteEmptyKey(hkey, pszSubKey) => DllCall('Shlwapi\SHDeleteEmptyKey', 'ptr', hkey, 'str', pszSubKey, 'int')
SHDeleteKey(hkey, pszSubKey) => DllCall('Shlwapi\SHDeleteKey', 'ptr', hkey, 'str', pszSubKey, 'int')
SHDeleteValue(hkey, pszSubKey, pszValue) => DllCall('Shlwapi\SHDeleteValue', 'ptr', hkey, 'str', pszSubKey, 'str', pszValue, 'int')
SHEnumKeyEx(hkey, dwIndex, pszName, pcchName) => DllCall('Shlwapi\SHEnumKeyEx', 'ptr', hkey, 'uint', dwIndex, 'str', pszName, 'ptr', pcchName, 'int')
SHEnumValue(hkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData) => DllCall('Shlwapi\SHEnumValue', 'ptr', hkey, 'uint', dwIndex, 'str', pszValueName, 'ptr', pcchValueName, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'int')
SHFormatDateTime(pft, &pdwFlags, pszBuf, cchBuf) => DllCall('Shlwapi\SHFormatDateTime', 'ptr', pft, 'uint*', &pdwFlags, 'str', pszBuf, 'uint', cchBuf, 'int')
SHFreeShared(hData, dwProcessId) => DllCall('Shlwapi\SHFreeShared', 'ptr', hData, 'uint', dwProcessId, 'int')
SHGetInverseCMAP(&pbMap, cbMap) => DllCall('Shlwapi\SHGetInverseCMAP', 'uchar*', &pbMap, 'uint', cbMap, 'int')
SHGetThreadRef(ppunk) => DllCall('Shlwapi\SHGetThreadRef', 'ptr', ppunk, 'int')
SHGetValue(hkey, pszSubKey, pszValue, pdwType, pvData, pcbData) => DllCall('Shlwapi\SHGetValue', 'ptr', hkey, 'str', pszSubKey, 'str', pszValue, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'int')
SHGetViewStatePropertyBag(pidl, pszBagName, dwFlags, riid, ppv) => DllCall('Shlwapi\SHGetViewStatePropertyBag', 'ptr', pidl, 'wstr', pszBagName, 'uint', dwFlags, 'ptr', riid, 'ptr', ppv, 'int')
SHIsChildOrSelf(hWndParent, hWnd) => DllCall('Shlwapi\SHIsChildOrSelf', 'ptr', hWndParent, 'ptr', hWnd, 'int')
SHLoadIndirectString(pszSource, pszOutBuf, cchOutBuf, ppvReserved) => DllCall('Shlwapi\SHLoadIndirectString', 'wstr', pszSource, 'ptr', pszOutBuf, 'uint', cchOutBuf, 'ptr', ppvReserved, 'int')
SHLockShared(hData, dwProcessId) => DllCall('Shlwapi\SHLockShared', 'ptr', hData, 'uint', dwProcessId, 'ptr')
SHMessageBoxCheck(hwnd, pszText, pszCaption, uType, iDefault, pszRegVal) => DllCall('Shlwapi\SHMessageBoxCheck', 'ptr', hwnd, 'str', pszText, 'str', pszCaption, 'uint', uType, 'int', iDefault, 'str', pszRegVal, 'int')
SHOpenRegStream(hkey, pszSubkey, pszValue, grfMode) => DllCall('Shlwapi\SHOpenRegStream', 'ptr', hkey, 'str', pszSubkey, 'str', pszValue, 'uint', grfMode, 'ptr')
SHOpenRegStream2(hkey, pszSubkey, pszValue, grfMode) => DllCall('Shlwapi\SHOpenRegStream2', 'ptr', hkey, 'str', pszSubkey, 'str', pszValue, 'uint', grfMode, 'ptr')
SHQueryInfoKey(hkey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen) => DllCall('Shlwapi\SHQueryInfoKey', 'ptr', hkey, 'ptr', pcSubKeys, 'ptr', pcchMaxSubKeyLen, 'ptr', pcValues, 'ptr', pcchMaxValueNameLen, 'int')
SHQueryValueEx(hkey, pszValue, pdwReserved, pdwType, pvData, pcbData) => DllCall('Shlwapi\SHQueryValueEx', 'ptr', hkey, 'str', pszValue, 'ptr', pdwReserved, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'uint')
SHRegCloseUSKey(hUSKey) => DllCall('Shlwapi\SHRegCloseUSKey', 'ptr', hUSKey, 'int')
SHRegCreateUSKey(pszPath, samDesired, hRelativeUSKey, phNewUSKey, dwFlags) => DllCall('Shlwapi\SHRegCreateUSKey', 'str', pszPath, 'uint', samDesired, 'ptr', hRelativeUSKey, 'ptr', phNewUSKey, 'uint', dwFlags, 'int')
SHRegDeleteEmptyUSKey(hUSKey, pszValue, delRegFlags) => DllCall('Shlwapi\SHRegDeleteEmptyUSKey', 'ptr', hUSKey, 'astr', pszValue, 'uint', delRegFlags, 'int')
SHRegDeleteUSValue(hUSKey, pszValue, delRegFlags) => DllCall('Shlwapi\SHRegDeleteUSValue', 'ptr', hUSKey, 'str', pszValue, 'uint', delRegFlags, 'int')
SHRegDuplicateHKey(hKey) => DllCall('Shlwapi\SHRegDuplicateHKey', 'ptr', hKey, 'ptr')
SHRegEnumUSKey(hUSKey, dwIndex, pszName, pcchName, enumRegFlags) => DllCall('Shlwapi\SHRegEnumUSKey', 'ptr', hUSKey, 'uint', dwIndex, 'str', pszName, 'ptr', pcchName, 'uint', enumRegFlags, 'int')
SHRegEnumUSValue(hUSKey, dwIndex, pszValueName, pcchValueNameLen, pdwType, pvData, pcbData, enumRegFlags) => DllCall('Shlwapi\SHRegEnumUSValue', 'ptr', hUSKey, 'uint', dwIndex, 'str', pszValueName, 'ptr', pcchValueNameLen, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'uint', enumRegFlags, 'int')
SHRegGetBoolUSValue(pszSubKey, pszValue, fIgnoreHKCU, fDefault) => DllCall('Shlwapi\SHRegGetBoolUSValue', 'str', pszSubKey, 'str', pszValue, 'int', fIgnoreHKCU, 'int', fDefault, 'int')
SHRegGetIntW(hk, szKey, nDefault) => DllCall('Shlwapi\SHRegGetIntW', 'ptr', hk, 'wstr', szKey, 'int', nDefault, 'int')
SHRegGetPath(hkey, pszSubkey, pszValue, pszPath, dwFlags) => DllCall('Shlwapi\SHRegGetPath', 'ptr', hkey, 'str', pszSubkey, 'str', pszValue, 'str', pszPath, 'uint', dwFlags, 'int')
SHRegGetUSValue(pszSubKey, pszValue, &pdwType, pvData, &pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize) => DllCall('Shlwapi\SHRegGetUSValue', 'str', pszSubKey, 'str', pszValue, 'uint*', &pdwType, 'ptr', pvData, 'uint*', &pcbData, 'int', fIgnoreHKCU, 'ptr', pvDefaultData, 'uint', dwDefaultDataSize, 'int')
SHRegGetValue(hkey, pszSubKey, pszValue, srrfFlags, pdwType, pvData, pcbData) => DllCall('Shlwapi\SHRegGetValue', 'ptr', hkey, 'str', pszSubKey, 'str', pszValue, 'int', srrfFlags, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'int')
SHRegOpenUSKey(pszPath, samDesired, hRelativeUSKey, phNewUSKey, fIgnoreHKCU) => DllCall('Shlwapi\SHRegOpenUSKey', 'str', pszPath, 'uint', samDesired, 'ptr', hRelativeUSKey, 'ptr', phNewUSKey, 'int', fIgnoreHKCU, 'int')
SHRegQueryInfoUSKey(hUSKey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen, enumRegFlags) => DllCall('Shlwapi\SHRegQueryInfoUSKey', 'ptr', hUSKey, 'ptr', pcSubKeys, 'ptr', pcchMaxSubKeyLen, 'ptr', pcValues, 'ptr', pcchMaxValueNameLen, 'uint', enumRegFlags, 'int')
SHRegQueryUSValue(hUSKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize) => DllCall('Shlwapi\SHRegQueryUSValue', 'ptr', hUSKey, 'str', pszValue, 'ptr', pdwType, 'ptr', pvData, 'ptr', pcbData, 'int', fIgnoreHKCU, 'ptr', pvDefaultData, 'uint', dwDefaultDataSize, 'int')
SHRegSetPath(hkey, pszSubkey, pszValue, pszPath, dwFlags) => DllCall('Shlwapi\SHRegSetPath', 'ptr', hkey, 'str', pszSubkey, 'str', pszValue, 'str', pszPath, 'uint', dwFlags, 'int')
SHRegSetUSValue(pszSubKey, pszValue, dwType, pvData, cbData, dwFlags) => DllCall('Shlwapi\SHRegSetUSValue', 'str', pszSubKey, 'str', pszValue, 'uint', dwType, 'ptr', pvData, 'uint', cbData, 'uint', dwFlags, 'int')
SHRegWriteUSValue(hUSKey, pszValue, dwType, pvData, cbData, dwFlags) => DllCall('Shlwapi\SHRegWriteUSValue', 'ptr', hUSKey, 'str', pszValue, 'uint', dwType, 'ptr', pvData, 'uint', cbData, 'uint', dwFlags, 'int')
SHReleaseThreadRef() => DllCall('Shlwapi\SHReleaseThreadRef', 'int')
SHSendMessageBroadcast(uMsg, wParam, lParam) => DllCall('Shlwapi\SHSendMessageBroadcast', 'uint', uMsg, 'uptr', wParam, 'uptr', lParam, 'ptr')
SHSetThreadRef(pUnk) => DllCall('Shlwapi\SHSetThreadRef', 'ptr', pUnk, 'int')
SHSetValue(hkey, pszSubKey, pszValue, dwType, pvData, cbData) => DllCall('Shlwapi\SHSetValue', 'ptr', hkey, 'str', pszSubKey, 'str', pszValue, 'uint', dwType, 'ptr', pvData, 'uint', cbData, 'int')
SHSkipJunction(pbc, pclsid) => DllCall('Shlwapi\SHSkipJunction', 'ptr', pbc, 'ptr', pclsid, 'int')
SHStrDup(pszSource, ppwsz) => DllCall('Shlwapi\SHStrDup', 'str', pszSource, 'ptr', ppwsz, 'int')
SHStripMneumonic(pszMenu) => DllCall('Shlwapi\SHStripMneumonic', 'ptr', pszMenu, 'short')
SHUnicodeToAnsi(pwszSrc, pszDst, cchBuf) => DllCall('Shlwapi\SHUnicodeToAnsi', 'wstr', pwszSrc, 'astr', pszDst, 'int', cchBuf, 'int')
SHUnicodeToUnicode(pwzSrc, pwzDst, cwchBuf) => DllCall('Shlwapi\SHUnicodeToUnicode', 'wstr', pwzSrc, 'ptr', pwzDst, 'int', cwchBuf, 'int')
SHUnlockShared(pvData) => DllCall('Shlwapi\SHUnlockShared', 'ptr', pvData, 'int')
ShellMessageBox(hInst, hWnd, pszMsg, pszTitle, fuStyle, args*) {
	_args := []
	for v in args
		_args.Push('ptr', v)
	_args.Push('int')
	return DllCall('Shlwapi\ShellMessageBox', 'ptr', hInst, 'ptr', hWnd, 'str', pszMsg, 'str', pszTitle, 'uint', fuStyle, _args*)
}
StrCSpn(pszStr, pszSet) => DllCall('Shlwapi\StrCSpn', 'str', pszStr, 'str', pszSet, 'int')
StrCSpnI(pszStr, pszSet) => DllCall('Shlwapi\StrCSpnI', 'str', pszStr, 'str', pszSet, 'int')
StrCat(psz1, psz2) => DllCall('Shlwapi\StrCat', 'str', psz1, 'str', psz2, 'str')
StrCatBuff(pszDest, pszSrc, cchDestBuffSize) => DllCall('Shlwapi\StrCatBuff', 'str', pszDest, 'str', pszSrc, 'int', cchDestBuffSize, 'str')
StrCatChainW(pszDst, cchDst, ichAt, pszSrc) => DllCall('Shlwapi\StrCatChainW', 'ptr', pszDst, 'uint', cchDst, 'uint', ichAt, 'wstr', pszSrc, 'uint')
StrChr(pszStart, wMatch) => DllCall('Shlwapi\StrChr', 'str', pszStart, 'short', wMatch, 'str')
StrChrI(pszStart, wMatch) => DllCall('Shlwapi\StrChrI', 'str', pszStart, 'short', wMatch, 'str')
StrChrNIW(pszStart, wMatch, cchMax) => DllCall('Shlwapi\StrChrNIW', 'wstr', pszStart, 'ushort', wMatch, 'uint', cchMax, 'ptr')
StrChrNW(pszStart, wMatch, cchMax) => DllCall('Shlwapi\StrChrNW', 'ptr', pszStart, 'ushort', wMatch, 'uint', cchMax, 'ptr')
StrCmp(psz1, psz2) => DllCall('Shlwapi\StrCmp', 'str', psz1, 'str', psz2, 'int')
StrCmpC(lpStr1, lpStr2) => DllCall('Shlwapi\StrCmpC', 'str', lpStr1, 'str', lpStr2, 'int')
StrCmpI(psz1, psz2) => DllCall('Shlwapi\StrCmpI', 'str', psz1, 'str', psz2, 'int')
StrCmpIC(lpStr1, lpStr2) => DllCall('Shlwapi\StrCmpIC', 'str', lpStr1, 'str', lpStr2, 'int')
StrCmpLogicalW(psz1, psz2) => DllCall('Shlwapi\StrCmpLogicalW', 'wstr', psz1, 'wstr', psz2, 'int')
StrCmpN(psz1, psz2, nChar) => DllCall('Shlwapi\StrCmpN', 'str', psz1, 'str', psz2, 'int', nChar, 'int')
StrCmpNC(pszStr1, pszStr2, nChar) => DllCall('Shlwapi\StrCmpNC', 'str', pszStr1, 'str', pszStr2, 'int', nChar, 'int')
StrCmpNI(psz1, psz2, nChar) => DllCall('Shlwapi\StrCmpNI', 'str', psz1, 'str', psz2, 'int', nChar, 'int')
StrCmpNIC(pszStr1, pszStr2, nChar) => DllCall('Shlwapi\StrCmpNIC', 'str', pszStr1, 'str', pszStr2, 'int', nChar, 'int')
StrCpy(psz1, psz2) => DllCall('Shlwapi\StrCpy', 'str', psz1, 'str', psz2, 'str')
StrCpyN(pszDst, pszSrc, cchMax) => DllCall('Shlwapi\StrCpyN', 'str', pszDst, 'str', pszSrc, 'int', cchMax, 'str')
StrDup(pszSrch) => DllCall('Shlwapi\StrDup', 'str', pszSrch, 'str')
StrFormatByteSize64(qdw, pszBuf, cchBuf) => DllCall('Shlwapi\StrFormatByteSize64', 'int64', qdw, 'astr', pszBuf, 'uint', cchBuf, 'astr')
StrFormatByteSizeA(dw, pszBuf, cchBuf) => DllCall('Shlwapi\StrFormatByteSizeA', 'uint', dw, 'astr', pszBuf, 'uint', cchBuf, 'astr')
StrFormatByteSizeEx(ull, flags, pszBuf, cchBuf) => DllCall('Shlwapi\StrFormatByteSizeEx', 'uint64', ull, 'uint', flags, 'ptr', pszBuf, 'uint', cchBuf, 'int')
StrFormatByteSizeW(qdw, pszBuf, cchBuf) => DllCall('Shlwapi\StrFormatByteSizeW', 'int64', qdw, 'ptr', pszBuf, 'uint', cchBuf, 'ptr')
StrFormatKBSize(qdw, pszBuf, cchBuf) => DllCall('Shlwapi\StrFormatKBSize', 'int64', qdw, 'str', pszBuf, 'uint', cchBuf, 'str')
StrFromTimeInterval(pszOut, cchMax, dwTimeMS, digits) => DllCall('Shlwapi\StrFromTimeInterval', 'str', pszOut, 'uint', cchMax, 'uint', dwTimeMS, 'int', digits, 'int')
StrIsIntlEqual(fCaseSens, pszString1, pszString2, nChar) => DllCall('Shlwapi\StrIsIntlEqual', 'int', fCaseSens, 'str', pszString1, 'str', pszString2, 'int', nChar, 'int')
StrNCat(psz1, psz2, cchMax) => DllCall('Shlwapi\StrNCat', 'str', psz1, 'str', psz2, 'int', cchMax, 'str')
StrPBrk(psz, pszSet) => DllCall('Shlwapi\StrPBrk', 'str', psz, 'str', pszSet, 'str')
StrRChr(pszStart, pszEnd, wMatch) => DllCall('Shlwapi\StrRChr', 'str', pszStart, 'str', pszEnd, 'short', wMatch, 'str')
StrRChrI(pszStart, pszEnd, wMatch) => DllCall('Shlwapi\StrRChrI', 'str', pszStart, 'str', pszEnd, 'short', wMatch, 'str')
StrRStrI(pszSource, pszLast, pszSrch) => DllCall('Shlwapi\StrRStrI', 'str', pszSource, 'str', pszLast, 'str', pszSrch, 'str')
StrRetToBSTR(pstr, pidl, pbstr) => DllCall('Shlwapi\StrRetToBSTR', 'ptr', pstr, 'ptr', pidl, 'ptr', pbstr, 'int')
StrRetToBuf(pstr, pidl, pszBuf, cchBuf) => DllCall('Shlwapi\StrRetToBuf', 'ptr', pstr, 'ptr', pidl, 'str', pszBuf, 'uint', cchBuf, 'int')
StrRetToStr(pstr, pidl, ppszName) => DllCall('Shlwapi\StrRetToStr', 'ptr', pstr, 'ptr', pidl, 'ptr', ppszName, 'int')
StrSpn(psz, pszSet) => DllCall('Shlwapi\StrSpn', 'str', psz, 'str', pszSet, 'int')
StrStr(pszFirst, pszSrch) => DllCall('Shlwapi\StrStr', 'str', pszFirst, 'str', pszSrch, 'str')
StrStrI(pszFirst, pszSrch) => DllCall('Shlwapi\StrStrI', 'str', pszFirst, 'str', pszSrch, 'str')
StrStrNIW(pszFirst, pszSrch, cchMax) => DllCall('Shlwapi\StrStrNIW', 'ptr', pszFirst, 'wstr', pszSrch, 'uint', cchMax, 'ptr')
StrStrNW(pszFirst, pszSrch, cchMax) => DllCall('Shlwapi\StrStrNW', 'ptr', pszFirst, 'wstr', pszSrch, 'uint', cchMax, 'ptr')
StrToInt(pszSrc) => DllCall('Shlwapi\StrToInt', 'str', pszSrc, 'int')
StrToInt64Ex(pszString, dwFlags, &pllRet) => DllCall('Shlwapi\StrToInt64Ex', 'str', pszString, 'int', dwFlags, 'int64*', &pllRet, 'int')
StrToIntEx(pszString, dwFlags, &piRet) => DllCall('Shlwapi\StrToIntEx', 'str', pszString, 'int', dwFlags, 'int*', &piRet, 'int')
StrTrim(psz, pszTrimChars) => DllCall('Shlwapi\StrTrim', 'str', psz, 'str', pszTrimChars, 'int')
UrlApplyScheme(pszIn, pszOut, &pcchOut, dwFlags) => DllCall('Shlwapi\UrlApplyScheme', 'str', pszIn, 'str', pszOut, 'uint*', &pcchOut, 'uint', dwFlags, 'int')
UrlCanonicalize(pszUrl, pszCanonicalized, &pcchCanonicalized, dwFlags) => DllCall('Shlwapi\UrlCanonicalize', 'str', pszUrl, 'str', pszCanonicalized, 'uint*', &pcchCanonicalized, 'uint', dwFlags, 'int')
UrlCombine(pszBase, pszRelative, pszCombined, &pcchCombined, dwFlags) => DllCall('Shlwapi\UrlCombine', 'str', pszBase, 'str', pszRelative, 'str', pszCombined, 'uint*', &pcchCombined, 'uint', dwFlags, 'int')
UrlCompare(psz1, psz2, fIgnoreSlash) => DllCall('Shlwapi\UrlCompare', 'str', psz1, 'str', psz2, 'int', fIgnoreSlash, 'int')
UrlCreateFromPath(pszPath, pszUrl, &pcchUrl, dwFlags) => DllCall('Shlwapi\UrlCreateFromPath', 'str', pszPath, 'str', pszUrl, 'uint*', &pcchUrl, 'uint', dwFlags, 'int')
UrlEscape(pszURL, pszEscaped, &pcchEscaped, dwFlags) => DllCall('Shlwapi\UrlEscape', 'str', pszURL, 'str', pszEscaped, 'uint*', &pcchEscaped, 'uint', dwFlags, 'int')
UrlFixupW(pcszUrl, pszTranslatedUrl, cchMax) => DllCall('Shlwapi\UrlFixupW', 'wstr', pcszUrl, 'ptr', pszTranslatedUrl, 'uint', cchMax, 'int')
UrlGetLocation(pszURL) => DllCall('Shlwapi\UrlGetLocation', 'str', pszURL, 'str')
UrlGetPart(pszIn, pszOut, &pcchOut, dwPart, dwFlags) => DllCall('Shlwapi\UrlGetPart', 'str', pszIn, 'str', pszOut, 'uint*', &pcchOut, 'uint', dwPart, 'uint', dwFlags, 'int')
UrlHash(pszURL, &pbHash, cbHash) => DllCall('Shlwapi\UrlHash', 'str', pszURL, 'uchar*', &pbHash, 'uint', cbHash, 'int')
UrlIs(pszUrl, UrlIs) => DllCall('Shlwapi\UrlIs', 'str', pszUrl, 'uint', UrlIs, 'int')
UrlIsNoHistory(pszURL) => DllCall('Shlwapi\UrlIsNoHistory', 'str', pszURL, 'int')
UrlIsOpaque(pszURL) => DllCall('Shlwapi\UrlIsOpaque', 'str', pszURL, 'int')
UrlUnescape(pszURL, pszUnescaped, &pcchUnescaped, dwFlags) => DllCall('Shlwapi\UrlUnescape', 'str', pszURL, 'str', pszUnescaped, 'uint*', &pcchUnescaped, 'uint', dwFlags, 'int')
WhichPlatform() => DllCall('Shlwapi\WhichPlatform', 'uint')
wnsprintf(pszDest, cchDest, pszFmt, args*) {
	_args := []
	for v in args
		_args.Push('ptr', v)
	_args.Push('int')
	return DllCall('Shlwapi\wnsprintf', 'str', pszDest, 'int', cchDest, 'str', pszFmt, _args*)
}
wvnsprintf(pszDest, cchDest, pszFmt, arglist) => DllCall('Shlwapi\wvnsprintf', 'str', pszDest, 'int', cchDest, 'str', pszFmt, 'ptr', arglist, 'int')
