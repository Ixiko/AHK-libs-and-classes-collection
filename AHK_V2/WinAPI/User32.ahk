ActivateKeyboardLayout(hkl, Flags) => DllCall('User32\ActivateKeyboardLayout', 'ptr', hkl, 'uint', Flags, 'ptr')
AddClipboardFormatListener(hwnd) => DllCall('User32\AddClipboardFormatListener', 'ptr', hwnd, 'int')
AdjustWindowRect(lpRect, dwStyle, bMenu) => DllCall('User32\AdjustWindowRect', 'ptr', lpRect, 'uint', dwStyle, 'int', bMenu, 'int')
AdjustWindowRectEx(lpRect, dwStyle, bMenu, dwExStyle) => DllCall('User32\AdjustWindowRectEx', 'ptr', lpRect, 'uint', dwStyle, 'int', bMenu, 'uint', dwExStyle, 'int')
AllowSetForegroundWindow(dwProcessId) => DllCall('User32\AllowSetForegroundWindow', 'uint', dwProcessId, 'int')
AnimateWindow(hwnd, dwTime, dwFlags) => DllCall('User32\AnimateWindow', 'ptr', hwnd, 'uint', dwTime, 'uint', dwFlags, 'int')
AnyPopup() => DllCall('User32\AnyPopup', 'int')
AppendMenu(hMenu, uFlags, uIDNewItem, lpNewItem) => DllCall('User32\AppendMenu', 'ptr', hMenu, 'uint', uFlags, 'uptr', uIDNewItem, 'str', lpNewItem, 'int')
ArrangeIconicWindows(hwnd) => DllCall('User32\ArrangeIconicWindows', 'ptr', hwnd, 'uint')
AttachThreadInput(idAttach, idAttachTo, fAttach) => DllCall('User32\AttachThreadInput', 'uint', idAttach, 'uint', idAttachTo, 'int', fAttach, 'int')
BeginDeferWindowPos(nNumWindows) => DllCall('User32\BeginDeferWindowPos', 'int', nNumWindows, 'ptr')
BeginPaint(hwnd, lpPaint) => DllCall('User32\BeginPaint', 'ptr', hwnd, 'ptr', lpPaint, 'ptr')
BlockInput_(fBlockIt) => DllCall('User32\BlockInput_', 'int', fBlockIt, 'int')
BringWindowToTop(hwnd) => DllCall('User32\BringWindowToTop', 'ptr', hwnd, 'int')
BroadcastSystemMessage(dwFlags, lpdwRecipients, uiMessage, wParam, lParam) => DllCall('User32\BroadcastSystemMessage', 'uint', dwFlags, 'ptr', lpdwRecipients, 'uint', uiMessage, 'uptr', wParam, 'uptr', lParam, 'int')
BroadcastSystemMessageEx(dwFlags, lpdwRecipients, uiMessage, wParam, lParam, pBSMInfo) => DllCall('User32\BroadcastSystemMessageEx', 'uint', dwFlags, 'ptr', lpdwRecipients, 'uint', uiMessage, 'uptr', wParam, 'uptr', lParam, 'ptr', pBSMInfo, 'int')
CalculatePopupWindowPosition(anchorPoint, windowSize, flags, excludeRect, popupWindowPosition) => DllCall('User32\CalculatePopupWindowPosition', 'ptr', anchorPoint, 'ptr', windowSize, 'uint', flags, 'ptr', excludeRect, 'ptr', popupWindowPosition, 'int')
CallMsgFilter(lpMsg, nCode) => DllCall('User32\CallMsgFilter', 'ptr', lpMsg, 'int', nCode, 'int')
CallNextHookEx(hhk, nCode, wParam, lParam) => DllCall('User32\CallNextHookEx', 'ptr', hhk, 'int', nCode, 'uptr', wParam, 'uptr', lParam, 'ptr')
CallWindowProc(lpPrevWndFunc, hWnd, Msg, wParam, lParam) => DllCall('User32\CallWindowProc', 'ptr', lpPrevWndFunc, 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
CascadeWindows(hwndParent, wHow, lpRect, cKids, lpKids) => DllCall('User32\CascadeWindows', 'ptr', hwndParent, 'uint', wHow, 'ptr', lpRect, 'uint', cKids, 'ptr', lpKids, 'ushort')
ChangeClipboardChain(hWndRemove, hWndNewNext) => DllCall('User32\ChangeClipboardChain', 'ptr', hWndRemove, 'ptr', hWndNewNext, 'int')
ChangeDisplaySettings(lpDevMode, dwflags) => DllCall('User32\ChangeDisplaySettings', 'ptr', lpDevMode, 'uint', dwflags, 'int')
ChangeDisplaySettingsEx(lpszDeviceName, lpDevMode, hwnd, dwflags, lParam) => DllCall('User32\ChangeDisplaySettingsEx', 'str', lpszDeviceName, 'ptr', lpDevMode, 'ptr', hwnd, 'uint', dwflags, 'ptr', lParam, 'int')
ChangeWindowMessageFilter(message, dwFlag) => DllCall('User32\ChangeWindowMessageFilter', 'uint', message, 'uint', dwFlag, 'int')
ChangeWindowMessageFilterEx(hWnd, message, action, pChangeFilterStruct) => DllCall('User32\ChangeWindowMessageFilterEx', 'ptr', hWnd, 'uint', message, 'uint', action, 'ptr', pChangeFilterStruct, 'int')
CharLower(lpsz) => DllCall('User32\CharLower', 'str', lpsz, 'str')
CharLowerBuff(lpsz, cchLength) => DllCall('User32\CharLowerBuff', 'str', lpsz, 'uint', cchLength, 'uint')
CharNext(lpsz) => DllCall('User32\CharNext', 'str', lpsz, 'str')
CharNextExA(CodePage, lpCurrentChar, dwFlags) => DllCall('User32\CharNextExA', 'ushort', CodePage, 'astr', lpCurrentChar, 'uint', dwFlags, 'astr')
CharPrev(lpszStart, lpszCurrent) => DllCall('User32\CharPrev', 'str', lpszStart, 'str', lpszCurrent, 'str')
CharPrevExA(CodePage, lpStart, lpCurrentChar, dwFlags) => DllCall('User32\CharPrevExA', 'ushort', CodePage, 'astr', lpStart, 'astr', lpCurrentChar, 'uint', dwFlags, 'astr')
CharToOem(lpszSrc, lpszDst) => DllCall('User32\CharToOem', 'str', lpszSrc, 'astr', lpszDst, 'int')
CharToOemBuff(lpszSrc, lpszDst, cchDstLength) => DllCall('User32\CharToOemBuff', 'str', lpszSrc, 'astr', lpszDst, 'uint', cchDstLength, 'int')
CharUpper(lpsz) => DllCall('User32\CharUpper', 'str', lpsz, 'str')
CharUpperBuff(lpsz, cchLength) => DllCall('User32\CharUpperBuff', 'str', lpsz, 'uint', cchLength, 'uint')
CheckDlgButton(hDlg, nIDButton, uCheck) => DllCall('User32\CheckDlgButton', 'ptr', hDlg, 'int', nIDButton, 'uint', uCheck, 'int')
CheckMenuItem(hmenu, uIDCheckItem, uCheck) => DllCall('User32\CheckMenuItem', 'ptr', hmenu, 'uint', uIDCheckItem, 'uint', uCheck, 'uint')
CheckMenuRadioItem(hmenu, idFirst, idLast, idCheck, uFlags) => DllCall('User32\CheckMenuRadioItem', 'ptr', hmenu, 'uint', idFirst, 'uint', idLast, 'uint', idCheck, 'uint', uFlags, 'int')
CheckRadioButton(hDlg, nIDFirstButton, nIDLastButton, nIDCheckButton) => DllCall('User32\CheckRadioButton', 'ptr', hDlg, 'int', nIDFirstButton, 'int', nIDLastButton, 'int', nIDCheckButton, 'int')
ChildWindowFromPoint(hWndParent, Point) => DllCall('User32\ChildWindowFromPoint', 'ptr', hWndParent, 'uint64', Point, 'ptr')
ChildWindowFromPointEx(hwndParent, pt, uFlags) => DllCall('User32\ChildWindowFromPointEx', 'ptr', hwndParent, 'uint64', pt, 'uint', uFlags, 'ptr')
ClientToScreen(hWnd, lpPoint) => DllCall('User32\ClientToScreen', 'ptr', hWnd, 'ptr', lpPoint, 'int')
ClipCursor(lpRect) => DllCall('User32\ClipCursor', 'ptr', lpRect, 'int')
CloseClipboard() => DllCall('User32\CloseClipboard', 'int')
CloseDesktop(hDesktop) => DllCall('User32\CloseDesktop', 'ptr', hDesktop, 'int')
CloseGestureInfoHandle(hGestureInfo) => DllCall('User32\CloseGestureInfoHandle', 'ptr', hGestureInfo, 'int')
CloseTouchInputHandle(hTouchInput) => DllCall('User32\CloseTouchInputHandle', 'ptr', hTouchInput, 'int')
CloseWindow(hwnd) => DllCall('User32\CloseWindow', 'ptr', hwnd, 'int')
CloseWindowStation(hWinSta) => DllCall('User32\CloseWindowStation', 'ptr', hWinSta, 'int')
CopyAcceleratorTable(hAccelSrc, lpAccelDst, cAccelEntries) => DllCall('User32\CopyAcceleratorTable', 'ptr', hAccelSrc, 'ptr', lpAccelDst, 'int', cAccelEntries, 'int')
CopyIcon(hIcon) => DllCall('User32\CopyIcon', 'ptr', hIcon, 'ptr')
CopyImage(hImage, uType, cxDesired, cyDesired, fuFlags) => DllCall('User32\CopyImage', 'ptr', hImage, 'uint', uType, 'int', cxDesired, 'int', cyDesired, 'uint', fuFlags, 'ptr')
CopyRect(lprcDst, lprcSrc) => DllCall('User32\CopyRect', 'ptr', lprcDst, 'ptr', lprcSrc, 'int')
CountClipboardFormats() => DllCall('User32\CountClipboardFormats', 'int')
CreateAcceleratorTable(lpaccl, cEntries) => DllCall('User32\CreateAcceleratorTable', 'ptr', lpaccl, 'int', cEntries, 'ptr')
CreateCaret(hWnd, hBitmap, nWidth, nHeight) => DllCall('User32\CreateCaret', 'ptr', hWnd, 'ptr', hBitmap, 'int', nWidth, 'int', nHeight, 'int')
CreateCursor(hInst, xHotSpot, yHotSpot, nWidth, nHeight, pvANDPlane, pvXORPlane) => DllCall('User32\CreateCursor', 'ptr', hInst, 'int', xHotSpot, 'int', yHotSpot, 'int', nWidth, 'int', nHeight, 'ptr', pvANDPlane, 'ptr', pvXORPlane, 'ptr')
CreateDesktop(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa) => DllCall('User32\CreateDesktop', 'str', lpszDesktop, 'str', lpszDevice, 'ptr', pDevmode, 'uint', dwFlags, 'uint', dwDesiredAccess, 'ptr', lpsa, 'ptr')
CreateDesktopEx(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa, ulHeapSize, pvoid) => DllCall('User32\CreateDesktopEx', 'str', lpszDesktop, 'str', lpszDevice, 'ptr', pDevmode, 'uint', dwFlags, 'uint', dwDesiredAccess, 'ptr', lpsa, 'uint', ulHeapSize, 'ptr', pvoid, 'ptr')
CreateDialogIndirectParam(hInstance, lpTemplate, hWndParent, lpDialogFunc, lParamInit) => DllCall('User32\CreateDialogIndirectParam', 'ptr', hInstance, 'ptr', lpTemplate, 'ptr', hWndParent, 'ptr', lpDialogFunc, 'uptr', lParamInit, 'ptr')
CreateDialogParam(hInstance, lpTemplateName, hWndParent, lpDialogFunc, dwInitParam) => DllCall('User32\CreateDialogParam', 'ptr', hInstance, 'str', lpTemplateName, 'ptr', hWndParent, 'ptr', lpDialogFunc, 'uptr', dwInitParam, 'ptr')
CreateIcon(hInstance, nWidth, nHeight, cPlanes, cBitsPixel, &lpbANDbits, &lpbXORbits) => DllCall('User32\CreateIcon', 'ptr', hInstance, 'int', nWidth, 'int', nHeight, 'uchar', cPlanes, 'uchar', cBitsPixel, 'uchar*', &lpbANDbits, 'uchar*', &lpbXORbits, 'ptr')
CreateIconFromResource(presbits, dwResSize, fIcon, dwVer) => DllCall('User32\CreateIconFromResource', 'ptr', presbits, 'uint', dwResSize, 'int', fIcon, 'uint', dwVer, 'ptr')
CreateIconFromResourceEx(pbIconBits, cbIconBits, fIcon, dwVersion, cxDesired, cyDesired, uFlags) => DllCall('User32\CreateIconFromResourceEx', 'ptr', pbIconBits, 'uint', cbIconBits, 'int', fIcon, 'uint', dwVersion, 'int', cxDesired, 'int', cyDesired, 'uint', uFlags, 'ptr')
CreateIconIndirect(piconinfo) => DllCall('User32\CreateIconIndirect', 'ptr', piconinfo, 'ptr')
CreateMDIWindow(lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hInstance, lParam) => DllCall('User32\CreateMDIWindow', 'str', lpClassName, 'str', lpWindowName, 'uint', dwStyle, 'int', X, 'int', Y, 'int', nWidth, 'int', nHeight, 'ptr', hWndParent, 'ptr', hInstance, 'uptr', lParam, 'ptr')
CreateMenu() => DllCall('User32\CreateMenu', 'ptr')
CreatePopupMenu() => DllCall('User32\CreatePopupMenu', 'ptr')
CreateWindowEx(dwExStyle, lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam) => DllCall('User32\CreateWindowEx', 'uint', dwExStyle, 'str', lpClassName, 'str', lpWindowName, 'uint', dwStyle, 'int', x, 'int', y, 'int', nWidth, 'int', nHeight, 'ptr', hWndParent, 'ptr', hMenu, 'ptr', hInstance, 'ptr', lpParam, 'ptr')
CreateWindowStation(lpwinsta, dwFlags, dwDesiredAccess, lpsa) => DllCall('User32\CreateWindowStation', 'str', lpwinsta, 'uint', dwFlags, 'uint', dwDesiredAccess, 'ptr', lpsa, 'ptr')
DdeAbandonTransaction(idInst, hConv, idTransaction) => DllCall('User32\DdeAbandonTransaction', 'uint', idInst, 'ptr', hConv, 'uint', idTransaction, 'int')
DdeAccessData(hData, pcbDataSize) => DllCall('User32\DdeAccessData', 'ptr', hData, 'ptr', pcbDataSize, 'ptr')
DdeAddData(hData, pSrc, cb, cbOff) => DllCall('User32\DdeAddData', 'ptr', hData, 'ptr', pSrc, 'uint', cb, 'uint', cbOff, 'ptr')
DdeClientTransaction(pData, cbData, hConv, hszItem, wFmt, wType, dwTimeout, pdwResult) => DllCall('User32\DdeClientTransaction', 'ptr', pData, 'uint', cbData, 'ptr', hConv, 'ptr', hszItem, 'uint', wFmt, 'uint', wType, 'uint', dwTimeout, 'ptr', pdwResult, 'ptr')
DdeCmpStringHandles(hsz1, hsz2) => DllCall('User32\DdeCmpStringHandles', 'ptr', hsz1, 'ptr', hsz2, 'int')
DdeConnect(idInst, hszService, hszTopic, pCC) => DllCall('User32\DdeConnect', 'uint', idInst, 'ptr', hszService, 'ptr', hszTopic, 'ptr', pCC, 'ptr')
DdeConnectList(idInst, hszService, hszTopic, hConvList, pCC) => DllCall('User32\DdeConnectList', 'uint', idInst, 'ptr', hszService, 'ptr', hszTopic, 'ptr', hConvList, 'ptr', pCC, 'ptr')
DdeCreateDataHandle(idInst, pSrc, cb, cbOff, hszItem, wFmt, afCmd) => DllCall('User32\DdeCreateDataHandle', 'uint', idInst, 'ptr', pSrc, 'uint', cb, 'uint', cbOff, 'ptr', hszItem, 'uint', wFmt, 'uint', afCmd, 'ptr')
DdeCreateStringHandle(idInst, psz, iCodePage) => DllCall('User32\DdeCreateStringHandle', 'uint', idInst, 'str', psz, 'int', iCodePage, 'ptr')
DdeDisconnect(hConv) => DllCall('User32\DdeDisconnect', 'ptr', hConv, 'int')
DdeDisconnectList(hConvList) => DllCall('User32\DdeDisconnectList', 'ptr', hConvList, 'int')
DdeEnableCallback(idInst, hConv, wCmd) => DllCall('User32\DdeEnableCallback', 'uint', idInst, 'ptr', hConv, 'uint', wCmd, 'int')
DdeFreeDataHandle(hData) => DllCall('User32\DdeFreeDataHandle', 'ptr', hData, 'int')
DdeFreeStringHandle(idInst, hsz) => DllCall('User32\DdeFreeStringHandle', 'uint', idInst, 'ptr', hsz, 'int')
DdeGetData(hData, pDst, cbMax, cbOff) => DllCall('User32\DdeGetData', 'ptr', hData, 'ptr', pDst, 'uint', cbMax, 'uint', cbOff, 'uint')
DdeGetLastError(idInst) => DllCall('User32\DdeGetLastError', 'uint', idInst, 'uint')
DdeImpersonateClient(hConv) => DllCall('User32\DdeImpersonateClient', 'ptr', hConv, 'int')
DdeInitialize(pidInst, pfnCallback, afCmd, ulRes) => DllCall('User32\DdeInitialize', 'ptr', pidInst, 'ptr', pfnCallback, 'uint', afCmd, 'uint', ulRes, 'uint')
DdeKeepStringHandle(idInst, hsz) => DllCall('User32\DdeKeepStringHandle', 'uint', idInst, 'ptr', hsz, 'int')
DdeNameService(idInst, hsz1, hsz2, afCmd) => DllCall('User32\DdeNameService', 'uint', idInst, 'ptr', hsz1, 'ptr', hsz2, 'uint', afCmd, 'ptr')
DdePostAdvise(idInst, hszTopic, hszItem) => DllCall('User32\DdePostAdvise', 'uint', idInst, 'ptr', hszTopic, 'ptr', hszItem, 'int')
DdeQueryConvInfo(hConv, idTransaction, pConvInfo) => DllCall('User32\DdeQueryConvInfo', 'ptr', hConv, 'uint', idTransaction, 'ptr', pConvInfo, 'uint')
DdeQueryNextServer(hConvList, hConvPrev) => DllCall('User32\DdeQueryNextServer', 'ptr', hConvList, 'ptr', hConvPrev, 'ptr')
DdeQueryString(idInst, hsz, psz, cchMax, iCodePage) => DllCall('User32\DdeQueryString', 'uint', idInst, 'ptr', hsz, 'str', psz, 'uint', cchMax, 'int', iCodePage, 'uint')
DdeReconnect(hConv) => DllCall('User32\DdeReconnect', 'ptr', hConv, 'ptr')
DdeSetQualityOfService(hwndClient, pqosNew, pqosPrev) => DllCall('User32\DdeSetQualityOfService', 'ptr', hwndClient, 'ptr', pqosNew, 'ptr', pqosPrev, 'int')
DdeSetUserHandle(hConv, id, hUser) => DllCall('User32\DdeSetUserHandle', 'ptr', hConv, 'uint', id, 'uptr', hUser, 'int')
DdeUnaccessData(hData) => DllCall('User32\DdeUnaccessData', 'ptr', hData, 'int')
DdeUninitialize(idInst) => DllCall('User32\DdeUninitialize', 'uint', idInst, 'int')
DefDlgProc(hDlg, Msg, wParam, lParam) => DllCall('User32\DefDlgProc', 'ptr', hDlg, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
DefFrameProc(hWnd, hWndMDIClient, uMsg, wParam, lParam) => DllCall('User32\DefFrameProc', 'ptr', hWnd, 'ptr', hWndMDIClient, 'uint', uMsg, 'uptr', wParam, 'uptr', lParam, 'ptr')
DefMDIChildProc(hWnd, uMsg, wParam, lParam) => DllCall('User32\DefMDIChildProc', 'ptr', hWnd, 'uint', uMsg, 'uptr', wParam, 'uptr', lParam, 'ptr')
DefRawInputProc(paRawInput, nInput, cbSizeHeader) => DllCall('User32\DefRawInputProc', 'ptr', paRawInput, 'int', nInput, 'uint', cbSizeHeader, 'ptr')
DefWindowProc(hWnd, Msg, wParam, lParam) => DllCall('User32\DefWindowProc', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
DeferWindowPos(hWinPosInfo, hWnd, hWndInsertAfter, x, y, cx, cy, uFlags) => DllCall('User32\DeferWindowPos', 'ptr', hWinPosInfo, 'ptr', hWnd, 'ptr', hWndInsertAfter, 'int', x, 'int', y, 'int', cx, 'int', cy, 'uint', uFlags, 'ptr')
DeleteMenu(hMenu, uPosition, uFlags) => DllCall('User32\DeleteMenu', 'ptr', hMenu, 'uint', uPosition, 'uint', uFlags, 'int')
DeregisterShellHookWindow(hwnd) => DllCall('User32\DeregisterShellHookWindow', 'ptr', hwnd, 'int')
DestroyAcceleratorTable(hAccel) => DllCall('User32\DestroyAcceleratorTable', 'ptr', hAccel, 'int')
DestroyCaret() => DllCall('User32\DestroyCaret', 'int')
DestroyCursor(hCursor) => DllCall('User32\DestroyCursor', 'ptr', hCursor, 'int')
DestroyIcon(hIcon) => DllCall('User32\DestroyIcon', 'ptr', hIcon, 'int')
DestroyMenu(hMenu) => DllCall('User32\DestroyMenu', 'ptr', hMenu, 'int')
DestroyWindow(hwnd) => DllCall('User32\DestroyWindow', 'ptr', hwnd, 'int')
DialogBoxIndirectParam(hInstance, hDialogTemplate, hWndParent, lpDialogFunc, dwInitParam) => DllCall('User32\DialogBoxIndirectParam', 'ptr', hInstance, 'ptr', hDialogTemplate, 'ptr', hWndParent, 'ptr', lpDialogFunc, 'uptr', dwInitParam, 'ptr')
DialogBoxParam(hInstance, lpTemplateName, hWndParent, lpDialogFunc, dwInitParam) => DllCall('User32\DialogBoxParam', 'ptr', hInstance, 'str', lpTemplateName, 'ptr', hWndParent, 'ptr', lpDialogFunc, 'uptr', dwInitParam, 'ptr')
DispatchMessage(lpmsg) => DllCall('User32\DispatchMessage', 'ptr', lpmsg, 'ptr')
DlgDirList(hDlg, lpPathSpec, nIDListBox, nIDStaticPath, uFileType) => DllCall('User32\DlgDirList', 'ptr', hDlg, 'str', lpPathSpec, 'int', nIDListBox, 'int', nIDStaticPath, 'uint', uFileType, 'int')
DlgDirListComboBox(hDlg, lpPathSpec, nIDComboBox, nIDStaticPath, uFiletype) => DllCall('User32\DlgDirListComboBox', 'ptr', hDlg, 'str', lpPathSpec, 'int', nIDComboBox, 'int', nIDStaticPath, 'uint', uFiletype, 'int')
DlgDirSelectComboBoxEx(hDlg, lpString, nCount, nIDComboBox) => DllCall('User32\DlgDirSelectComboBoxEx', 'ptr', hDlg, 'str', lpString, 'int', nCount, 'int', nIDComboBox, 'int')
DlgDirSelectEx(hDlg, lpString, nCount, nIDListBox) => DllCall('User32\DlgDirSelectEx', 'ptr', hDlg, 'str', lpString, 'int', nCount, 'int', nIDListBox, 'int')
DragDetect(hwnd, pt) => DllCall('User32\DragDetect', 'ptr', hwnd, 'uint64', pt, 'int')
DrawAnimatedRects(hwnd, idAni, lprcFrom, lprcTo) => DllCall('User32\DrawAnimatedRects', 'ptr', hwnd, 'int', idAni, 'ptr', lprcFrom, 'ptr', lprcTo, 'int')
DrawCaption(hwnd, hdc, lprc, uFlags) => DllCall('User32\DrawCaption', 'ptr', hwnd, 'ptr', hdc, 'ptr', lprc, 'uint', uFlags, 'int')
DrawEdge(hdc, qrc, edge, grfFlags) => DllCall('User32\DrawEdge', 'ptr', hdc, 'ptr', qrc, 'uint', edge, 'uint', grfFlags, 'int')
DrawFocusRect(hDC, lprc) => DllCall('User32\DrawFocusRect', 'ptr', hDC, 'ptr', lprc, 'int')
DrawFrameControl(hdc, lprc, uType, uState) => DllCall('User32\DrawFrameControl', 'ptr', hdc, 'ptr', lprc, 'uint', uType, 'uint', uState, 'int')
DrawIcon(hDC, X, Y, hIcon) => DllCall('User32\DrawIcon', 'ptr', hDC, 'int', X, 'int', Y, 'ptr', hIcon, 'int')
DrawIconEx(hdc, xLeft, yTop, hIcon, cxWidth, cyWidth, istepIfAniCur, hbrFlickerFreeDraw, diFlags) => DllCall('User32\DrawIconEx', 'ptr', hdc, 'int', xLeft, 'int', yTop, 'ptr', hIcon, 'int', cxWidth, 'int', cyWidth, 'uint', istepIfAniCur, 'ptr', hbrFlickerFreeDraw, 'uint', diFlags, 'int')
DrawMenuBar(hwnd) => DllCall('User32\DrawMenuBar', 'ptr', hwnd, 'int')
DrawState(hdc, hbr, lpOutputFunc, lData, wData, x, y, cx, cy, fuFlags) => DllCall('User32\DrawState', 'ptr', hdc, 'ptr', hbr, 'ptr', lpOutputFunc, 'uptr', lData, 'uptr', wData, 'int', x, 'int', y, 'int', cx, 'int', cy, 'uint', fuFlags, 'int')
DrawText(hDC, lpchText, nCount, lpRect, uFormat) => DllCall('User32\DrawText', 'ptr', hDC, 'str', lpchText, 'int', nCount, 'ptr', lpRect, 'uint', uFormat, 'int')
DrawTextEx(hdc, lpchText, cchText, lprc, dwDTFormat, lpDTParams) => DllCall('User32\DrawTextEx', 'ptr', hdc, 'str', lpchText, 'int', cchText, 'ptr', lprc, 'uint', dwDTFormat, 'ptr', lpDTParams, 'int')
EmptyClipboard() => DllCall('User32\EmptyClipboard', 'int')
EnableMenuItem(hMenu, uIDEnableItem, uEnable) => DllCall('User32\EnableMenuItem', 'ptr', hMenu, 'uint', uIDEnableItem, 'uint', uEnable, 'int')
EnableScrollBar(hWnd, wSBflags, wArrows) => DllCall('User32\EnableScrollBar', 'ptr', hWnd, 'uint', wSBflags, 'uint', wArrows, 'int')
EnableWindow(hWnd, bEnable) => DllCall('User32\EnableWindow', 'ptr', hWnd, 'int', bEnable, 'int')
EndDeferWindowPos(hWinPosInfo) => DllCall('User32\EndDeferWindowPos', 'ptr', hWinPosInfo, 'int')
EndDialog(hDlg, nResult) => DllCall('User32\EndDialog', 'ptr', hDlg, 'ptr', nResult, 'int')
EndMenu() => DllCall('User32\EndMenu', 'int')
EndPaint(hWnd, lpPaint) => DllCall('User32\EndPaint', 'ptr', hWnd, 'ptr', lpPaint, 'int')
EndTask(hWnd, fShutDown, fForce) => DllCall('User32\EndTask', 'ptr', hWnd, 'int', fShutDown, 'int', fForce, 'int')
EnumChildWindows(hWndParent, lpEnumFunc, lParam) => DllCall('User32\EnumChildWindows', 'ptr', hWndParent, 'ptr', lpEnumFunc, 'uptr', lParam, 'int')
EnumClipboardFormats(format) => DllCall('User32\EnumClipboardFormats', 'uint', format, 'uint')
EnumDesktopWindows(hDesktop, lpfn, lParam) => DllCall('User32\EnumDesktopWindows', 'ptr', hDesktop, 'ptr', lpfn, 'uptr', lParam, 'int')
EnumDesktops(hwinsta, lpEnumFunc, lParam) => DllCall('User32\EnumDesktops', 'ptr', hwinsta, 'ptr', lpEnumFunc, 'uptr', lParam, 'int')
EnumDisplayDevices(lpDevice, iDevNum, lpDisplayDevice, dwFlags) => DllCall('User32\EnumDisplayDevices', 'str', lpDevice, 'uint', iDevNum, 'ptr', lpDisplayDevice, 'uint', dwFlags, 'int')
EnumDisplayMonitors(hdc, lprcClip, lpfnEnum, dwData) => DllCall('User32\EnumDisplayMonitors', 'ptr', hdc, 'ptr', lprcClip, 'ptr', lpfnEnum, 'uptr', dwData, 'int')
EnumDisplaySettings(lpszDeviceName, iModeNum, lpDevMode) => DllCall('User32\EnumDisplaySettings', 'str', lpszDeviceName, 'uint', iModeNum, 'ptr', lpDevMode, 'int')
EnumDisplaySettingsEx(lpszDeviceName, iModeNum, lpDevMode, dwFlags) => DllCall('User32\EnumDisplaySettingsEx', 'str', lpszDeviceName, 'uint', iModeNum, 'ptr', lpDevMode, 'uint', dwFlags, 'int')
EnumProps(hWnd, lpEnumFunc) => DllCall('User32\EnumProps', 'ptr', hWnd, 'ptr', lpEnumFunc, 'int')
EnumPropsEx(hWnd, lpEnumFunc, lParam) => DllCall('User32\EnumPropsEx', 'ptr', hWnd, 'ptr', lpEnumFunc, 'uptr', lParam, 'int')
EnumThreadWindows(dwThreadId, lpfn, lParam) => DllCall('User32\EnumThreadWindows', 'uint', dwThreadId, 'ptr', lpfn, 'uptr', lParam, 'int')
EnumWindowStations(lpEnumFunc, lParam) => DllCall('User32\EnumWindowStations', 'ptr', lpEnumFunc, 'uptr', lParam, 'int')
EnumWindows(lpEnumFunc, lParam) => DllCall('User32\EnumWindows', 'ptr', lpEnumFunc, 'uptr', lParam, 'int')
EqualRect(lprc1, lprc2) => DllCall('User32\EqualRect', 'ptr', lprc1, 'ptr', lprc2, 'int')
ExcludeUpdateRgn(hDC, hWnd) => DllCall('User32\ExcludeUpdateRgn', 'ptr', hDC, 'ptr', hWnd, 'int')
ExitWindowsEx(uFlags, dwReason) => DllCall('User32\ExitWindowsEx', 'uint', uFlags, 'uint', dwReason, 'int')
FillRect(hDC, lprc, hbr) => DllCall('User32\FillRect', 'ptr', hDC, 'ptr', lprc, 'ptr', hbr, 'int')
FindWindow(lpClassName, lpWindowName) => DllCall('User32\FindWindow', 'str', lpClassName, 'str', lpWindowName, 'ptr')
FindWindowEx(hwndParent, hwndChildAfter, lpszClass, lpszWindow) => DllCall('User32\FindWindowEx', 'ptr', hwndParent, 'ptr', hwndChildAfter, 'str', lpszClass, 'str', lpszWindow, 'ptr')
FlashWindow(hWnd, bInvert) => DllCall('User32\FlashWindow', 'ptr', hWnd, 'int', bInvert, 'int')
FlashWindowEx(pfwi) => DllCall('User32\FlashWindowEx', 'ptr', pfwi, 'int')
FrameRect(hDC, lprc, hbr) => DllCall('User32\FrameRect', 'ptr', hDC, 'ptr', lprc, 'ptr', hbr, 'int')
FreeDDElParam(msg, lParam) => DllCall('User32\FreeDDElParam', 'uint', msg, 'uptr', lParam, 'int')
GetActiveWindow() => DllCall('User32\GetActiveWindow', 'ptr')
GetAltTabInfo(hwnd, iItem, pati, pszItemText, cchItemText) => DllCall('User32\GetAltTabInfo', 'ptr', hwnd, 'int', iItem, 'ptr', pati, 'str', pszItemText, 'uint', cchItemText, 'int')
GetAncestor(hwnd, gaFlags) => DllCall('User32\GetAncestor', 'ptr', hwnd, 'uint', gaFlags, 'ptr')
GetAsyncKeyState(vKey) => DllCall('User32\GetAsyncKeyState', 'int', vKey, 'short')
GetCapture() => DllCall('User32\GetCapture', 'ptr')
GetCaretBlinkTime() => DllCall('User32\GetCaretBlinkTime', 'uint')
GetCaretPos(lpPoint) => DllCall('User32\GetCaretPos', 'ptr', lpPoint, 'int')
GetClassInfo(hInstance, lpClassName, lpWndClass) => DllCall('User32\GetClassInfo', 'ptr', hInstance, 'str', lpClassName, 'ptr', lpWndClass, 'int')
GetClassInfoEx(hinst, lpszClass, lpwcx) => DllCall('User32\GetClassInfoEx', 'ptr', hinst, 'str', lpszClass, 'ptr', lpwcx, 'int')
GetClassLong(hWnd, nIndex) => DllCall('User32\GetClassLong', 'ptr', hWnd, 'int', nIndex, 'uint')
GetClassName(hWnd, lpClassName, nMaxCount) => DllCall('User32\GetClassName', 'ptr', hWnd, 'str', lpClassName, 'int', nMaxCount, 'int')
GetClassWord(hWnd, nIndex) => DllCall('User32\GetClassWord', 'ptr', hWnd, 'int', nIndex, 'ushort')
GetClientRect(hWnd, lpRect) => DllCall('User32\GetClientRect', 'ptr', hWnd, 'ptr', lpRect, 'int')
GetClipCursor(lpRect) => DllCall('User32\GetClipCursor', 'ptr', lpRect, 'int')
GetClipboardData(uFormat) => DllCall('User32\GetClipboardData', 'uint', uFormat, 'ptr')
GetClipboardFormatName(format, lpszFormatName, cchMaxCount) => DllCall('User32\GetClipboardFormatName', 'uint', format, 'str', lpszFormatName, 'int', cchMaxCount, 'int')
GetClipboardOwner() => DllCall('User32\GetClipboardOwner', 'ptr')
GetClipboardSequenceNumber() => DllCall('User32\GetClipboardSequenceNumber', 'uint')
GetClipboardViewer() => DllCall('User32\GetClipboardViewer', 'ptr')
GetComboBoxInfo(hwndCombo, pcbi) => DllCall('User32\GetComboBoxInfo', 'ptr', hwndCombo, 'ptr', pcbi, 'int')
GetCursor() => DllCall('User32\GetCursor', 'ptr')
GetCursorInfo(pci) => DllCall('User32\GetCursorInfo', 'ptr', pci, 'int')
GetCursorPos(lpPoint) => DllCall('User32\GetCursorPos', 'ptr', lpPoint, 'int')
GetDC(hwnd) => DllCall('User32\GetDC', 'ptr', hwnd, 'ptr')
GetDCEx(hWnd, hrgnClip, flags) => DllCall('User32\GetDCEx', 'ptr', hWnd, 'ptr', hrgnClip, 'uint', flags, 'ptr')
GetDesktopWindow() => DllCall('User32\GetDesktopWindow', 'ptr')
GetDialogBaseUnits() => DllCall('User32\GetDialogBaseUnits', 'int')
GetDlgCtrlID(hwndCtl) => DllCall('User32\GetDlgCtrlID', 'ptr', hwndCtl, 'int')
GetDlgItem(hDlg, nIDDlgItem) => DllCall('User32\GetDlgItem', 'ptr', hDlg, 'int', nIDDlgItem, 'ptr')
GetDlgItemInt(hDlg, nIDDlgItem, &lpTranslated, bSigned) => DllCall('User32\GetDlgItemInt', 'ptr', hDlg, 'int', nIDDlgItem, 'int*', &lpTranslated, 'int', bSigned, 'uint')
GetDlgItemText(hDlg, nIDDlgItem, lpString, nMaxCount) => DllCall('User32\GetDlgItemText', 'ptr', hDlg, 'int', nIDDlgItem, 'str', lpString, 'int', nMaxCount, 'uint')
GetDoubleClickTime() => DllCall('User32\GetDoubleClickTime', 'uint')
GetFocus() => DllCall('User32\GetFocus', 'ptr')
GetForegroundWindow() => DllCall('User32\GetForegroundWindow', 'ptr')
GetGUIThreadInfo(idThread, lpgui) => DllCall('User32\GetGUIThreadInfo', 'uint', idThread, 'ptr', lpgui, 'int')
GetGestureConfig(hwnd, dwReserved, dwFlags, pcIDs, pGestureConfig, cbSize) => DllCall('User32\GetGestureConfig', 'ptr', hwnd, 'uint', dwReserved, 'uint', dwFlags, 'ptr', pcIDs, 'ptr', pGestureConfig, 'uint', cbSize, 'int')
GetGestureExtraArgs(hGestureInfo, cbExtraArgs, pExtraArgs) => DllCall('User32\GetGestureExtraArgs', 'ptr', hGestureInfo, 'uint', cbExtraArgs, 'ptr', pExtraArgs, 'int')
GetGestureInfo(hGestureInfo, pGestureInfo) => DllCall('User32\GetGestureInfo', 'ptr', hGestureInfo, 'ptr', pGestureInfo, 'int')
GetGuiResources(hProcess, uiFlags) => DllCall('User32\GetGuiResources', 'ptr', hProcess, 'uint', uiFlags, 'uint')
GetIconInfo(hIcon, piconinfo) => DllCall('User32\GetIconInfo', 'ptr', hIcon, 'ptr', piconinfo, 'int')
GetIconInfoEx(hIcon, piconinfoex) => DllCall('User32\GetIconInfoEx', 'ptr', hIcon, 'ptr', piconinfoex, 'int')
GetInputState() => DllCall('User32\GetInputState', 'int')
GetKBCodePage() => DllCall('User32\GetKBCodePage', 'uint')
GetKeyNameText(lParam, lpString, cchSize) => DllCall('User32\GetKeyNameText', 'int', lParam, 'str', lpString, 'int', cchSize, 'int')
GetKeyState_(nVirtKey) => DllCall('User32\GetKeyState_', 'int', nVirtKey, 'short')
GetKeyboardLayout(idThread) => DllCall('User32\GetKeyboardLayout', 'uint', idThread, 'ptr')
GetKeyboardLayoutList(nBuff, lpList) => DllCall('User32\GetKeyboardLayoutList', 'int', nBuff, 'ptr', lpList, 'int')
GetKeyboardLayoutName(pwszKLID) => DllCall('User32\GetKeyboardLayoutName', 'str', pwszKLID, 'int')
GetKeyboardState(lpKeyState) => DllCall('User32\GetKeyboardState', 'ptr', lpKeyState, 'int')
GetKeyboardType(nTypeFlag) => DllCall('User32\GetKeyboardType', 'int', nTypeFlag, 'int')
GetLastActivePopup(hwnd) => DllCall('User32\GetLastActivePopup', 'ptr', hwnd, 'ptr')
GetLastInputInfo(plii) => DllCall('User32\GetLastInputInfo', 'ptr', plii, 'int')
GetLayeredWindowAttributes(hwnd, &pcrKey, &pbAlpha, &pdwFlags) => DllCall('User32\GetLayeredWindowAttributes', 'ptr', hwnd, 'uint*', &pcrKey, 'uchar*', &pbAlpha, 'uint*', &pdwFlags, 'int')
GetListBoxInfo(hwnd) => DllCall('User32\GetListBoxInfo', 'ptr', hwnd, 'uint')
GetMenu(hwnd) => DllCall('User32\GetMenu', 'ptr', hwnd, 'ptr')
GetMenuBarInfo(hwnd, idObject, idItem, pmbi) => DllCall('User32\GetMenuBarInfo', 'ptr', hwnd, 'int', idObject, 'int', idItem, 'ptr', pmbi, 'int')
GetMenuCheckMarkDimensions() => DllCall('User32\GetMenuCheckMarkDimensions', 'int')
GetMenuContextHelpId(hmenu) => DllCall('User32\GetMenuContextHelpId', 'ptr', hmenu, 'uint')
GetMenuDefaultItem(hMenu, fByPos, gmdiFlags) => DllCall('User32\GetMenuDefaultItem', 'ptr', hMenu, 'uint', fByPos, 'uint', gmdiFlags, 'uint')
GetMenuInfo(hmenu, lpcmi) => DllCall('User32\GetMenuInfo', 'ptr', hmenu, 'ptr', lpcmi, 'int')
GetMenuItemCount(hMenu) => DllCall('User32\GetMenuItemCount', 'ptr', hMenu, 'int')
GetMenuItemID(hMenu, nPos) => DllCall('User32\GetMenuItemID', 'ptr', hMenu, 'int', nPos, 'uint')
GetMenuItemInfo(hMenu, uItem, fByPosition, lpmii) => DllCall('User32\GetMenuItemInfo', 'ptr', hMenu, 'uint', uItem, 'int', fByPosition, 'ptr', lpmii, 'int')
GetMenuItemRect(hWnd, hMenu, uItem, lprcItem) => DllCall('User32\GetMenuItemRect', 'ptr', hWnd, 'ptr', hMenu, 'uint', uItem, 'ptr', lprcItem, 'int')
GetMenuState(hMenu, uId, uFlags) => DllCall('User32\GetMenuState', 'ptr', hMenu, 'uint', uId, 'uint', uFlags, 'uint')
GetMenuString(hMenu, uIDItem, lpString, nMaxCount, uFlag) => DllCall('User32\GetMenuString', 'ptr', hMenu, 'uint', uIDItem, 'str', lpString, 'int', nMaxCount, 'uint', uFlag, 'int')
GetMessage(lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax) => DllCall('User32\GetMessage', 'ptr', lpMsg, 'ptr', hWnd, 'uint', wMsgFilterMin, 'uint', wMsgFilterMax, 'int')
GetMessageExtraInfo() => DllCall('User32\GetMessageExtraInfo', 'uptr')
GetMessagePos() => DllCall('User32\GetMessagePos', 'uint')
GetMessageTime() => DllCall('User32\GetMessageTime', 'int')
GetMonitorInfo(hMonitor, lpmi) => DllCall('User32\GetMonitorInfo', 'ptr', hMonitor, 'ptr', lpmi, 'int')
GetMouseMovePointsEx(cbSize, lppt, lpptBuf, nBufPoints, resolution) => DllCall('User32\GetMouseMovePointsEx', 'uint', cbSize, 'ptr', lppt, 'ptr', lpptBuf, 'int', nBufPoints, 'uint', resolution, 'int')
GetNextDlgGroupItem(hDlg, hCtl, bPrevious) => DllCall('User32\GetNextDlgGroupItem', 'ptr', hDlg, 'ptr', hCtl, 'int', bPrevious, 'ptr')
GetNextDlgTabItem(hDlg, hCtl, bPrevious) => DllCall('User32\GetNextDlgTabItem', 'ptr', hDlg, 'ptr', hCtl, 'int', bPrevious, 'ptr')
GetOpenClipboardWindow() => DllCall('User32\GetOpenClipboardWindow', 'ptr')
GetParent(hwnd) => DllCall('User32\GetParent', 'ptr', hwnd, 'ptr')
GetPhysicalCursorPos(lpPoint) => DllCall('User32\GetPhysicalCursorPos', 'ptr', lpPoint, 'int')
GetPriorityClipboardFormat(&paFormatPriorityList, cFormats) => DllCall('User32\GetPriorityClipboardFormat', 'uint*', &paFormatPriorityList, 'int', cFormats, 'int')
GetProcessDefaultLayout(&pdwDefaultLayout) => DllCall('User32\GetProcessDefaultLayout', 'uint*', &pdwDefaultLayout, 'int')
GetProcessWindowStation() => DllCall('User32\GetProcessWindowStation', 'ptr')
GetProp(hWnd, lpString) => DllCall('User32\GetProp', 'ptr', hWnd, 'str', lpString, 'ptr')
GetQueueStatus(flags) => DllCall('User32\GetQueueStatus', 'uint', flags, 'uint')
GetRawInputBuffer(pData, pcbSize, cbSizeHeader) => DllCall('User32\GetRawInputBuffer', 'ptr', pData, 'ptr', pcbSize, 'uint', cbSizeHeader, 'uint')
GetRawInputData(hRawInput, uiCommand, pData, pcbSize, cbSizeHeader) => DllCall('User32\GetRawInputData', 'ptr', hRawInput, 'uint', uiCommand, 'ptr', pData, 'ptr', pcbSize, 'uint', cbSizeHeader, 'uint')
GetRawInputDeviceInfo(hDevice, uiCommand, pData, pcbSize) => DllCall('User32\GetRawInputDeviceInfo', 'ptr', hDevice, 'uint', uiCommand, 'ptr', pData, 'ptr', pcbSize, 'uint')
GetRawInputDeviceList(pRawInputDeviceList, puiNumDevices, cbSize) => DllCall('User32\GetRawInputDeviceList', 'ptr', pRawInputDeviceList, 'ptr', puiNumDevices, 'uint', cbSize, 'uint')
GetRegisteredRawInputDevices(pRawInputDevices, puiNumDevices, cbSize) => DllCall('User32\GetRegisteredRawInputDevices', 'ptr', pRawInputDevices, 'ptr', puiNumDevices, 'uint', cbSize, 'uint')
GetScrollBarInfo(hwnd, idObject, psbi) => DllCall('User32\GetScrollBarInfo', 'ptr', hwnd, 'int', idObject, 'ptr', psbi, 'int')
GetScrollInfo(hwnd, fnBar, lpsi) => DllCall('User32\GetScrollInfo', 'ptr', hwnd, 'int', fnBar, 'ptr', lpsi, 'int')
GetScrollPos(hWnd, nBar) => DllCall('User32\GetScrollPos', 'ptr', hWnd, 'int', nBar, 'int')
GetScrollRange(hWnd, nBar, lpMinPos, lpMaxPos) => DllCall('User32\GetScrollRange', 'ptr', hWnd, 'int', nBar, 'ptr', lpMinPos, 'ptr', lpMaxPos, 'int')
GetShellWindow() => DllCall('User32\GetShellWindow', 'ptr')
GetSubMenu(hMenu, nPos) => DllCall('User32\GetSubMenu', 'ptr', hMenu, 'int', nPos, 'ptr')
GetSysColor(nIndex) => DllCall('User32\GetSysColor', 'int', nIndex, 'uint')
GetSysColorBrush(nIndex) => DllCall('User32\GetSysColorBrush', 'int', nIndex, 'ptr')
GetSystemMenu(hWnd, bRevert) => DllCall('User32\GetSystemMenu', 'ptr', hWnd, 'int', bRevert, 'ptr')
GetSystemMetrics(nIndex) => DllCall('User32\GetSystemMetrics', 'int', nIndex, 'int')
GetTabbedTextExtent(hDC, lpString, nCount, nTabPositions, lpnTabStopPositions) => DllCall('User32\GetTabbedTextExtent', 'ptr', hDC, 'str', lpString, 'int', nCount, 'int', nTabPositions, 'ptr', lpnTabStopPositions, 'uint')
GetThreadDesktop(dwThreadId) => DllCall('User32\GetThreadDesktop', 'uint', dwThreadId, 'ptr')
GetTitleBarInfo(hwnd, pti) => DllCall('User32\GetTitleBarInfo', 'ptr', hwnd, 'ptr', pti, 'int')
GetTopWindow(hWnd) => DllCall('User32\GetTopWindow', 'ptr', hWnd, 'ptr')
GetTouchInputInfo(hTouchInput, cInputs, pInputs, cbSize) => DllCall('User32\GetTouchInputInfo', 'ptr', hTouchInput, 'uint', cInputs, 'ptr', pInputs, 'int', cbSize, 'int')
GetUpdateRect(hWnd, lpRect, bErase) => DllCall('User32\GetUpdateRect', 'ptr', hWnd, 'ptr', lpRect, 'int', bErase, 'int')
GetUpdateRgn(hWnd, hRgn, bErase) => DllCall('User32\GetUpdateRgn', 'ptr', hWnd, 'ptr', hRgn, 'int', bErase, 'int')
GetUpdatedClipboardFormats(lpuiFormats, cFormats, pcFormatsOut) => DllCall('User32\GetUpdatedClipboardFormats', 'ptr', lpuiFormats, 'uint', cFormats, 'ptr', pcFormatsOut, 'int')
GetUserObjectInformation(hObj, nIndex, pvInfo, nLength, lpnLengthNeeded) => DllCall('User32\GetUserObjectInformation', 'ptr', hObj, 'int', nIndex, 'ptr', pvInfo, 'uint', nLength, 'ptr', lpnLengthNeeded, 'int')
GetUserObjectSecurity(hObj, pSIRequested, pSD, nLength, lpnLengthNeeded) => DllCall('User32\GetUserObjectSecurity', 'ptr', hObj, 'ptr', pSIRequested, 'ptr', pSD, 'uint', nLength, 'ptr', lpnLengthNeeded, 'int')
GetWindow(hWnd, uCmd) => DllCall('User32\GetWindow', 'ptr', hWnd, 'uint', uCmd, 'ptr')
GetWindowContextHelpId(hwnd) => DllCall('User32\GetWindowContextHelpId', 'ptr', hwnd, 'uint')
GetWindowDC(hwnd) => DllCall('User32\GetWindowDC', 'ptr', hwnd, 'ptr')
GetWindowDisplayAffinity(hWnd, &dwAffinity) => DllCall('User32\GetWindowDisplayAffinity', 'ptr', hWnd, 'uint*', &dwAffinity, 'int')
GetWindowInfo(hwnd, pwi) => DllCall('User32\GetWindowInfo', 'ptr', hwnd, 'ptr', pwi, 'int')
GetWindowLong(hWnd, nIndex) => DllCall('User32\GetWindowLong', 'ptr', hWnd, 'int', nIndex, 'int')
GetWindowModuleFileName(hwnd, lpszFileName, cchFileNameMax) => DllCall('User32\GetWindowModuleFileName', 'ptr', hwnd, 'str', lpszFileName, 'uint', cchFileNameMax, 'uint')
GetWindowPlacement(hWnd, lpwndpl) => DllCall('User32\GetWindowPlacement', 'ptr', hWnd, 'ptr', lpwndpl, 'int')
GetWindowRect(hWnd, lpRect) => DllCall('User32\GetWindowRect', 'ptr', hWnd, 'ptr', lpRect, 'int')
GetWindowRgn(hWnd, hRgn) => DllCall('User32\GetWindowRgn', 'ptr', hWnd, 'ptr', hRgn, 'int')
GetWindowRgnBox(hWnd, lprc) => DllCall('User32\GetWindowRgnBox', 'ptr', hWnd, 'ptr', lprc, 'int')
GetWindowText(hWnd, lpString, nMaxCount) => DllCall('User32\GetWindowText', 'ptr', hWnd, 'str', lpString, 'int', nMaxCount, 'int')
GetWindowTextLength(hwnd) => DllCall('User32\GetWindowTextLength', 'ptr', hwnd, 'int')
GetWindowThreadProcessId(hWnd, lpdwProcessId) => DllCall('User32\GetWindowThreadProcessId', 'ptr', hWnd, 'ptr', lpdwProcessId, 'uint')
GrayString(hDC, hBrush, lpOutputFunc, lpData, nCount, X, Y, nWidth, nHeight) => DllCall('User32\GrayString', 'ptr', hDC, 'ptr', hBrush, 'ptr', lpOutputFunc, 'uptr', lpData, 'int', nCount, 'int', X, 'int', Y, 'int', nWidth, 'int', nHeight, 'int')
HideCaret(hWnd) => DllCall('User32\HideCaret', 'ptr', hWnd, 'int')
HiliteMenuItem(hwnd, hmenu, uItemHilite, uHilite) => DllCall('User32\HiliteMenuItem', 'ptr', hwnd, 'ptr', hmenu, 'uint', uItemHilite, 'uint', uHilite, 'int')
ImpersonateDdeClientWindow(hWndClient, hWndServer) => DllCall('User32\ImpersonateDdeClientWindow', 'ptr', hWndClient, 'ptr', hWndServer, 'int')
InSendMessage() => DllCall('User32\InSendMessage', 'int')
InSendMessageEx(lpReserved) => DllCall('User32\InSendMessageEx', 'ptr', lpReserved, 'uint')
InflateRect(lprc, dx, dy) => DllCall('User32\InflateRect', 'ptr', lprc, 'int', dx, 'int', dy, 'int')
InsertMenu(hMenu, uPosition, uFlags, uIDNewItem, lpNewItem) => DllCall('User32\InsertMenu', 'ptr', hMenu, 'uint', uPosition, 'uint', uFlags, 'uptr', uIDNewItem, 'str', lpNewItem, 'int')
InsertMenuItem(hMenu, uItem, fByPosition, lpmii) => DllCall('User32\InsertMenuItem', 'ptr', hMenu, 'uint', uItem, 'int', fByPosition, 'ptr', lpmii, 'int')
InternalGetWindowText(hWnd, lpString, nMaxCount) => DllCall('User32\InternalGetWindowText', 'ptr', hWnd, 'wstr', lpString, 'int', nMaxCount, 'int')
IntersectRect(lprcDst, lprcSrc1, lprcSrc2) => DllCall('User32\IntersectRect', 'ptr', lprcDst, 'ptr', lprcSrc1, 'ptr', lprcSrc2, 'int')
InvalidateRect(hWnd, lpRect, bErase) => DllCall('User32\InvalidateRect', 'ptr', hWnd, 'ptr', lpRect, 'int', bErase, 'int')
InvalidateRgn(hWnd, hRgn, bErase) => DllCall('User32\InvalidateRgn', 'ptr', hWnd, 'ptr', hRgn, 'int', bErase, 'int')
InvertRect(hDC, lprc) => DllCall('User32\InvertRect', 'ptr', hDC, 'ptr', lprc, 'int')
IsCharAlpha(ch) => DllCall('User32\IsCharAlpha', 'short', ch, 'int')
IsCharAlphaNumeric(ch) => DllCall('User32\IsCharAlphaNumeric', 'short', ch, 'int')
IsCharLower(ch) => DllCall('User32\IsCharLower', 'short', ch, 'int')
IsCharUpper(ch) => DllCall('User32\IsCharUpper', 'short', ch, 'int')
IsChild(hWndParent, hWnd) => DllCall('User32\IsChild', 'ptr', hWndParent, 'ptr', hWnd, 'int')
IsClipboardFormatAvailable(format) => DllCall('User32\IsClipboardFormatAvailable', 'uint', format, 'int')
IsDialogMessage(hDlg, lpMsg) => DllCall('User32\IsDialogMessage', 'ptr', hDlg, 'ptr', lpMsg, 'int')
IsDlgButtonChecked(hDlg, nIDButton) => DllCall('User32\IsDlgButtonChecked', 'ptr', hDlg, 'int', nIDButton, 'uint')
IsGUIThread(bConvert) => DllCall('User32\IsGUIThread', 'int', bConvert, 'int')
IsHungAppWindow(hwnd) => DllCall('User32\IsHungAppWindow', 'ptr', hwnd, 'int')
IsIconic(hwnd) => DllCall('User32\IsIconic', 'ptr', hwnd, 'int')
IsMenu(hMenu) => DllCall('User32\IsMenu', 'ptr', hMenu, 'int')
IsProcessDPIAware() => DllCall('User32\IsProcessDPIAware', 'int')
IsRectEmpty(lprc) => DllCall('User32\IsRectEmpty', 'ptr', lprc, 'int')
IsTouchWindow(hWnd, pulFlags) => DllCall('User32\IsTouchWindow', 'ptr', hWnd, 'ptr', pulFlags, 'int')
IsWinEventHookInstalled(event) => DllCall('User32\IsWinEventHookInstalled', 'uint', event, 'int')
IsWindow(hWnd) => DllCall('User32\IsWindow', 'ptr', hWnd, 'int')
IsWindowEnabled(hwnd) => DllCall('User32\IsWindowEnabled', 'ptr', hwnd, 'int')
IsWindowRedirectedForPrint(hwnd) => DllCall('User32\IsWindowRedirectedForPrint', 'ptr', hwnd, 'int')
IsWindowUnicode(hwnd) => DllCall('User32\IsWindowUnicode', 'ptr', hwnd, 'int')
IsWindowVisible(hwnd) => DllCall('User32\IsWindowVisible', 'ptr', hwnd, 'int')
IsWow64Message() => DllCall('User32\IsWow64Message', 'int')
IsZoomed(hwnd) => DllCall('User32\IsZoomed', 'ptr', hwnd, 'int')
KillTimer(hWnd, uIDEvent) => DllCall('User32\KillTimer', 'ptr', hWnd, 'uptr', uIDEvent, 'int')
LoadAccelerators(hInstance, lpTableName) => DllCall('User32\LoadAccelerators', 'ptr', hInstance, 'str', lpTableName, 'ptr')
LoadBitmap(hInstance, lpBitmapName) => DllCall('User32\LoadBitmap', 'ptr', hInstance, 'str', lpBitmapName, 'ptr')
LoadCursor(hInstance, lpCursorName) => DllCall('User32\LoadCursor', 'ptr', hInstance, 'str', lpCursorName, 'ptr')
LoadCursorFromFile(lpFileName) => DllCall('User32\LoadCursorFromFile', 'str', lpFileName, 'ptr')
LoadIcon(hInstance, lpIconName) => DllCall('User32\LoadIcon', 'ptr', hInstance, 'str', lpIconName, 'ptr')
LoadImage(hinst, lpszName, uType, cxDesired, cyDesired, fuLoad) => DllCall('User32\LoadImage', 'ptr', hinst, 'str', lpszName, 'uint', uType, 'int', cxDesired, 'int', cyDesired, 'uint', fuLoad, 'ptr')
LoadKeyboardLayout(pwszKLID, Flags) => DllCall('User32\LoadKeyboardLayout', 'str', pwszKLID, 'uint', Flags, 'ptr')
LoadMenu(hInstance, lpMenuName) => DllCall('User32\LoadMenu', 'ptr', hInstance, 'str', lpMenuName, 'ptr')
LoadMenuIndirect(lpMenuTemplate) => DllCall('User32\LoadMenuIndirect', 'ptr', lpMenuTemplate, 'ptr')
LoadString(hInstance, uID, lpBuffer, nBufferMax) => DllCall('User32\LoadString', 'ptr', hInstance, 'uint', uID, 'str', lpBuffer, 'int', nBufferMax, 'int')
LockSetForegroundWindow(uLockCode) => DllCall('User32\LockSetForegroundWindow', 'uint', uLockCode, 'int')
LockWindowUpdate(hWndLock) => DllCall('User32\LockWindowUpdate', 'ptr', hWndLock, 'int')
LockWorkStation() => DllCall('User32\LockWorkStation', 'int')
LogicalToPhysicalPoint(hWnd, lpPoint) => DllCall('User32\LogicalToPhysicalPoint', 'ptr', hWnd, 'ptr', lpPoint, 'int')
LookupIconIdFromDirectory(presbits, fIcon) => DllCall('User32\LookupIconIdFromDirectory', 'ptr', presbits, 'int', fIcon, 'int')
LookupIconIdFromDirectoryEx(presbits, fIcon, cxDesired, cyDesired, Flags) => DllCall('User32\LookupIconIdFromDirectoryEx', 'ptr', presbits, 'int', fIcon, 'int', cxDesired, 'int', cyDesired, 'uint', Flags, 'int')
MapDialogRect(hDlg, lpRect) => DllCall('User32\MapDialogRect', 'ptr', hDlg, 'ptr', lpRect, 'int')
MapVirtualKey(uCode, uMapType) => DllCall('User32\MapVirtualKey', 'uint', uCode, 'uint', uMapType, 'uint')
MapVirtualKeyEx(uCode, uMapType, dwhkl) => DllCall('User32\MapVirtualKeyEx', 'uint', uCode, 'uint', uMapType, 'ptr', dwhkl, 'uint')
MapWindowPoints(hWndFrom, hWndTo, lpPoints, cPoints) => DllCall('User32\MapWindowPoints', 'ptr', hWndFrom, 'ptr', hWndTo, 'ptr', lpPoints, 'uint', cPoints, 'int')
MenuItemFromPoint(hWnd, hMenu, ptScreen) => DllCall('User32\MenuItemFromPoint', 'ptr', hWnd, 'ptr', hMenu, 'uint64', ptScreen, 'int')
MessageBeep(uType) => DllCall('User32\MessageBeep', 'uint', uType, 'int')
MessageBox(hWnd, lpText, lpCaption, uType) => DllCall('User32\MessageBox', 'ptr', hWnd, 'str', lpText, 'str', lpCaption, 'uint', uType, 'int')
MessageBoxEx(hWnd, lpText, lpCaption, uType, wLanguageId) => DllCall('User32\MessageBoxEx', 'ptr', hWnd, 'str', lpText, 'str', lpCaption, 'uint', uType, 'ushort', wLanguageId, 'int')
MessageBoxIndirect(lpMsgBoxParams) => DllCall('User32\MessageBoxIndirect', 'ptr', lpMsgBoxParams, 'int')
ModifyMenu(hMnu, uPosition, uFlags, uIDNewItem, lpNewItem) => DllCall('User32\ModifyMenu', 'ptr', hMnu, 'uint', uPosition, 'uint', uFlags, 'uptr', uIDNewItem, 'str', lpNewItem, 'int')
MonitorFromPoint(pt, dwFlags) => DllCall('User32\MonitorFromPoint', 'uint64', pt, 'uint', dwFlags, 'ptr')
MonitorFromRect(lprc, dwFlags) => DllCall('User32\MonitorFromRect', 'ptr', lprc, 'uint', dwFlags, 'ptr')
MonitorFromWindow(hwnd, dwFlags) => DllCall('User32\MonitorFromWindow', 'ptr', hwnd, 'uint', dwFlags, 'ptr')
MoveWindow(hWnd, X, Y, nWidth, nHeight, bRepaint) => DllCall('User32\MoveWindow', 'ptr', hWnd, 'int', X, 'int', Y, 'int', nWidth, 'int', nHeight, 'int', bRepaint, 'int')
MsgWaitForMultipleObjects(nCount, pHandles, bWaitAll, dwMilliseconds, dwWakeMask) => DllCall('User32\MsgWaitForMultipleObjects', 'uint', nCount, 'ptr', pHandles, 'int', bWaitAll, 'uint', dwMilliseconds, 'uint', dwWakeMask, 'uint')
MsgWaitForMultipleObjectsEx(nCount, pHandles, dwMilliseconds, dwWakeMask, dwFlags) => DllCall('User32\MsgWaitForMultipleObjectsEx', 'uint', nCount, 'ptr', pHandles, 'uint', dwMilliseconds, 'uint', dwWakeMask, 'uint', dwFlags, 'uint')
NotifyWinEvent(event, hwnd, idObject, idChild) => DllCall('User32\NotifyWinEvent', 'uint', event, 'ptr', hwnd, 'int', idObject, 'int', idChild, 'int')
OemKeyScan(wOemChar) => DllCall('User32\OemKeyScan', 'ushort', wOemChar, 'uint')
OemToChar(lpszSrc, lpszDst) => DllCall('User32\OemToChar', 'astr', lpszSrc, 'str', lpszDst, 'int')
OemToCharBuff(lpszSrc, lpszDst, cchDstLength) => DllCall('User32\OemToCharBuff', 'astr', lpszSrc, 'str', lpszDst, 'uint', cchDstLength, 'int')
OffsetRect(lprc, dx, dy) => DllCall('User32\OffsetRect', 'ptr', lprc, 'int', dx, 'int', dy, 'int')
OpenClipboard(hWndNewOwner) => DllCall('User32\OpenClipboard', 'ptr', hWndNewOwner, 'int')
OpenDesktop(lpszDesktop, dwFlags, fInherit, dwDesiredAccess) => DllCall('User32\OpenDesktop', 'str', lpszDesktop, 'uint', dwFlags, 'int', fInherit, 'uint', dwDesiredAccess, 'ptr')
OpenIcon(hwnd) => DllCall('User32\OpenIcon', 'ptr', hwnd, 'int')
OpenInputDesktop(dwFlags, fInherit, dwDesiredAccess) => DllCall('User32\OpenInputDesktop', 'uint', dwFlags, 'int', fInherit, 'uint', dwDesiredAccess, 'ptr')
OpenWindowStation(lpszWinSta, fInherit, dwDesiredAccess) => DllCall('User32\OpenWindowStation', 'str', lpszWinSta, 'int', fInherit, 'uint', dwDesiredAccess, 'ptr')
PackDDElParam(msg, uiLo, uiHi) => DllCall('User32\PackDDElParam', 'uint', msg, 'uptr', uiLo, 'uptr', uiHi, 'uptr')
PaintDesktop(hdc) => DllCall('User32\PaintDesktop', 'ptr', hdc, 'int')
PeekMessage(lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax, wRemoveMsg) => DllCall('User32\PeekMessage', 'ptr', lpMsg, 'ptr', hWnd, 'uint', wMsgFilterMin, 'uint', wMsgFilterMax, 'uint', wRemoveMsg, 'int')
PhysicalToLogicalPoint(hWnd, lpPoint) => DllCall('User32\PhysicalToLogicalPoint', 'ptr', hWnd, 'ptr', lpPoint, 'int')
PostMessageA(hWnd, Msg, wParam, lParam) => DllCall('User32\PostMessageA', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'int')
PostMessageW(hWnd, Msg, wParam, lParam) => DllCall('User32\PostMessageW', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'int')
PostMessage_(hWnd, Msg, wParam, lParam) => DllCall('User32\PostMessage_', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'int')
PostQuitMessage(nExitCode) => DllCall('User32\PostQuitMessage', 'int', nExitCode, 'int')
PostThreadMessage(idThread, Msg, wParam, lParam) => DllCall('User32\PostThreadMessage', 'uint', idThread, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'int')
PrintWindow(hwnd, hdcBlt, nFlags) => DllCall('User32\PrintWindow', 'ptr', hwnd, 'ptr', hdcBlt, 'uint', nFlags, 'int')
PrivateExtractIcons(lpszFile, nIconIndex, cxIcon, cyIcon, phicon, &piconid, nIcons, flags) => DllCall('User32\PrivateExtractIcons', 'str', lpszFile, 'int', nIconIndex, 'int', cxIcon, 'int', cyIcon, 'ptr', phicon, 'uint*', &piconid, 'uint', nIcons, 'uint', flags, 'uint')
PtInRect(lprc, pt) => DllCall('User32\PtInRect', 'ptr', lprc, 'uint64', pt, 'int')
RealChildWindowFromPoint(hwndParent, ptParentClientCoords) => DllCall('User32\RealChildWindowFromPoint', 'ptr', hwndParent, 'uint64', ptParentClientCoords, 'ptr')
RealGetWindowClass(hwnd, pszType, cchType) => DllCall('User32\RealGetWindowClass', 'ptr', hwnd, 'str', pszType, 'uint', cchType, 'uint')
RedrawWindow(hWnd, lprcUpdate, hrgnUpdate, flags) => DllCall('User32\RedrawWindow', 'ptr', hWnd, 'ptr', lprcUpdate, 'ptr', hrgnUpdate, 'uint', flags, 'int')
RegisterClass(lpWndClass) => DllCall('User32\RegisterClass', 'ptr', lpWndClass, 'ushort')
RegisterClassEx(lpwcx) => DllCall('User32\RegisterClassEx', 'ptr', lpwcx, 'ushort')
RegisterClipboardFormat(lpszFormat) => DllCall('User32\RegisterClipboardFormat', 'str', lpszFormat, 'uint')
RegisterDeviceNotification(hRecipient, NotificationFilter, Flags) => DllCall('User32\RegisterDeviceNotification', 'ptr', hRecipient, 'ptr', NotificationFilter, 'uint', Flags, 'ptr')
RegisterHotKey(hWnd, id, fsModifiers, vk) => DllCall('User32\RegisterHotKey', 'ptr', hWnd, 'int', id, 'uint', fsModifiers, 'uint', vk, 'int')
RegisterPowerSettingNotification(hRecipient, PowerSettingGuid, Flags) => DllCall('User32\RegisterPowerSettingNotification', 'ptr', hRecipient, 'ptr', PowerSettingGuid, 'uint', Flags, 'ptr')
RegisterRawInputDevices(pRawInputDevices, uiNumDevices, cbSize) => DllCall('User32\RegisterRawInputDevices', 'ptr', pRawInputDevices, 'uint', uiNumDevices, 'uint', cbSize, 'int')
RegisterShellHookWindow(hwnd) => DllCall('User32\RegisterShellHookWindow', 'ptr', hwnd, 'int')
RegisterTouchWindow(hWnd, ulFlags) => DllCall('User32\RegisterTouchWindow', 'ptr', hWnd, 'uint', ulFlags, 'int')
RegisterWindowMessage(lpString) => DllCall('User32\RegisterWindowMessage', 'str', lpString, 'uint')
ReleaseCapture() => DllCall('User32\ReleaseCapture', 'int')
ReleaseDC(hWnd, hDC) => DllCall('User32\ReleaseDC', 'ptr', hWnd, 'ptr', hDC, 'int')
RemoveClipboardFormatListener(hwnd) => DllCall('User32\RemoveClipboardFormatListener', 'ptr', hwnd, 'int')
RemoveMenu(hMenu, uPosition, uFlags) => DllCall('User32\RemoveMenu', 'ptr', hMenu, 'uint', uPosition, 'uint', uFlags, 'int')
RemoveProp(hWnd, lpString) => DllCall('User32\RemoveProp', 'ptr', hWnd, 'str', lpString, 'ptr')
ReplyMessage(lResult) => DllCall('User32\ReplyMessage', 'ptr', lResult, 'int')
ReuseDDElParam(lParam, msgIn, msgOut, uiLo, uiHi) => DllCall('User32\ReuseDDElParam', 'uptr', lParam, 'uint', msgIn, 'uint', msgOut, 'uptr', uiLo, 'uptr', uiHi, 'uptr')
ScreenToClient(hWnd, lpPoint) => DllCall('User32\ScreenToClient', 'ptr', hWnd, 'ptr', lpPoint, 'int')
ScrollDC(hDC, dx, dy, lprcScroll, lprcClip, hrgnUpdate, lprcUpdate) => DllCall('User32\ScrollDC', 'ptr', hDC, 'int', dx, 'int', dy, 'ptr', lprcScroll, 'ptr', lprcClip, 'ptr', hrgnUpdate, 'ptr', lprcUpdate, 'int')
ScrollWindow(hWnd, XAmount, YAmount, lpRect, lpClipRect) => DllCall('User32\ScrollWindow', 'ptr', hWnd, 'int', XAmount, 'int', YAmount, 'ptr', lpRect, 'ptr', lpClipRect, 'int')
ScrollWindowEx(hWnd, dx, dy, prcScroll, prcClip, hrgnUpdate, prcUpdate, flags) => DllCall('User32\ScrollWindowEx', 'ptr', hWnd, 'int', dx, 'int', dy, 'ptr', prcScroll, 'ptr', prcClip, 'ptr', hrgnUpdate, 'ptr', prcUpdate, 'uint', flags, 'int')
SendDlgItemMessage(hDlg, nIDDlgItem, Msg, wParam, lParam) => DllCall('User32\SendDlgItemMessage', 'ptr', hDlg, 'int', nIDDlgItem, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
SendInput_(nInputs, pInputs, cbSize) => DllCall('User32\SendInput_', 'uint', nInputs, 'ptr', pInputs, 'int', cbSize, 'uint')
SendMessageA(hWnd, Msg, wParam, lParam) => DllCall('User32\SendMessageA', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
SendMessageCallback(hWnd, Msg, wParam, lParam, lpCallBack, dwData) => DllCall('User32\SendMessageCallback', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr', lpCallBack, 'uptr', dwData, 'int')
SendMessageTimeout(hWnd, Msg, wParam, lParam, fuFlags, uTimeout, lpdwResult) => DllCall('User32\SendMessageTimeout', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'uint', fuFlags, 'uint', uTimeout, 'uptr', lpdwResult, 'ptr')
SendMessageW(hWnd, Msg, wParam, lParam) => DllCall('User32\SendMessageW', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
SendMessage_(hWnd, Msg, wParam, lParam) => DllCall('User32\SendMessage_', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'ptr')
SendNotifyMessage(hWnd, Msg, wParam, lParam) => DllCall('User32\SendNotifyMessage', 'ptr', hWnd, 'uint', Msg, 'uptr', wParam, 'uptr', lParam, 'int')
SetActiveWindow(hwnd) => DllCall('User32\SetActiveWindow', 'ptr', hwnd, 'ptr')
SetCapture(hwnd) => DllCall('User32\SetCapture', 'ptr', hwnd, 'ptr')
SetCaretBlinkTime(uMSeconds) => DllCall('User32\SetCaretBlinkTime', 'uint', uMSeconds, 'int')
SetCaretPos(X, Y) => DllCall('User32\SetCaretPos', 'int', X, 'int', Y, 'int')
SetClassLong(hWnd, nIndex, dwNewLong) => DllCall('User32\SetClassLong', 'ptr', hWnd, 'int', nIndex, 'int', dwNewLong, 'uint')
SetClassWord(hWnd, nIndex, wNewWord) => DllCall('User32\SetClassWord', 'ptr', hWnd, 'int', nIndex, 'ushort', wNewWord, 'ushort')
SetClipboardData(uFormat, hMem) => DllCall('User32\SetClipboardData', 'uint', uFormat, 'ptr', hMem, 'ptr')
SetClipboardViewer(hWndNewViewer) => DllCall('User32\SetClipboardViewer', 'ptr', hWndNewViewer, 'ptr')
SetCursor(hCursor) => DllCall('User32\SetCursor', 'ptr', hCursor, 'ptr')
SetCursorPos(X, Y) => DllCall('User32\SetCursorPos', 'int', X, 'int', Y, 'int')
SetDlgItemInt(hDlg, nIDDlgItem, uValue, bSigned) => DllCall('User32\SetDlgItemInt', 'ptr', hDlg, 'int', nIDDlgItem, 'uint', uValue, 'int', bSigned, 'int')
SetDlgItemText(hDlg, nIDDlgItem, lpString) => DllCall('User32\SetDlgItemText', 'ptr', hDlg, 'int', nIDDlgItem, 'str', lpString, 'int')
SetDoubleClickTime(uInterval) => DllCall('User32\SetDoubleClickTime', 'uint', uInterval, 'int')
SetFocus(hWnd) => DllCall('User32\SetFocus', 'ptr', hWnd, 'ptr')
SetForegroundWindow(hwnd) => DllCall('User32\SetForegroundWindow', 'ptr', hwnd, 'int')
SetGestureConfig(hwnd, dwReserved, cIDs, pGestureConfig, cbSize) => DllCall('User32\SetGestureConfig', 'ptr', hwnd, 'uint', dwReserved, 'uint', cIDs, 'ptr', pGestureConfig, 'uint', cbSize, 'int')
SetKeyboardState(lpKeyState) => DllCall('User32\SetKeyboardState', 'ptr', lpKeyState, 'int')
SetLastErrorEx(dwErrCode, dwType) => DllCall('User32\SetLastErrorEx', 'uint', dwErrCode, 'uint', dwType, 'int')
SetLayeredWindowAttributes(hwnd, crKey, bAlpha, dwFlags) => DllCall('User32\SetLayeredWindowAttributes', 'ptr', hwnd, 'uint', crKey, 'uchar', bAlpha, 'uint', dwFlags, 'int')
SetMenu(hWnd, hMenu) => DllCall('User32\SetMenu', 'ptr', hWnd, 'ptr', hMenu, 'int')
SetMenuContextHelpId(hmenu, dwContextHelpId) => DllCall('User32\SetMenuContextHelpId', 'ptr', hmenu, 'uint', dwContextHelpId, 'int')
SetMenuDefaultItem(hMenu, uItem, fByPos) => DllCall('User32\SetMenuDefaultItem', 'ptr', hMenu, 'uint', uItem, 'uint', fByPos, 'int')
SetMenuInfo(hmenu, lpcmi) => DllCall('User32\SetMenuInfo', 'ptr', hmenu, 'ptr', lpcmi, 'int')
SetMenuItemBitmaps(hMenu, uPosition, uFlags, hBitmapUnchecked, hBitmapChecked) => DllCall('User32\SetMenuItemBitmaps', 'ptr', hMenu, 'uint', uPosition, 'uint', uFlags, 'ptr', hBitmapUnchecked, 'ptr', hBitmapChecked, 'int')
SetMenuItemInfo(hMenu, uItem, fByPosition, lpmii) => DllCall('User32\SetMenuItemInfo', 'ptr', hMenu, 'uint', uItem, 'int', fByPosition, 'ptr', lpmii, 'int')
SetMessageExtraInfo(lParam) => DllCall('User32\SetMessageExtraInfo', 'uptr', lParam, 'uptr')
SetParent(hWndChild, hWndNewParent) => DllCall('User32\SetParent', 'ptr', hWndChild, 'ptr', hWndNewParent, 'ptr')
SetPhysicalCursorPos(X, Y) => DllCall('User32\SetPhysicalCursorPos', 'int', X, 'int', Y, 'int')
SetProcessDPIAware() => DllCall('User32\SetProcessDPIAware', 'int')
SetProcessDefaultLayout(dwDefaultLayout) => DllCall('User32\SetProcessDefaultLayout', 'uint', dwDefaultLayout, 'int')
SetProcessWindowStation(hWinSta) => DllCall('User32\SetProcessWindowStation', 'ptr', hWinSta, 'int')
SetProp(hWnd, lpString, hData) => DllCall('User32\SetProp', 'ptr', hWnd, 'str', lpString, 'ptr', hData, 'int')
SetRect(lprc, xLeft, yTop, xRight, yBottom) => DllCall('User32\SetRect', 'ptr', lprc, 'int', xLeft, 'int', yTop, 'int', xRight, 'int', yBottom, 'int')
SetRectEmpty(lprc) => DllCall('User32\SetRectEmpty', 'ptr', lprc, 'int')
SetScrollInfo(hwnd, fnBar, lpsi, fRedraw) => DllCall('User32\SetScrollInfo', 'ptr', hwnd, 'int', fnBar, 'ptr', lpsi, 'int', fRedraw, 'int')
SetScrollPos(hWnd, nBar, nPos, bRedraw) => DllCall('User32\SetScrollPos', 'ptr', hWnd, 'int', nBar, 'int', nPos, 'int', bRedraw, 'int')
SetScrollRange(hWnd, nBar, nMinPos, nMaxPos, bRedraw) => DllCall('User32\SetScrollRange', 'ptr', hWnd, 'int', nBar, 'int', nMinPos, 'int', nMaxPos, 'int', bRedraw, 'int')
SetSysColors(cElements, &lpaElements, &lpaRgbValues) => DllCall('User32\SetSysColors', 'int', cElements, 'int*', &lpaElements, 'uint*', &lpaRgbValues, 'int')
SetSystemCursor(hcur, id) => DllCall('User32\SetSystemCursor', 'ptr', hcur, 'uint', id, 'int')
SetThreadDesktop(hDesktop) => DllCall('User32\SetThreadDesktop', 'ptr', hDesktop, 'int')
SetTimer_(hWnd, nIDEvent, uElapse, lpTimerFunc) => DllCall('User32\SetTimer_', 'ptr', hWnd, 'uptr', nIDEvent, 'uint', uElapse, 'ptr', lpTimerFunc, 'uptr')
SetUserObjectInformation(hObj, nIndex, pvInfo, nLength) => DllCall('User32\SetUserObjectInformation', 'ptr', hObj, 'int', nIndex, 'ptr', pvInfo, 'uint', nLength, 'int')
SetUserObjectSecurity(hObj, pSIRequested, pSID) => DllCall('User32\SetUserObjectSecurity', 'ptr', hObj, 'ptr', pSIRequested, 'ptr', pSID, 'int')
SetWinEventHook(eventMin, eventMax, hmodWinEventProc, lpfnWinEventProc, idProcess, idThread, dwflags) => DllCall('User32\SetWinEventHook', 'uint', eventMin, 'uint', eventMax, 'ptr', hmodWinEventProc, 'ptr', lpfnWinEventProc, 'uint', idProcess, 'uint', idThread, 'uint', dwflags, 'ptr')
SetWindowContextHelpId(hwnd, dwContextHelpId) => DllCall('User32\SetWindowContextHelpId', 'ptr', hwnd, 'uint', dwContextHelpId, 'int')
SetWindowDisplayAffinity(hWnd, dwAffinity) => DllCall('User32\SetWindowDisplayAffinity', 'ptr', hWnd, 'uint', dwAffinity, 'int')
SetWindowLong(hWnd, nIndex, dwNewLong) => DllCall('User32\SetWindowLong', 'ptr', hWnd, 'int', nIndex, 'int', dwNewLong, 'int')
SetWindowPlacement(hWnd, lpwndpl) => DllCall('User32\SetWindowPlacement', 'ptr', hWnd, 'ptr', lpwndpl, 'int')
SetWindowPos(hWnd, hWndInsertAfter, X, Y, cx, cy, uFlags) => DllCall('User32\SetWindowPos', 'ptr', hWnd, 'ptr', hWndInsertAfter, 'int', X, 'int', Y, 'int', cx, 'int', cy, 'uint', uFlags, 'int')
SetWindowRgn(hWnd, hRgn, bRedraw) => DllCall('User32\SetWindowRgn', 'ptr', hWnd, 'ptr', hRgn, 'int', bRedraw, 'int')
SetWindowText(hWnd, lpString) => DllCall('User32\SetWindowText', 'ptr', hWnd, 'str', lpString, 'int')
SetWindowsHookEx(idHook, lpfn, hMod, dwThreadId) => DllCall('User32\SetWindowsHookEx', 'int', idHook, 'ptr', lpfn, 'ptr', hMod, 'uint', dwThreadId, 'ptr')
ShowCaret(hWnd) => DllCall('User32\ShowCaret', 'ptr', hWnd, 'int')
ShowCursor(bShow) => DllCall('User32\ShowCursor', 'int', bShow, 'int')
ShowOwnedPopups(hWnd, fShow) => DllCall('User32\ShowOwnedPopups', 'ptr', hWnd, 'int', fShow, 'int')
ShowScrollBar(hWnd, wBar, bShow) => DllCall('User32\ShowScrollBar', 'ptr', hWnd, 'int', wBar, 'int', bShow, 'int')
ShowWindow(hWnd, nCmdShow) => DllCall('User32\ShowWindow', 'ptr', hWnd, 'int', nCmdShow, 'int')
ShowWindowAsync(hWnd, nCmdShow) => DllCall('User32\ShowWindowAsync', 'ptr', hWnd, 'int', nCmdShow, 'int')
ShutdownBlockReasonCreate(hWnd, pwszReason) => DllCall('User32\ShutdownBlockReasonCreate', 'ptr', hWnd, 'wstr', pwszReason, 'int')
ShutdownBlockReasonDestroy(hwnd) => DllCall('User32\ShutdownBlockReasonDestroy', 'ptr', hwnd, 'int')
ShutdownBlockReasonQuery(hWnd, pwszBuff, &pcchBuff) => DllCall('User32\ShutdownBlockReasonQuery', 'ptr', hWnd, 'wstr', pwszBuff, 'uint*', &pcchBuff, 'int')
SoundSentry() => DllCall('User32\SoundSentry', 'int')
SubtractRect(lprcDst, lprcSrc1, lprcSrc2) => DllCall('User32\SubtractRect', 'ptr', lprcDst, 'ptr', lprcSrc1, 'ptr', lprcSrc2, 'int')
SwapMouseButton(fSwap) => DllCall('User32\SwapMouseButton', 'int', fSwap, 'int')
SwitchDesktop(hDesktop) => DllCall('User32\SwitchDesktop', 'ptr', hDesktop, 'int')
SwitchToThisWindow(hWnd, fAltTab) => DllCall('User32\SwitchToThisWindow', 'ptr', hWnd, 'int', fAltTab, 'int')
SystemParametersInfo(uiAction, uiParam, pvParam, fWinIni) => DllCall('User32\SystemParametersInfo', 'uint', uiAction, 'uint', uiParam, 'ptr', pvParam, 'uint', fWinIni, 'int')
TabbedTextOut(hDC, X, Y, lpString, nCount, nTabPositions, lpnTabStopPositions, nTabOrigin) => DllCall('User32\TabbedTextOut', 'ptr', hDC, 'int', X, 'int', Y, 'str', lpString, 'int', nCount, 'int', nTabPositions, 'ptr', lpnTabStopPositions, 'int', nTabOrigin, 'int')
TileWindows(hwndParent, wHow, lpRect, cKids, lpKids) => DllCall('User32\TileWindows', 'ptr', hwndParent, 'uint', wHow, 'ptr', lpRect, 'uint', cKids, 'ptr', lpKids, 'ushort')
ToAscii(uVirtKey, uScanCode, &lpKeyState, lpChar, uFlags) => DllCall('User32\ToAscii', 'uint', uVirtKey, 'uint', uScanCode, 'uchar*', &lpKeyState, 'ptr', lpChar, 'uint', uFlags, 'int')
ToAsciiEx(uVirtKey, uScanCode, &lpKeyState, lpChar, uFlags, dwhkl) => DllCall('User32\ToAsciiEx', 'uint', uVirtKey, 'uint', uScanCode, 'uchar*', &lpKeyState, 'ptr', lpChar, 'uint', uFlags, 'ptr', dwhkl, 'int')
ToUnicode(wVirtKey, wScanCode, &lpKeyState, pwszBuff, cchBuff, wFlags) => DllCall('User32\ToUnicode', 'uint', wVirtKey, 'uint', wScanCode, 'uchar*', &lpKeyState, 'wstr', pwszBuff, 'int', cchBuff, 'uint', wFlags, 'int')
ToUnicodeEx(wVirtKey, wScanCode, &lpKeyState, pwszBuff, cchBuff, wFlags, dwhkl) => DllCall('User32\ToUnicodeEx', 'uint', wVirtKey, 'uint', wScanCode, 'uchar*', &lpKeyState, 'wstr', pwszBuff, 'int', cchBuff, 'uint', wFlags, 'ptr', dwhkl, 'int')
TrackMouseEvent(lpEventTrack) => DllCall('User32\TrackMouseEvent', 'ptr', lpEventTrack, 'int')
TrackPopupMenu(hMenu, uFlags, x, y, nReserved, hWnd, prcRect) => DllCall('User32\TrackPopupMenu', 'ptr', hMenu, 'uint', uFlags, 'int', x, 'int', y, 'int', nReserved, 'ptr', hWnd, 'ptr', prcRect, 'int')
TrackPopupMenuEx(hmenu, fuFlags, x, y, hwnd, lptpm) => DllCall('User32\TrackPopupMenuEx', 'ptr', hmenu, 'uint', fuFlags, 'int', x, 'int', y, 'ptr', hwnd, 'ptr', lptpm, 'int')
TranslateAccelerator(hWnd, hAccTable, lpMsg) => DllCall('User32\TranslateAccelerator', 'ptr', hWnd, 'ptr', hAccTable, 'ptr', lpMsg, 'int')
TranslateMDISysAccel(hWndClient, lpMsg) => DllCall('User32\TranslateMDISysAccel', 'ptr', hWndClient, 'ptr', lpMsg, 'int')
TranslateMessage(lpmsg) => DllCall('User32\TranslateMessage', 'ptr', lpmsg, 'int')
UnhookWinEvent(hWinEventHook) => DllCall('User32\UnhookWinEvent', 'ptr', hWinEventHook, 'int')
UnhookWindowsHookEx(hhk) => DllCall('User32\UnhookWindowsHookEx', 'ptr', hhk, 'int')
UnionRect(lprcDst, lprcSrc1, lprcSrc2) => DllCall('User32\UnionRect', 'ptr', lprcDst, 'ptr', lprcSrc1, 'ptr', lprcSrc2, 'int')
UnloadKeyboardLayout(hKL) => DllCall('User32\UnloadKeyboardLayout', 'ptr', hKL, 'int')
UnpackDDElParam(msg, lParam, puiLo, puiHi) => DllCall('User32\UnpackDDElParam', 'uint', msg, 'uptr', lParam, 'uptr', puiLo, 'uptr', puiHi, 'int')
UnregisterClass(lpClassName, hInstance) => DllCall('User32\UnregisterClass', 'str', lpClassName, 'ptr', hInstance, 'int')
UnregisterDeviceNotification(Handle) => DllCall('User32\UnregisterDeviceNotification', 'ptr', Handle, 'int')
UnregisterHotKey(hWnd, id) => DllCall('User32\UnregisterHotKey', 'ptr', hWnd, 'int', id, 'int')
UnregisterPowerSettingNotification(Handle) => DllCall('User32\UnregisterPowerSettingNotification', 'ptr', Handle, 'int')
UnregisterTouchWindow(hwnd) => DllCall('User32\UnregisterTouchWindow', 'ptr', hwnd, 'int')
UpdateLayeredWindow(hwnd, hdcDst, pptDst, psize, hdcSrc, pptSrc, crKey, pblend, dwFlags) => DllCall('User32\UpdateLayeredWindow', 'ptr', hwnd, 'ptr', hdcDst, 'ptr', pptDst, 'ptr', psize, 'ptr', hdcSrc, 'ptr', pptSrc, 'uint', crKey, 'ptr', pblend, 'uint', dwFlags, 'int')
UpdateLayeredWindowIndirect(hwnd, &pULWInfo) => DllCall('User32\UpdateLayeredWindowIndirect', 'ptr', hwnd, 'uptr*', &pULWInfo, 'int')
UpdateWindow(hwnd) => DllCall('User32\UpdateWindow', 'ptr', hwnd, 'int')
UserHandleGrantAccess(hUserHandle, hJob, bGrant) => DllCall('User32\UserHandleGrantAccess', 'ptr', hUserHandle, 'ptr', hJob, 'int', bGrant, 'int')
ValidateRect(hWnd, lpRect) => DllCall('User32\ValidateRect', 'ptr', hWnd, 'ptr', lpRect, 'int')
ValidateRgn(hWnd, hRgn) => DllCall('User32\ValidateRgn', 'ptr', hWnd, 'ptr', hRgn, 'int')
VkKeyScan(ch) => DllCall('User32\VkKeyScan', 'short', ch, 'short')
VkKeyScanEx(ch, dwhkl) => DllCall('User32\VkKeyScanEx', 'short', ch, 'ptr', dwhkl, 'short')
WaitForInputIdle(hProcess, dwMilliseconds) => DllCall('User32\WaitForInputIdle', 'ptr', hProcess, 'uint', dwMilliseconds, 'uint')
WaitMessage() => DllCall('User32\WaitMessage', 'int')
WinHelp(hWndMain, lpszHelp, uCommand, dwData) => DllCall('User32\WinHelp', 'ptr', hWndMain, 'str', lpszHelp, 'uint', uCommand, 'uptr', dwData, 'int')
WindowFromDC(hdc) => DllCall('User32\WindowFromDC', 'ptr', hdc, 'ptr')
WindowFromPhysicalPoint(Point) => DllCall('User32\WindowFromPhysicalPoint', 'uint64', Point, 'ptr')
WindowFromPoint(Point) => DllCall('User32\WindowFromPoint', 'uint64', Point, 'ptr')
keybd_event(bVk, bScan, dwFlags, dwExtraInfo) => DllCall('User32\keybd_event', 'uchar', bVk, 'uchar', bScan, 'uint', dwFlags, 'uptr', dwExtraInfo, 'int')
mouse_event(dwFlags, dx, dy, dwData, dwExtraInfo) => DllCall('User32\mouse_event', 'uint', dwFlags, 'uint', dx, 'uint', dy, 'uint', dwData, 'uptr', dwExtraInfo, 'int')
wsprintf(lpOut, lpFmt, args*) {
	_args := []
	for v in args
		_args.Push('ptr', v)
	_args.Push('int')
	return DllCall('User32\wsprintf', 'str', lpOut, 'str', lpFmt, _args*)
}
wvsprintf(lpOutput, lpFmt, arglist) => DllCall('User32\wvsprintf', 'str', lpOutput, 'str', lpFmt, 'ptr', arglist, 'int')
