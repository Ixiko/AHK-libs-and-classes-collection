CertAddCRLContextToStore(hCertStore, pCrlContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCRLContextToStore', 'ptr', hCertStore, 'ptr', pCrlContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddCRLLinkToStore(hCertStore, pCrlContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCRLLinkToStore', 'ptr', hCertStore, 'ptr', pCrlContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddCTLContextToStore(hCertStore, pCtlContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCTLContextToStore', 'ptr', hCertStore, 'ptr', pCtlContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddCTLLinkToStore(hCertStore, pCtlContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCTLLinkToStore', 'ptr', hCertStore, 'ptr', pCtlContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddCertificateContextToStore(hCertStore, pCertContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCertificateContextToStore', 'ptr', hCertStore, 'ptr', pCertContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddCertificateLinkToStore(hCertStore, pCertContext, dwAddDisposition, ppStoreContext) => DllCall('Crypt32\CertAddCertificateLinkToStore', 'ptr', hCertStore, 'ptr', pCertContext, 'uint', dwAddDisposition, 'ptr', ppStoreContext, 'int')
CertAddEncodedCRLToStore(hCertStore, dwCertEncodingType, &pbCrlEncoded, cbCrlEncoded, dwAddDisposition, ppCrlContext) => DllCall('Crypt32\CertAddEncodedCRLToStore', 'ptr', hCertStore, 'uint', dwCertEncodingType, 'uchar*', &pbCrlEncoded, 'uint', cbCrlEncoded, 'uint', dwAddDisposition, 'ptr', ppCrlContext, 'int')
CertAddEncodedCTLToStore(hCertStore, dwMsgAndCertEncodingType, &pbCtlEncoded, cbCtlEncoded, dwAddDisposition, ppCtlContext) => DllCall('Crypt32\CertAddEncodedCTLToStore', 'ptr', hCertStore, 'uint', dwMsgAndCertEncodingType, 'uchar*', &pbCtlEncoded, 'uint', cbCtlEncoded, 'uint', dwAddDisposition, 'ptr', ppCtlContext, 'int')
CertAddEncodedCertificateToStore(hCertStore, dwCertEncodingType, &pbCertEncoded, cbCertEncoded, dwAddDisposition, ppCertContext) => DllCall('Crypt32\CertAddEncodedCertificateToStore', 'ptr', hCertStore, 'uint', dwCertEncodingType, 'uchar*', &pbCertEncoded, 'uint', cbCertEncoded, 'uint', dwAddDisposition, 'ptr', ppCertContext, 'int')
CertAddEncodedCertificateToSystemStore(szCertStoreName, &pbCertEncoded, cbCertEncoded) => DllCall('Crypt32\CertAddEncodedCertificateToSystemStore', 'astr', szCertStoreName, 'uchar*', &pbCertEncoded, 'uint', cbCertEncoded, 'int')
CertAddEnhancedKeyUsageIdentifier(pCertContext, pszUsageIdentifier) => DllCall('Crypt32\CertAddEnhancedKeyUsageIdentifier', 'ptr', pCertContext, 'astr', pszUsageIdentifier, 'int')
CertAddRefServerOcspResponse(hServerOcspResponse) => DllCall('Crypt32\CertAddRefServerOcspResponse', 'ptr', hServerOcspResponse, 'int')
CertAddRefServerOcspResponseContext(pServerOcspResponseContext) => DllCall('Crypt32\CertAddRefServerOcspResponseContext', 'ptr', pServerOcspResponseContext, 'int')
CertAddSerializedElementToStore(hCertStore, &pbElement, cbElement, dwAddDisposition, dwFlags, dwContextTypeFlags, &pdwContextType, ppvContext) => DllCall('Crypt32\CertAddSerializedElementToStore', 'ptr', hCertStore, 'uchar*', &pbElement, 'uint', cbElement, 'uint', dwAddDisposition, 'uint', dwFlags, 'uint', dwContextTypeFlags, 'uint*', &pdwContextType, 'ptr', ppvContext, 'int')
CertAddStoreToCollection(hCollectionStore, hSiblingStore, dwUpdateFlag, dwPriority) => DllCall('Crypt32\CertAddStoreToCollection', 'ptr', hCollectionStore, 'ptr', hSiblingStore, 'uint', dwUpdateFlag, 'uint', dwPriority, 'int')
CertAlgIdToOID(dwAlgId) => DllCall('Crypt32\CertAlgIdToOID', 'uint', dwAlgId, 'astr')
CertCloseServerOcspResponse(hServerOcspResponse, dwFlags) => DllCall('Crypt32\CertCloseServerOcspResponse', 'ptr', hServerOcspResponse, 'uint', dwFlags, 'int')
CertCloseStore(hCertStore, dwFlags) => DllCall('Crypt32\CertCloseStore', 'ptr', hCertStore, 'uint', dwFlags, 'int')
CertCompareCertificate(dwCertEncodingType, pCertId1, pCertId2) => DllCall('Crypt32\CertCompareCertificate', 'uint', dwCertEncodingType, 'ptr', pCertId1, 'ptr', pCertId2, 'int')
CertCompareCertificateName(dwCertEncodingType, pCertName1, pCertName2) => DllCall('Crypt32\CertCompareCertificateName', 'uint', dwCertEncodingType, 'ptr', pCertName1, 'ptr', pCertName2, 'int')
CertCompareIntegerBlob(pInt1, pInt2) => DllCall('Crypt32\CertCompareIntegerBlob', 'ptr', pInt1, 'ptr', pInt2, 'int')
CertComparePublicKeyInfo(dwCertEncodingType, pPublicKey1, pPublicKey2) => DllCall('Crypt32\CertComparePublicKeyInfo', 'uint', dwCertEncodingType, 'ptr', pPublicKey1, 'ptr', pPublicKey2, 'int')
CertControlStore(hCertStore, dwFlags, dwCtrlType, pvCtrlPara) => DllCall('Crypt32\CertControlStore', 'ptr', hCertStore, 'uint', dwFlags, 'uint', dwCtrlType, 'ptr', pvCtrlPara, 'int')
CertCreateCRLContext(dwCertEncodingType, &pbCrlEncoded, cbCrlEncoded) => DllCall('Crypt32\CertCreateCRLContext', 'uint', dwCertEncodingType, 'uchar*', &pbCrlEncoded, 'uint', cbCrlEncoded, 'ptr')
CertCreateCTLContext(dwMsgAndCertEncodingType, &pbCtlEncoded, cbCtlEncoded) => DllCall('Crypt32\CertCreateCTLContext', 'uint', dwMsgAndCertEncodingType, 'uchar*', &pbCtlEncoded, 'uint', cbCtlEncoded, 'ptr')
CertCreateCTLEntryFromCertificateContextProperties(pCertContext, cOptAttr, rgOptAttr, dwFlags, pvReserved, pCtlEntry, &pcbCtlEntry) => DllCall('Crypt32\CertCreateCTLEntryFromCertificateContextProperties', 'ptr', pCertContext, 'uint', cOptAttr, 'ptr', rgOptAttr, 'uint', dwFlags, 'ptr', pvReserved, 'ptr', pCtlEntry, 'uint*', &pcbCtlEntry, 'int')
CertCreateCertificateChainEngine(pConfig, phChainEngine) => DllCall('Crypt32\CertCreateCertificateChainEngine', 'ptr', pConfig, 'ptr', phChainEngine, 'int')
CertCreateCertificateContext(dwCertEncodingType, &pbCertEncoded, cbCertEncoded) => DllCall('Crypt32\CertCreateCertificateContext', 'uint', dwCertEncodingType, 'uchar*', &pbCertEncoded, 'uint', cbCertEncoded, 'ptr')
CertCreateContext(dwContextType, dwEncodingType, &pbEncoded, cbEncoded, dwFlags, pCreatePara) => DllCall('Crypt32\CertCreateContext', 'uint', dwContextType, 'uint', dwEncodingType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uint', dwFlags, 'ptr', pCreatePara, 'ptr')
CertCreateSelfSignCertificate(hCryptProvOrNCryptKey, pSubjectIssuerBlob, dwFlags, pKeyProvInfo, pSignatureAlgorithm, pStartTime, pEndTime, pExtensions) => DllCall('Crypt32\CertCreateSelfSignCertificate', 'uptr', hCryptProvOrNCryptKey, 'ptr', pSubjectIssuerBlob, 'uint', dwFlags, 'ptr', pKeyProvInfo, 'ptr', pSignatureAlgorithm, 'ptr', pStartTime, 'ptr', pEndTime, 'ptr', pExtensions, 'ptr')
CertDeleteCRLFromStore(pCrlContext) => DllCall('Crypt32\CertDeleteCRLFromStore', 'ptr', pCrlContext, 'int')
CertDeleteCTLFromStore(pCtlContext) => DllCall('Crypt32\CertDeleteCTLFromStore', 'ptr', pCtlContext, 'int')
CertDeleteCertificateFromStore(pCertContext) => DllCall('Crypt32\CertDeleteCertificateFromStore', 'ptr', pCertContext, 'int')
CertDuplicateCRLContext(pCrlContext) => DllCall('Crypt32\CertDuplicateCRLContext', 'ptr', pCrlContext, 'ptr')
CertDuplicateCTLContext(pCtlContext) => DllCall('Crypt32\CertDuplicateCTLContext', 'ptr', pCtlContext, 'ptr')
CertDuplicateCertificateChain(pChainContext) => DllCall('Crypt32\CertDuplicateCertificateChain', 'ptr', pChainContext, 'ptr')
CertDuplicateCertificateContext(pCertContext) => DllCall('Crypt32\CertDuplicateCertificateContext', 'ptr', pCertContext, 'ptr')
CertDuplicateStore(hCertStore) => DllCall('Crypt32\CertDuplicateStore', 'ptr', hCertStore, 'ptr')
CertEnumCRLContextProperties(pCrlContext, dwPropId) => DllCall('Crypt32\CertEnumCRLContextProperties', 'ptr', pCrlContext, 'uint', dwPropId, 'uint')
CertEnumCRLsInStore(hCertStore, pPrevCrlContext) => DllCall('Crypt32\CertEnumCRLsInStore', 'ptr', hCertStore, 'ptr', pPrevCrlContext, 'ptr')
CertEnumCTLContextProperties(pCtlContext, dwPropId) => DllCall('Crypt32\CertEnumCTLContextProperties', 'ptr', pCtlContext, 'uint', dwPropId, 'uint')
CertEnumCTLsInStore(hCertStore, pPrevCtlContext) => DllCall('Crypt32\CertEnumCTLsInStore', 'ptr', hCertStore, 'ptr', pPrevCtlContext, 'ptr')
CertEnumCertificateContextProperties(pCertContext, dwPropId) => DllCall('Crypt32\CertEnumCertificateContextProperties', 'ptr', pCertContext, 'uint', dwPropId, 'uint')
CertEnumCertificatesInStore(hCertStore, pPrevCertContext) => DllCall('Crypt32\CertEnumCertificatesInStore', 'ptr', hCertStore, 'ptr', pPrevCertContext, 'ptr')
CertEnumPhysicalStore(pvSystemStore, dwFlags, pvArg, pfnEnum) => DllCall('Crypt32\CertEnumPhysicalStore', 'ptr', pvSystemStore, 'uint', dwFlags, 'ptr', pvArg, 'ptr', pfnEnum, 'int')
CertEnumSubjectInSortedCTL(pCtlContext, ppvNextSubject, pSubjectIdentifier, pEncodedAttributes) => DllCall('Crypt32\CertEnumSubjectInSortedCTL', 'ptr', pCtlContext, 'ptr', ppvNextSubject, 'ptr', pSubjectIdentifier, 'ptr', pEncodedAttributes, 'int')
CertEnumSystemStore(dwFlags, pvSystemStoreLocationPara, pvArg, pfnEnum) => DllCall('Crypt32\CertEnumSystemStore', 'uint', dwFlags, 'ptr', pvSystemStoreLocationPara, 'ptr', pvArg, 'ptr', pfnEnum, 'int')
CertEnumSystemStoreLocation(dwFlags, pvArg, pfnEnum) => DllCall('Crypt32\CertEnumSystemStoreLocation', 'uint', dwFlags, 'ptr', pvArg, 'ptr', pfnEnum, 'int')
CertFindAttribute(pszObjId, cAttr, rgAttr) => DllCall('Crypt32\CertFindAttribute', 'astr', pszObjId, 'uint', cAttr, 'uint', rgAttr, 'ptr')
CertFindCRLInStore(hCertStore, dwEncodingType, dwFindFlags, dwFindType, pvFindPara, pPrevCrlContext) => DllCall('Crypt32\CertFindCRLInStore', 'ptr', hCertStore, 'uint', dwEncodingType, 'uint', dwFindFlags, 'uint', dwFindType, 'ptr', pvFindPara, 'ptr', pPrevCrlContext, 'ptr')
CertFindCTLInStore(hCertStore, dwMsgAndCertEncodingType, dwFindFlags, dwFindType, pvFindPara, pPrevCtlContext) => DllCall('Crypt32\CertFindCTLInStore', 'ptr', hCertStore, 'uint', dwMsgAndCertEncodingType, 'uint', dwFindFlags, 'uint', dwFindType, 'ptr', pvFindPara, 'ptr', pPrevCtlContext, 'ptr')
CertFindCertificateInCRL(pCert, pCrlContext, dwFlags, pvReserved, ppCrlEntry) => DllCall('Crypt32\CertFindCertificateInCRL', 'ptr', pCert, 'ptr', pCrlContext, 'uint', dwFlags, 'ptr', pvReserved, 'ptr', ppCrlEntry, 'int')
CertFindCertificateInStore(hCertStore, dwCertEncodingType, dwFindFlags, dwFindType, pvFindPara, pPrevCertContext) => DllCall('Crypt32\CertFindCertificateInStore', 'ptr', hCertStore, 'uint', dwCertEncodingType, 'uint', dwFindFlags, 'uint', dwFindType, 'ptr', pvFindPara, 'ptr', pPrevCertContext, 'ptr')
CertFindChainInStore(hCertStore, dwCertEncodingType, dwFindFlags, dwFindType, pvFindPara, pPrevChainContext) => DllCall('Crypt32\CertFindChainInStore', 'ptr', hCertStore, 'uint', dwCertEncodingType, 'uint', dwFindFlags, 'uint', dwFindType, 'ptr', pvFindPara, 'ptr', pPrevChainContext, 'ptr')
CertFindExtension(pszObjId, cExtensions, rgExtensions) => DllCall('Crypt32\CertFindExtension', 'astr', pszObjId, 'uint', cExtensions, 'uint', rgExtensions, 'ptr')
CertFindRDNAttr(pszObjId, pName) => DllCall('Crypt32\CertFindRDNAttr', 'astr', pszObjId, 'ptr', pName, 'ptr')
CertFindSubjectInCTL(dwEncodingType, dwSubjectType, pvSubject, pCtlContext, dwFlags) => DllCall('Crypt32\CertFindSubjectInCTL', 'uint', dwEncodingType, 'uint', dwSubjectType, 'ptr', pvSubject, 'ptr', pCtlContext, 'uint', dwFlags, 'ptr')
CertFindSubjectInSortedCTL(pSubjectIdentifier, pCtlContext, dwFlags, pvReserved, pEncodedAttributes) => DllCall('Crypt32\CertFindSubjectInSortedCTL', 'ptr', pSubjectIdentifier, 'ptr', pCtlContext, 'uint', dwFlags, 'ptr', pvReserved, 'ptr', pEncodedAttributes, 'int')
CertFreeCRLContext(pCrlContext) => DllCall('Crypt32\CertFreeCRLContext', 'ptr', pCrlContext, 'int')
CertFreeCTLContext(pCtlContext) => DllCall('Crypt32\CertFreeCTLContext', 'ptr', pCtlContext, 'int')
CertFreeCertificateChain(pChainContext) => DllCall('Crypt32\CertFreeCertificateChain', 'ptr', pChainContext, 'int')
CertFreeCertificateChainEngine(hChainEngine) => DllCall('Crypt32\CertFreeCertificateChainEngine', 'ptr', hChainEngine, 'int')
CertFreeCertificateChainList(prgpSelection) => DllCall('Crypt32\CertFreeCertificateChainList', 'ptr', prgpSelection, 'int')
CertFreeCertificateContext(pCertContext) => DllCall('Crypt32\CertFreeCertificateContext', 'ptr', pCertContext, 'int')
CertFreeServerOcspResponseContext(pServerOcspResponseContext) => DllCall('Crypt32\CertFreeServerOcspResponseContext', 'ptr', pServerOcspResponseContext, 'int')
CertGetCRLContextProperty(pCrlContext, dwPropId, pvData, &pcbData) => DllCall('Crypt32\CertGetCRLContextProperty', 'ptr', pCrlContext, 'uint', dwPropId, 'ptr', pvData, 'uint*', &pcbData, 'int')
CertGetCRLFromStore(hCertStore, pIssuerContext, pPrevCrlContext, &pdwFlags) => DllCall('Crypt32\CertGetCRLFromStore', 'ptr', hCertStore, 'ptr', pIssuerContext, 'ptr', pPrevCrlContext, 'uint*', &pdwFlags, 'ptr')
CertGetCTLContextProperty(pCtlContext, dwPropId, pvData, &pcbData) => DllCall('Crypt32\CertGetCTLContextProperty', 'ptr', pCtlContext, 'uint', dwPropId, 'ptr', pvData, 'uint*', &pcbData, 'int')
CertGetCertificateChain(hChainEngine, pCertContext, pTime, hAdditionalStore, pChainPara, dwFlags, pvReserved, ppChainContext) => DllCall('Crypt32\CertGetCertificateChain', 'ptr', hChainEngine, 'ptr', pCertContext, 'ptr', pTime, 'ptr', hAdditionalStore, 'ptr', pChainPara, 'uint', dwFlags, 'ptr', pvReserved, 'ptr', ppChainContext, 'int')
CertGetCertificateContextProperty(pCertContext, dwPropId, pvData, &pcbData) => DllCall('Crypt32\CertGetCertificateContextProperty', 'ptr', pCertContext, 'uint', dwPropId, 'ptr', pvData, 'uint*', &pcbData, 'int')
CertGetEnhancedKeyUsage(pCertContext, dwFlags, pUsage, &pcbUsage) => DllCall('Crypt32\CertGetEnhancedKeyUsage', 'ptr', pCertContext, 'uint', dwFlags, 'ptr', pUsage, 'uint*', &pcbUsage, 'int')
CertGetIntendedKeyUsage(dwCertEncodingType, pCertInfo, &pbKeyUsage, cbKeyUsage) => DllCall('Crypt32\CertGetIntendedKeyUsage', 'uint', dwCertEncodingType, 'ptr', pCertInfo, 'uchar*', &pbKeyUsage, 'uint', cbKeyUsage, 'int')
CertGetIssuerCertificateFromStore(hCertStore, pSubjectContext, pPrevIssuerContext, &pdwFlags) => DllCall('Crypt32\CertGetIssuerCertificateFromStore', 'ptr', hCertStore, 'ptr', pSubjectContext, 'ptr', pPrevIssuerContext, 'uint*', &pdwFlags, 'ptr')
CertGetNameString(pCertContext, dwType, dwFlags, pvTypePara, pszNameString, cchNameString) => DllCall('Crypt32\CertGetNameString', 'ptr', pCertContext, 'uint', dwType, 'uint', dwFlags, 'ptr', pvTypePara, 'str', pszNameString, 'uint', cchNameString, 'uint')
CertGetPublicKeyLength(dwCertEncodingType, pPublicKey) => DllCall('Crypt32\CertGetPublicKeyLength', 'uint', dwCertEncodingType, 'ptr', pPublicKey, 'uint')
CertGetServerOcspResponseContext(hServerOcspResponse, dwFlags, pvReserved) => DllCall('Crypt32\CertGetServerOcspResponseContext', 'ptr', hServerOcspResponse, 'uint', dwFlags, 'ptr', pvReserved, 'ptr')
CertGetStoreProperty(hCertStore, dwPropId, pvData, &pcbData) => DllCall('Crypt32\CertGetStoreProperty', 'ptr', hCertStore, 'uint', dwPropId, 'ptr', pvData, 'uint*', &pcbData, 'int')
CertGetSubjectCertificateFromStore(hCertStore, dwCertEncodingType, pCertId) => DllCall('Crypt32\CertGetSubjectCertificateFromStore', 'ptr', hCertStore, 'uint', dwCertEncodingType, 'ptr', pCertId, 'ptr')
CertGetValidUsages(cCerts, rghCerts, &cNumOIDs, rghOIDs, &pcbOIDs) => DllCall('Crypt32\CertGetValidUsages', 'uint', cCerts, 'ptr', rghCerts, 'int*', &cNumOIDs, 'ptr', rghOIDs, 'uint*', &pcbOIDs, 'int')
CertIsRDNAttrsInCertificateName(dwCertEncodingType, dwFlags, pCertName, pRDN) => DllCall('Crypt32\CertIsRDNAttrsInCertificateName', 'uint', dwCertEncodingType, 'uint', dwFlags, 'ptr', pCertName, 'ptr', pRDN, 'int')
CertIsValidCRLForCertificate(pCert, pCRL, dwFlags, pvReserved) => DllCall('Crypt32\CertIsValidCRLForCertificate', 'ptr', pCert, 'ptr', pCRL, 'uint', dwFlags, 'ptr', pvReserved, 'int')
CertNameToStr(dwCertEncodingType, pName, dwStrType, psz, csz) => DllCall('Crypt32\CertNameToStr', 'uint', dwCertEncodingType, 'ptr', pName, 'uint', dwStrType, 'str', psz, 'uint', csz, 'uint')
CertOIDToAlgId(pszObjId) => DllCall('Crypt32\CertOIDToAlgId', 'astr', pszObjId, 'uint')
CertOpenServerOcspResponse(pChainContext, dwFlags, pvReserved) => DllCall('Crypt32\CertOpenServerOcspResponse', 'ptr', pChainContext, 'uint', dwFlags, 'ptr', pvReserved, 'ptr')
CertOpenStore(lpszStoreProvider, dwMsgAndCertEncodingType, hCryptProv, dwFlags, pvPara) => DllCall('Crypt32\CertOpenStore', 'astr', lpszStoreProvider, 'uint', dwMsgAndCertEncodingType, 'uptr', hCryptProv, 'uint', dwFlags, 'ptr', pvPara, 'ptr')
CertOpenSystemStore(hprov, szSubsystemProtocol) => DllCall('Crypt32\CertOpenSystemStore', 'uptr', hprov, 'str', szSubsystemProtocol, 'ptr')
CertRDNValueToStr(dwValueType, pValue, psz, csz) => DllCall('Crypt32\CertRDNValueToStr', 'uint', dwValueType, 'ptr', pValue, 'str', psz, 'uint', csz, 'uint')
CertRegisterPhysicalStore(pvSystemStore, dwFlags, pwszStoreName, pStoreInfo, pvReserved) => DllCall('Crypt32\CertRegisterPhysicalStore', 'ptr', pvSystemStore, 'uint', dwFlags, 'wstr', pwszStoreName, 'ptr', pStoreInfo, 'ptr', pvReserved, 'int')
CertRegisterSystemStore(pvSystemStore, dwFlags, pStoreInfo, pvReserved) => DllCall('Crypt32\CertRegisterSystemStore', 'ptr', pvSystemStore, 'uint', dwFlags, 'ptr', pStoreInfo, 'ptr', pvReserved, 'int')
CertRemoveEnhancedKeyUsageIdentifier(pCertContext, pszUsageIdentifier) => DllCall('Crypt32\CertRemoveEnhancedKeyUsageIdentifier', 'ptr', pCertContext, 'astr', pszUsageIdentifier, 'int')
CertRemoveStoreFromCollection(hCollectionStore, hSiblingStore) => DllCall('Crypt32\CertRemoveStoreFromCollection', 'ptr', hCollectionStore, 'ptr', hSiblingStore, 'int')
CertRetrieveLogoOrBiometricInfo(pCertContext, lpszLogoOrBiometricType, dwRetrievalFlags, dwTimeout, dwFlags, pvReserved, &ppbData, &pcbData, ppwszMimeType) => DllCall('Crypt32\CertRetrieveLogoOrBiometricInfo', 'ptr', pCertContext, 'astr', lpszLogoOrBiometricType, 'uint', dwRetrievalFlags, 'uint', dwTimeout, 'uint', dwFlags, 'ptr', pvReserved, 'uchar*', &ppbData, 'uint*', &pcbData, 'ptr', ppwszMimeType, 'int')
CertSaveStore(hCertStore, dwMsgAndCertEncodingType, dwSaveAs, dwSaveTo, pvSaveToPara, dwFlags) => DllCall('Crypt32\CertSaveStore', 'ptr', hCertStore, 'uint', dwMsgAndCertEncodingType, 'uint', dwSaveAs, 'uint', dwSaveTo, 'ptr', pvSaveToPara, 'uint', dwFlags, 'int')
CertSelectCertificateChains(pSelectionContext, dwFlags, pChainParameters, cCriteria, rgpCriteria, hStore, pcSelection, pprgpSelection) => DllCall('Crypt32\CertSelectCertificateChains', 'ptr', pSelectionContext, 'uint', dwFlags, 'ptr', pChainParameters, 'uint', cCriteria, 'ptr', rgpCriteria, 'ptr', hStore, 'ptr', pcSelection, 'ptr', pprgpSelection, 'int')
CertSerializeCRLStoreElement(pCrlContext, dwFlags, &pbElement, &pcbElement) => DllCall('Crypt32\CertSerializeCRLStoreElement', 'ptr', pCrlContext, 'uint', dwFlags, 'uchar*', &pbElement, 'uint*', &pcbElement, 'int')
CertSerializeCTLStoreElement(pCtlContext, dwFlags, &pbElement, &pcbElement) => DllCall('Crypt32\CertSerializeCTLStoreElement', 'ptr', pCtlContext, 'uint', dwFlags, 'uchar*', &pbElement, 'uint*', &pcbElement, 'int')
CertSerializeCertificateStoreElement(pCertContext, dwFlags, &pbElement, &pcbElement) => DllCall('Crypt32\CertSerializeCertificateStoreElement', 'ptr', pCertContext, 'uint', dwFlags, 'uchar*', &pbElement, 'uint*', &pcbElement, 'int')
CertSetCRLContextProperty(pCrlContext, dwPropId, dwFlags, pvData) => DllCall('Crypt32\CertSetCRLContextProperty', 'ptr', pCrlContext, 'uint', dwPropId, 'uint', dwFlags, 'ptr', pvData, 'int')
CertSetCTLContextProperty(pCtlContext, dwPropId, dwFlags, pvData) => DllCall('Crypt32\CertSetCTLContextProperty', 'ptr', pCtlContext, 'uint', dwPropId, 'uint', dwFlags, 'ptr', pvData, 'int')
CertSetCertificateContextPropertiesFromCTLEntry(pCertContext, pCtlEntry, dwFlags) => DllCall('Crypt32\CertSetCertificateContextPropertiesFromCTLEntry', 'ptr', pCertContext, 'ptr', pCtlEntry, 'uint', dwFlags, 'int')
CertSetCertificateContextProperty(pCertContext, dwPropId, dwFlags, pvData) => DllCall('Crypt32\CertSetCertificateContextProperty', 'ptr', pCertContext, 'uint', dwPropId, 'uint', dwFlags, 'ptr', pvData, 'int')
CertSetEnhancedKeyUsage(pCertContext, pUsage) => DllCall('Crypt32\CertSetEnhancedKeyUsage', 'ptr', pCertContext, 'ptr', pUsage, 'int')
CertSetStoreProperty(hCertStore, dwPropId, dwFlags, pvData) => DllCall('Crypt32\CertSetStoreProperty', 'ptr', hCertStore, 'uint', dwPropId, 'uint', dwFlags, 'ptr', pvData, 'int')
CertStrToName(dwCertEncodingType, pszX500, dwStrType, pvReserved, &pbEncoded, &pcbEncoded, ppszError) => DllCall('Crypt32\CertStrToName', 'uint', dwCertEncodingType, 'str', pszX500, 'uint', dwStrType, 'ptr', pvReserved, 'uchar*', &pbEncoded, 'uint*', &pcbEncoded, 'str', ppszError, 'int')
CertUnregisterPhysicalStore(pvSystemStore, dwFlags, pwszStoreName) => DllCall('Crypt32\CertUnregisterPhysicalStore', 'ptr', pvSystemStore, 'uint', dwFlags, 'wstr', pwszStoreName, 'int')
CertUnregisterSystemStore(pvSystemStore, dwFlags) => DllCall('Crypt32\CertUnregisterSystemStore', 'ptr', pvSystemStore, 'uint', dwFlags, 'int')
CertVerifyCRLRevocation(dwCertEncodingType, pCertId, cCrlInfo, rgpCrlInfo) => DllCall('Crypt32\CertVerifyCRLRevocation', 'uint', dwCertEncodingType, 'ptr', pCertId, 'uint', cCrlInfo, 'ptr', rgpCrlInfo, 'int')
CertVerifyCRLTimeValidity(pTimeToVerify, pCrlInfo) => DllCall('Crypt32\CertVerifyCRLTimeValidity', 'ptr', pTimeToVerify, 'ptr', pCrlInfo, 'int')
CertVerifyCTLUsage(dwEncodingType, dwSubjectType, pvSubject, pSubjectUsage, dwFlags, pVerifyUsagePara, pVerifyUsageStatus) => DllCall('Crypt32\CertVerifyCTLUsage', 'uint', dwEncodingType, 'uint', dwSubjectType, 'ptr', pvSubject, 'ptr', pSubjectUsage, 'uint', dwFlags, 'ptr', pVerifyUsagePara, 'ptr', pVerifyUsageStatus, 'int')
CertVerifyCertificateChainPolicy(pszPolicyOID, pChainContext, pPolicyPara, pPolicyStatus) => DllCall('Crypt32\CertVerifyCertificateChainPolicy', 'astr', pszPolicyOID, 'ptr', pChainContext, 'ptr', pPolicyPara, 'ptr', pPolicyStatus, 'int')
CertVerifyRevocation(dwEncodingType, dwRevType, cContext, rgpvContext, dwFlags, pRevPara, pRevStatus) => DllCall('Crypt32\CertVerifyRevocation', 'uint', dwEncodingType, 'uint', dwRevType, 'uint', cContext, 'ptr', rgpvContext, 'uint', dwFlags, 'ptr', pRevPara, 'ptr', pRevStatus, 'int')
CertVerifySubjectCertificateContext(pSubject, pIssuer, &pdwFlags) => DllCall('Crypt32\CertVerifySubjectCertificateContext', 'ptr', pSubject, 'ptr', pIssuer, 'uint*', &pdwFlags, 'int')
CertVerifyTimeValidity(pTimeToVerify, pCertInfo) => DllCall('Crypt32\CertVerifyTimeValidity', 'ptr', pTimeToVerify, 'ptr', pCertInfo, 'int')
CertVerifyValidityNesting(pSubjectInfo, pIssuerInfo) => DllCall('Crypt32\CertVerifyValidityNesting', 'ptr', pSubjectInfo, 'ptr', pIssuerInfo, 'int')
CryptAcquireCertificatePrivateKey(pCert, dwFlags, pvParameters, phCryptProvOrNCryptKey, &pdwKeySpec, &pfCallerFreeProvOrNCryptKey) => DllCall('Crypt32\CryptAcquireCertificatePrivateKey', 'ptr', pCert, 'uint', dwFlags, 'ptr', pvParameters, 'uptr', phCryptProvOrNCryptKey, 'uint*', &pdwKeySpec, 'int*', &pfCallerFreeProvOrNCryptKey, 'int')
CryptBinaryToString(&pbBinary, cbBinary, dwFlags, pszString, &pcchString) => DllCall('Crypt32\CryptBinaryToString', 'uchar*', &pbBinary, 'uint', cbBinary, 'uint', dwFlags, 'str', pszString, 'uint*', &pcchString, 'int')
CryptCreateKeyIdentifierFromCSP(dwCertEncodingType, pszPubKeyOID, pPubKeyStruc, cbPubKeyStruc, dwFlags, pvReserved, &pbHash, &pcbHash) => DllCall('Crypt32\CryptCreateKeyIdentifierFromCSP', 'uint', dwCertEncodingType, 'astr', pszPubKeyOID, 'ptr', pPubKeyStruc, 'uint', cbPubKeyStruc, 'uint', dwFlags, 'ptr', pvReserved, 'uchar*', &pbHash, 'uint*', &pcbHash, 'int')
CryptDecodeMessage(dwMsgTypeFlags, pDecryptPara, pVerifyPara, dwSignerIndex, &pbEncodedBlob, cbEncodedBlob, dwPrevInnerContentType, &pdwMsgType, &pdwInnerContentType, &pbDecoded, &pcbDecoded, ppXchgCert, ppSignerCert) => DllCall('Crypt32\CryptDecodeMessage', 'uint', dwMsgTypeFlags, 'ptr', pDecryptPara, 'ptr', pVerifyPara, 'uint', dwSignerIndex, 'uchar*', &pbEncodedBlob, 'uint', cbEncodedBlob, 'uint', dwPrevInnerContentType, 'uint*', &pdwMsgType, 'uint*', &pdwInnerContentType, 'uchar*', &pbDecoded, 'uint*', &pcbDecoded, 'ptr', ppXchgCert, 'ptr', ppSignerCert, 'int')
CryptDecodeObject(dwCertEncodingType, lpszStructType, &pbEncoded, cbEncoded, dwFlags, pvStructInfo, &pcbStructInfo) => DllCall('Crypt32\CryptDecodeObject', 'uint', dwCertEncodingType, 'astr', lpszStructType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uint', dwFlags, 'ptr', pvStructInfo, 'uint*', &pcbStructInfo, 'int')
CryptDecodeObjectEx(dwCertEncodingType, lpszStructType, &pbEncoded, cbEncoded, dwFlags, pDecodePara, pvStructInfo, &pcbStructInfo) => DllCall('Crypt32\CryptDecodeObjectEx', 'uint', dwCertEncodingType, 'astr', lpszStructType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uint', dwFlags, 'ptr', pDecodePara, 'ptr', pvStructInfo, 'uint*', &pcbStructInfo, 'int')
CryptDecryptAndVerifyMessageSignature(pDecryptPara, pVerifyPara, dwSignerIndex, &pbEncryptedBlob, cbEncryptedBlob, &pbDecrypted, &pcbDecrypted, ppXchgCert, ppSignerCert) => DllCall('Crypt32\CryptDecryptAndVerifyMessageSignature', 'ptr', pDecryptPara, 'ptr', pVerifyPara, 'uint', dwSignerIndex, 'uchar*', &pbEncryptedBlob, 'uint', cbEncryptedBlob, 'uchar*', &pbDecrypted, 'uint*', &pcbDecrypted, 'ptr', ppXchgCert, 'ptr', ppSignerCert, 'int')
CryptDecryptMessage(pDecryptPara, &pbEncryptedBlob, cbEncryptedBlob, &pbDecrypted, &pcbDecrypted, ppXchgCert) => DllCall('Crypt32\CryptDecryptMessage', 'ptr', pDecryptPara, 'uchar*', &pbEncryptedBlob, 'uint', cbEncryptedBlob, 'uchar*', &pbDecrypted, 'uint*', &pcbDecrypted, 'ptr', ppXchgCert, 'int')
CryptEncodeObject(dwCertEncodingType, lpszStructType, pvStructInfo, &pbEncoded, &pcbEncoded) => DllCall('Crypt32\CryptEncodeObject', 'uint', dwCertEncodingType, 'astr', lpszStructType, 'ptr', pvStructInfo, 'uchar*', &pbEncoded, 'uint*', &pcbEncoded, 'int')
CryptEncodeObjectEx(dwCertEncodingType, lpszStructType, pvStructInfo, dwFlags, pEncodePara, pvEncoded, &pcbEncoded) => DllCall('Crypt32\CryptEncodeObjectEx', 'uint', dwCertEncodingType, 'astr', lpszStructType, 'ptr', pvStructInfo, 'uint', dwFlags, 'ptr', pEncodePara, 'ptr', pvEncoded, 'uint*', &pcbEncoded, 'int')
CryptEncryptMessage(pEncryptPara, cRecipientCert, rgpRecipientCert, &pbToBeEncrypted, cbToBeEncrypted, &pbEncryptedBlob, &pcbEncryptedBlob) => DllCall('Crypt32\CryptEncryptMessage', 'ptr', pEncryptPara, 'uint', cRecipientCert, 'ptr', rgpRecipientCert, 'uchar*', &pbToBeEncrypted, 'uint', cbToBeEncrypted, 'uchar*', &pbEncryptedBlob, 'uint*', &pcbEncryptedBlob, 'int')
CryptEnumKeyIdentifierProperties(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvArg, pfnEnum) => DllCall('Crypt32\CryptEnumKeyIdentifierProperties', 'ptr', pKeyIdentifier, 'uint', dwPropId, 'uint', dwFlags, 'wstr', pwszComputerName, 'ptr', pvReserved, 'ptr', pvArg, 'ptr', pfnEnum, 'int')
CryptEnumOIDFunction(dwEncodingType, pszFuncName, pszOID, dwFlags, pvArg, pfnEnumOIDFunc) => DllCall('Crypt32\CryptEnumOIDFunction', 'uint', dwEncodingType, 'astr', pszFuncName, 'astr', pszOID, 'uint', dwFlags, 'ptr', pvArg, 'ptr', pfnEnumOIDFunc, 'int')
CryptEnumOIDInfo(dwGroupId, dwFlags, pvArg, pfnEnumOIDInfo) => DllCall('Crypt32\CryptEnumOIDInfo', 'uint', dwGroupId, 'uint', dwFlags, 'ptr', pvArg, 'ptr', pfnEnumOIDInfo, 'int')
CryptExportPKCS8(hCryptProv, dwKeySpec, pszPrivateKeyObjId, dwFlags, pvAuxInfo, &pbPrivateKeyBlob, &pcbPrivateKeyBlob) => DllCall('Crypt32\CryptExportPKCS8', 'uptr', hCryptProv, 'uint', dwKeySpec, 'astr', pszPrivateKeyObjId, 'uint', dwFlags, 'ptr', pvAuxInfo, 'uchar*', &pbPrivateKeyBlob, 'uint*', &pcbPrivateKeyBlob, 'int')
CryptExportPublicKeyInfo(hCryptProvOrNCryptKey, dwKeySpec, dwCertEncodingType, pInfo, &pcbInfo) => DllCall('Crypt32\CryptExportPublicKeyInfo', 'uptr', hCryptProvOrNCryptKey, 'uint', dwKeySpec, 'uint', dwCertEncodingType, 'ptr', pInfo, 'uint*', &pcbInfo, 'int')
CryptExportPublicKeyInfoEx(hCryptProvOrNCryptKey, dwKeySpec, dwCertEncodingType, pszPublicKeyObjId, dwFlags, pvAuxInfo, pInfo, &pcbInfo) => DllCall('Crypt32\CryptExportPublicKeyInfoEx', 'uptr', hCryptProvOrNCryptKey, 'uint', dwKeySpec, 'uint', dwCertEncodingType, 'astr', pszPublicKeyObjId, 'uint', dwFlags, 'ptr', pvAuxInfo, 'ptr', pInfo, 'uint*', &pcbInfo, 'int')
CryptExportPublicKeyInfoFromBCryptKeyHandle(hBCryptKey, dwCertEncodingType, pszPublicKeyObjId, dwFlags, pvAuxInfo, pInfo, pcbInfo) => DllCall('Crypt32\CryptExportPublicKeyInfoFromBCryptKeyHandle', 'ptr', hBCryptKey, 'uint', dwCertEncodingType, 'astr', pszPublicKeyObjId, 'uint', dwFlags, 'ptr', pvAuxInfo, 'ptr', pInfo, 'uint', pcbInfo, 'int')
CryptFindCertificateKeyProvInfo(pCert, dwFlags, pvReserved) => DllCall('Crypt32\CryptFindCertificateKeyProvInfo', 'ptr', pCert, 'uint', dwFlags, 'ptr', pvReserved, 'int')
CryptFindLocalizedName(pwszCryptName) => DllCall('Crypt32\CryptFindLocalizedName', 'wstr', pwszCryptName, 'wstr')
CryptFindOIDInfo(dwKeyType, pvKey, dwGroupId) => DllCall('Crypt32\CryptFindOIDInfo', 'uint', dwKeyType, 'ptr', pvKey, 'uint', dwGroupId, 'ptr')
CryptFormatObject(dwCertEncodingType, dwFormatType, dwFormatStrType, pFormatStruct, lpszStructType, &pbEncoded, cbEncoded, pbFormat, &pcbFormat) => DllCall('Crypt32\CryptFormatObject', 'uint', dwCertEncodingType, 'uint', dwFormatType, 'uint', dwFormatStrType, 'ptr', pFormatStruct, 'astr', lpszStructType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'ptr', pbFormat, 'uint*', &pcbFormat, 'int')
CryptFreeOIDFunctionAddress(hFuncAddr, dwFlags) => DllCall('Crypt32\CryptFreeOIDFunctionAddress', 'uptr', hFuncAddr, 'uint', dwFlags, 'int')
CryptGetDefaultOIDDllList(hFuncSet, dwEncodingType, pwszDllList, &pcchDllList) => DllCall('Crypt32\CryptGetDefaultOIDDllList', 'uptr', hFuncSet, 'uint', dwEncodingType, 'wstr', pwszDllList, 'uint*', &pcchDllList, 'int')
CryptGetDefaultOIDFunctionAddress(hFuncSet, dwEncodingType, pwszDll, dwFlags, ppvFuncAddr, phFuncAddr) => DllCall('Crypt32\CryptGetDefaultOIDFunctionAddress', 'uptr', hFuncSet, 'uint', dwEncodingType, 'wstr', pwszDll, 'uint', dwFlags, 'ptr', ppvFuncAddr, 'uptr', phFuncAddr, 'int')
CryptGetKeyIdentifierProperty(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvData, &pcbData) => DllCall('Crypt32\CryptGetKeyIdentifierProperty', 'ptr', pKeyIdentifier, 'uint', dwPropId, 'uint', dwFlags, 'wstr', pwszComputerName, 'ptr', pvReserved, 'ptr', pvData, 'uint*', &pcbData, 'int')
CryptGetMessageCertificates(dwMsgAndCertEncodingType, hCryptProv, dwFlags, &pbSignedBlob, cbSignedBlob) => DllCall('Crypt32\CryptGetMessageCertificates', 'uint', dwMsgAndCertEncodingType, 'uptr', hCryptProv, 'uint', dwFlags, 'uchar*', &pbSignedBlob, 'uint', cbSignedBlob, 'ptr')
CryptGetMessageSignerCount(dwMsgEncodingType, &pbSignedBlob, cbSignedBlob) => DllCall('Crypt32\CryptGetMessageSignerCount', 'uint', dwMsgEncodingType, 'uchar*', &pbSignedBlob, 'uint', cbSignedBlob, 'int')
CryptGetOIDFunctionAddress(hFuncSet, dwEncodingType, pszOID, dwFlags, ppvFuncAddr, phFuncAddr) => DllCall('Crypt32\CryptGetOIDFunctionAddress', 'uptr', hFuncSet, 'uint', dwEncodingType, 'astr', pszOID, 'uint', dwFlags, 'ptr', ppvFuncAddr, 'uptr', phFuncAddr, 'int')
CryptGetOIDFunctionValue(dwEncodingType, pszFuncName, pszOID, pwszValueName, &pdwValueType, &pbValueData, &pcbValueData) => DllCall('Crypt32\CryptGetOIDFunctionValue', 'uint', dwEncodingType, 'astr', pszFuncName, 'astr', pszOID, 'wstr', pwszValueName, 'uint*', &pdwValueType, 'uchar*', &pbValueData, 'uint*', &pcbValueData, 'int')
CryptHashCertificate(hCryptProv, Algid, dwFlags, &pbEncoded, cbEncoded, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptHashCertificate', 'uptr', hCryptProv, 'uint', Algid, 'uint', dwFlags, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptHashCertificate2(pwszCNGHashAlgid, dwFlags, pvReserved, &pbEncoded, cbEncoded, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptHashCertificate2', 'wstr', pwszCNGHashAlgid, 'uint', dwFlags, 'ptr', pvReserved, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptHashMessage(pHashPara, fDetachedHash, cToBeHashed, &rgpbToBeHashed, rgcbToBeHashed, &pbHashedBlob, &pcbHashedBlob, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptHashMessage', 'ptr', pHashPara, 'int', fDetachedHash, 'uint', cToBeHashed, 'uchar*', &rgpbToBeHashed, 'uint', rgcbToBeHashed, 'uchar*', &pbHashedBlob, 'uint*', &pcbHashedBlob, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptHashPublicKeyInfo(hCryptProv, Algid, dwFlags, dwCertEncodingType, pInfo, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptHashPublicKeyInfo', 'uptr', hCryptProv, 'uint', Algid, 'uint', dwFlags, 'uint', dwCertEncodingType, 'ptr', pInfo, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptHashToBeSigned(hCryptProv, dwCertEncodingType, &pbEncoded, cbEncoded, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptHashToBeSigned', 'uptr', hCryptProv, 'uint', dwCertEncodingType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptImportPKCS8(sPrivateKeyAndParams, dwFlags, phCryptProv, pvAuxInfo) => DllCall('Crypt32\CryptImportPKCS8', 'uint', sPrivateKeyAndParams, 'uint', dwFlags, 'uptr', phCryptProv, 'ptr', pvAuxInfo, 'int')
CryptImportPublicKeyInfo(hCryptProv, dwCertEncodingType, pInfo, phKey) => DllCall('Crypt32\CryptImportPublicKeyInfo', 'uptr', hCryptProv, 'uint', dwCertEncodingType, 'ptr', pInfo, 'uptr', phKey, 'int')
CryptImportPublicKeyInfoEx(hCryptProv, dwCertEncodingType, pInfo, aiKeyAlg, dwFlags, pvAuxInfo, phKey) => DllCall('Crypt32\CryptImportPublicKeyInfoEx', 'uptr', hCryptProv, 'uint', dwCertEncodingType, 'ptr', pInfo, 'uint', aiKeyAlg, 'uint', dwFlags, 'ptr', pvAuxInfo, 'uptr', phKey, 'int')
CryptImportPublicKeyInfoEx2(dwCertEncodingType, pInfo, dwFlags, pvAuxInfo, phKey) => DllCall('Crypt32\CryptImportPublicKeyInfoEx2', 'uint', dwCertEncodingType, 'ptr', pInfo, 'uint', dwFlags, 'ptr', pvAuxInfo, 'ptr', phKey, 'int')
CryptInitOIDFunctionSet(pszFuncName, dwFlags) => DllCall('Crypt32\CryptInitOIDFunctionSet', 'astr', pszFuncName, 'uint', dwFlags, 'uptr')
CryptInstallDefaultContext(hCryptProv, dwDefaultType, pvDefaultPara, dwFlags, pvReserved, phDefaultContext) => DllCall('Crypt32\CryptInstallDefaultContext', 'uptr', hCryptProv, 'uint', dwDefaultType, 'ptr', pvDefaultPara, 'uint', dwFlags, 'ptr', pvReserved, 'uptr', phDefaultContext, 'int')
CryptInstallOIDFunctionAddress(hModule, dwEncodingType, pszFuncName, cFuncEntry, rgFuncEntry, dwFlags) => DllCall('Crypt32\CryptInstallOIDFunctionAddress', 'ptr', hModule, 'uint', dwEncodingType, 'astr', pszFuncName, 'uint', cFuncEntry, 'uint', rgFuncEntry, 'uint', dwFlags, 'int')
CryptMemAlloc(cbSize) => DllCall('Crypt32\CryptMemAlloc', 'uint', cbSize, 'ptr')
CryptMemFree(pv) => DllCall('Crypt32\CryptMemFree', 'ptr', pv, 'int')
CryptMemRealloc(pv, cbSize) => DllCall('Crypt32\CryptMemRealloc', 'ptr', pv, 'uint', cbSize, 'ptr')
CryptMsgCalculateEncodedLength(dwMsgEncodingType, dwFlags, dwMsgType, pvMsgEncodeInfo, pszInnerContentObjID, cbData) => DllCall('Crypt32\CryptMsgCalculateEncodedLength', 'uint', dwMsgEncodingType, 'uint', dwFlags, 'uint', dwMsgType, 'ptr', pvMsgEncodeInfo, 'astr', pszInnerContentObjID, 'uint', cbData, 'uint')
CryptMsgClose(hCryptMsg) => DllCall('Crypt32\CryptMsgClose', 'uptr', hCryptMsg, 'int')
CryptMsgControl(hCryptMsg, dwFlags, dwCtrlType, pvCtrlPara) => DllCall('Crypt32\CryptMsgControl', 'uptr', hCryptMsg, 'uint', dwFlags, 'uint', dwCtrlType, 'ptr', pvCtrlPara, 'int')
CryptMsgCountersign(hCryptMsg, dwIndex, cCountersigners, rgCountersigners) => DllCall('Crypt32\CryptMsgCountersign', 'uptr', hCryptMsg, 'uint', dwIndex, 'uint', cCountersigners, 'ptr', rgCountersigners, 'int')
CryptMsgCountersignEncoded(dwEncodingType, pbSignerInfo, cbSignerInfo, cCountersigners, rgCountersigners, pbCountersignature, pcbCountersignature) => DllCall('Crypt32\CryptMsgCountersignEncoded', 'uint', dwEncodingType, 'ptr', pbSignerInfo, 'uint', cbSignerInfo, 'uint', cCountersigners, 'ptr', rgCountersigners, 'ptr', pbCountersignature, 'ptr', pcbCountersignature, 'int')
CryptMsgDuplicate(hCryptMsg) => DllCall('Crypt32\CryptMsgDuplicate', 'uptr', hCryptMsg, 'uptr')
CryptMsgEncodeAndSignCTL(dwMsgEncodingType, pCtlInfo, pSignInfo, dwFlags, &pbEncoded, &pcbEncoded) => DllCall('Crypt32\CryptMsgEncodeAndSignCTL', 'uint', dwMsgEncodingType, 'ptr', pCtlInfo, 'ptr', pSignInfo, 'uint', dwFlags, 'uchar*', &pbEncoded, 'uint*', &pcbEncoded, 'int')
CryptMsgGetAndVerifySigner(hCryptMsg, cSignerStore, rghSignerStore, dwFlags, ppSigner, &pdwSignerIndex) => DllCall('Crypt32\CryptMsgGetAndVerifySigner', 'uptr', hCryptMsg, 'uint', cSignerStore, 'ptr', rghSignerStore, 'uint', dwFlags, 'ptr', ppSigner, 'uint*', &pdwSignerIndex, 'int')
CryptMsgGetParam(hCryptMsg, dwParamType, dwIndex, pvData, &pcbData) => DllCall('Crypt32\CryptMsgGetParam', 'uptr', hCryptMsg, 'uint', dwParamType, 'uint', dwIndex, 'ptr', pvData, 'uint*', &pcbData, 'int')
CryptMsgOpenToDecode(dwMsgEncodingType, dwFlags, dwMsgType, hCryptProv, pRecipientInfo, pStreamInfo) => DllCall('Crypt32\CryptMsgOpenToDecode', 'uint', dwMsgEncodingType, 'uint', dwFlags, 'uint', dwMsgType, 'uptr', hCryptProv, 'ptr', pRecipientInfo, 'ptr', pStreamInfo, 'uptr')
CryptMsgOpenToEncode(dwMsgEncodingType, dwFlags, dwMsgType, pvMsgEncodeInfo, pszInnerContentObjID, pStreamInfo) => DllCall('Crypt32\CryptMsgOpenToEncode', 'uint', dwMsgEncodingType, 'uint', dwFlags, 'uint', dwMsgType, 'ptr', pvMsgEncodeInfo, 'astr', pszInnerContentObjID, 'ptr', pStreamInfo, 'uptr')
CryptMsgSignCTL(dwMsgEncodingType, &pbCtlContent, cbCtlContent, pSignInfo, dwFlags, &pbEncoded, &pcbEncoded) => DllCall('Crypt32\CryptMsgSignCTL', 'uint', dwMsgEncodingType, 'uchar*', &pbCtlContent, 'uint', cbCtlContent, 'ptr', pSignInfo, 'uint', dwFlags, 'uchar*', &pbEncoded, 'uint*', &pcbEncoded, 'int')
CryptMsgUpdate(hCryptMsg, &pbData, cbData, fFinal) => DllCall('Crypt32\CryptMsgUpdate', 'uptr', hCryptMsg, 'uchar*', &pbData, 'uint', cbData, 'int', fFinal, 'int')
CryptMsgVerifyCountersignatureEncoded(hCryptProv, dwEncodingType, pbSignerInfo, cbSignerInfo, pbSignerInfoCountersignature, cbSignerInfoCountersignature, pciCountersigner) => DllCall('Crypt32\CryptMsgVerifyCountersignatureEncoded', 'uptr', hCryptProv, 'uint', dwEncodingType, 'ptr', pbSignerInfo, 'uint', cbSignerInfo, 'ptr', pbSignerInfoCountersignature, 'uint', cbSignerInfoCountersignature, 'ptr', pciCountersigner, 'int')
CryptMsgVerifyCountersignatureEncodedEx(hCryptProv, dwEncodingType, pbSignerInfo, cbSignerInfo, pbSignerInfoCountersignature, cbSignerInfoCountersignature, dwSignerType, pvSigner, dwFlags, pvExtra) => DllCall('Crypt32\CryptMsgVerifyCountersignatureEncodedEx', 'uptr', hCryptProv, 'uint', dwEncodingType, 'ptr', pbSignerInfo, 'uint', cbSignerInfo, 'ptr', pbSignerInfoCountersignature, 'uint', cbSignerInfoCountersignature, 'uint', dwSignerType, 'ptr', pvSigner, 'uint', dwFlags, 'ptr', pvExtra, 'int')
CryptProtectData(pDataIn, szDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pDataOut) => DllCall('Crypt32\CryptProtectData', 'ptr', pDataIn, 'wstr', szDataDescr, 'ptr', pOptionalEntropy, 'ptr', pvReserved, 'ptr', pPromptStruct, 'uint', dwFlags, 'ptr', pDataOut, 'int')
CryptProtectMemory(pData, cbData, dwFlags) => DllCall('Crypt32\CryptProtectMemory', 'ptr', pData, 'uint', cbData, 'uint', dwFlags, 'int')
CryptQueryObject(dwObjectType, pvObject, dwExpectedContentTypeFlags, dwExpectedFormatTypeFlags, dwFlags, &pdwMsgAndCertEncodingType, &pdwContentType, &pdwFormatType, phCertStore, phMsg, ppvContext) => DllCall('Crypt32\CryptQueryObject', 'uint', dwObjectType, 'ptr', pvObject, 'uint', dwExpectedContentTypeFlags, 'uint', dwExpectedFormatTypeFlags, 'uint', dwFlags, 'uint*', &pdwMsgAndCertEncodingType, 'uint*', &pdwContentType, 'uint*', &pdwFormatType, 'ptr', phCertStore, 'uptr', phMsg, 'ptr', ppvContext, 'int')
CryptRegisterDefaultOIDFunction(dwEncodingType, pszFuncName, dwIndex, pwszDll) => DllCall('Crypt32\CryptRegisterDefaultOIDFunction', 'uint', dwEncodingType, 'astr', pszFuncName, 'uint', dwIndex, 'wstr', pwszDll, 'int')
CryptRegisterOIDFunction(dwEncodingType, pszFuncName, pszOID, pwszDll, pszOverrideFuncName) => DllCall('Crypt32\CryptRegisterOIDFunction', 'uint', dwEncodingType, 'astr', pszFuncName, 'astr', pszOID, 'wstr', pwszDll, 'astr', pszOverrideFuncName, 'int')
CryptRegisterOIDInfo(pInfo, dwFlags) => DllCall('Crypt32\CryptRegisterOIDInfo', 'ptr', pInfo, 'uint', dwFlags, 'int')
CryptRetrieveTimeStamp(wszUrl, dwRetrievalFlags, dwTimeout, pszHashId, pPara, &pbData, cbData, ppTsContext, ppTsSigner, phStore) => DllCall('Crypt32\CryptRetrieveTimeStamp', 'wstr', wszUrl, 'uint', dwRetrievalFlags, 'uint', dwTimeout, 'astr', pszHashId, 'ptr', pPara, 'uchar*', &pbData, 'uint', cbData, 'ptr', ppTsContext, 'ptr', ppTsSigner, 'ptr', phStore, 'int')
CryptSIPAddProvider(psNewProv) => DllCall('Crypt32\CryptSIPAddProvider', 'ptr', psNewProv, 'int')
CryptSIPCreateIndirectData(pSubjectInfo, &pcbIndirectData, pIndirectData) => DllCall('Crypt32\CryptSIPCreateIndirectData', 'ptr', pSubjectInfo, 'uint*', &pcbIndirectData, 'ptr', pIndirectData, 'int')
CryptSIPGetSignedDataMsg(pSubjectInfo, &pdwEncodingType, dwIndex, &pcbSignedDataMsg, &pbSignedDataMsg) => DllCall('Crypt32\CryptSIPGetSignedDataMsg', 'ptr', pSubjectInfo, 'uint*', &pdwEncodingType, 'uint', dwIndex, 'uint*', &pcbSignedDataMsg, 'uchar*', &pbSignedDataMsg, 'int')
CryptSIPLoad(pgSubject, dwFlags, pSipDispatch) => DllCall('Crypt32\CryptSIPLoad', 'ptr', pgSubject, 'uint', dwFlags, 'ptr', pSipDispatch, 'int')
CryptSIPPutSignedDataMsg(pSubjectInfo, dwEncodingType, &pdwIndex, cbSignedDataMsg, &pbSignedDataMsg) => DllCall('Crypt32\CryptSIPPutSignedDataMsg', 'ptr', pSubjectInfo, 'uint', dwEncodingType, 'uint*', &pdwIndex, 'uint', cbSignedDataMsg, 'uchar*', &pbSignedDataMsg, 'int')
CryptSIPRemoveProvider(pgProv) => DllCall('Crypt32\CryptSIPRemoveProvider', 'ptr', pgProv, 'int')
CryptSIPRemoveSignedDataMsg(pSubjectInfo, dwIndex) => DllCall('Crypt32\CryptSIPRemoveSignedDataMsg', 'ptr', pSubjectInfo, 'uint', dwIndex, 'int')
CryptSIPRetrieveSubjectGuid(FileName, hFileIn, pgSubject) => DllCall('Crypt32\CryptSIPRetrieveSubjectGuid', 'wstr', FileName, 'ptr', hFileIn, 'ptr', pgSubject, 'int')
CryptSIPRetrieveSubjectGuidForCatalogFile(FileName, hFileIn, pgSubject) => DllCall('Crypt32\CryptSIPRetrieveSubjectGuidForCatalogFile', 'wstr', FileName, 'ptr', hFileIn, 'ptr', pgSubject, 'int')
CryptSIPVerifyIndirectData(pSubjectInfo, pIndirectData) => DllCall('Crypt32\CryptSIPVerifyIndirectData', 'ptr', pSubjectInfo, 'ptr', pIndirectData, 'int')
CryptSetKeyIdentifierProperty(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvData) => DllCall('Crypt32\CryptSetKeyIdentifierProperty', 'ptr', pKeyIdentifier, 'uint', dwPropId, 'uint', dwFlags, 'wstr', pwszComputerName, 'ptr', pvReserved, 'ptr', pvData, 'int')
CryptSetOIDFunctionValue(dwEncodingType, pszFuncName, pszOID, pwszValueName, dwValueType, &pbValueData, cbValueData) => DllCall('Crypt32\CryptSetOIDFunctionValue', 'uint', dwEncodingType, 'astr', pszFuncName, 'astr', pszOID, 'wstr', pwszValueName, 'uint', dwValueType, 'uchar*', &pbValueData, 'uint', cbValueData, 'int')
CryptSignAndEncodeCertificate(hCryptProvOrNCryptKey, dwKeySpec, dwCertEncodingType, lpszStructType, pvStructInfo, pSignatureAlgorithm, pvHashAuxInfo, pbEncoded, &pcbEncoded) => DllCall('Crypt32\CryptSignAndEncodeCertificate', 'uptr', hCryptProvOrNCryptKey, 'uint', dwKeySpec, 'uint', dwCertEncodingType, 'astr', lpszStructType, 'ptr', pvStructInfo, 'ptr', pSignatureAlgorithm, 'ptr', pvHashAuxInfo, 'ptr', pbEncoded, 'uint*', &pcbEncoded, 'int')
CryptSignAndEncryptMessage(pSignPara, pEncryptPara, cRecipientCert, rgpRecipientCert, &pbToBeSignedAndEncrypted, cbToBeSignedAndEncrypted, &pbSignedAndEncryptedBlob, &pcbSignedAndEncryptedBlob) => DllCall('Crypt32\CryptSignAndEncryptMessage', 'ptr', pSignPara, 'ptr', pEncryptPara, 'uint', cRecipientCert, 'ptr', rgpRecipientCert, 'uchar*', &pbToBeSignedAndEncrypted, 'uint', cbToBeSignedAndEncrypted, 'uchar*', &pbSignedAndEncryptedBlob, 'uint*', &pcbSignedAndEncryptedBlob, 'int')
CryptSignCertificate(hCryptProvOrNCryptKey, dwKeySpec, dwCertEncodingType, &pbEncodedToBeSigned, cbEncodedToBeSigned, pSignatureAlgorithm, pvHashAuxInfo, &pbSignature, &pcbSignature) => DllCall('Crypt32\CryptSignCertificate', 'uptr', hCryptProvOrNCryptKey, 'uint', dwKeySpec, 'uint', dwCertEncodingType, 'uchar*', &pbEncodedToBeSigned, 'uint', cbEncodedToBeSigned, 'ptr', pSignatureAlgorithm, 'ptr', pvHashAuxInfo, 'uchar*', &pbSignature, 'uint*', &pcbSignature, 'int')
CryptSignMessage(pSignPara, fDetachedSignature, cToBeSigned, &rgpbToBeSigned, rgcbToBeSigned, &pbSignedBlob, &pcbSignedBlob) => DllCall('Crypt32\CryptSignMessage', 'ptr', pSignPara, 'int', fDetachedSignature, 'uint', cToBeSigned, 'uchar*', &rgpbToBeSigned, 'uint', rgcbToBeSigned, 'uchar*', &pbSignedBlob, 'uint*', &pcbSignedBlob, 'int')
CryptSignMessageWithKey(pSignPara, &pbToBeSigned, cToBeSigned, &pbSignedBlob, &pcbSignedBlob) => DllCall('Crypt32\CryptSignMessageWithKey', 'ptr', pSignPara, 'uchar*', &pbToBeSigned, 'uint', cToBeSigned, 'uchar*', &pbSignedBlob, 'uint*', &pcbSignedBlob, 'int')
CryptStringToBinary(pszString, cchString, dwFlags, &pbBinary, &pcbBinary, &pdwSkip, &pdwFlags) => DllCall('Crypt32\CryptStringToBinary', 'str', pszString, 'uint', cchString, 'uint', dwFlags, 'uchar*', &pbBinary, 'uint*', &pcbBinary, 'uint*', &pdwSkip, 'uint*', &pdwFlags, 'int')
CryptUninstallDefaultContext(hDefaultContext, dwFlags, pvReserved) => DllCall('Crypt32\CryptUninstallDefaultContext', 'uptr', hDefaultContext, 'uint', dwFlags, 'ptr', pvReserved, 'int')
CryptUnprotectData(pDataIn, ppszDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pDataOut) => DllCall('Crypt32\CryptUnprotectData', 'ptr', pDataIn, 'ptr', ppszDataDescr, 'ptr', pOptionalEntropy, 'ptr', pvReserved, 'ptr', pPromptStruct, 'uint', dwFlags, 'ptr', pDataOut, 'int')
CryptUnprotectMemory(pData, cbData, dwFlags) => DllCall('Crypt32\CryptUnprotectMemory', 'ptr', pData, 'uint', cbData, 'uint', dwFlags, 'int')
CryptUnregisterDefaultOIDFunction(dwEncodingType, pszFuncName, pwszDll) => DllCall('Crypt32\CryptUnregisterDefaultOIDFunction', 'uint', dwEncodingType, 'astr', pszFuncName, 'wstr', pwszDll, 'int')
CryptUnregisterOIDFunction(dwEncodingType, pszFuncName, pszOID) => DllCall('Crypt32\CryptUnregisterOIDFunction', 'uint', dwEncodingType, 'astr', pszFuncName, 'astr', pszOID, 'int')
CryptUnregisterOIDInfo(pInfo) => DllCall('Crypt32\CryptUnregisterOIDInfo', 'ptr', pInfo, 'int')
CryptUpdateProtectedState(pOldSid, pwszOldPassword, dwFlags, &pdwSuccessCount, &pdwFailureCount) => DllCall('Crypt32\CryptUpdateProtectedState', 'ptr', pOldSid, 'wstr', pwszOldPassword, 'uint', dwFlags, 'uint*', &pdwSuccessCount, 'uint*', &pdwFailureCount, 'int')
CryptVerifyCertificateSignature(hCryptProv, dwCertEncodingType, &pbEncoded, cbEncoded, pPublicKey) => DllCall('Crypt32\CryptVerifyCertificateSignature', 'uptr', hCryptProv, 'uint', dwCertEncodingType, 'uchar*', &pbEncoded, 'uint', cbEncoded, 'ptr', pPublicKey, 'int')
CryptVerifyCertificateSignatureEx(hCryptProv, dwCertEncodingType, dwSubjectType, pvSubject, dwIssuerType, pvIssuer, dwFlags, pvExtra) => DllCall('Crypt32\CryptVerifyCertificateSignatureEx', 'uptr', hCryptProv, 'uint', dwCertEncodingType, 'uint', dwSubjectType, 'ptr', pvSubject, 'uint', dwIssuerType, 'ptr', pvIssuer, 'uint', dwFlags, 'ptr', pvExtra, 'int')
CryptVerifyDetachedMessageHash(pHashPara, &pbDetachedHashBlob, cbDetachedHashBlob, cToBeHashed, &rgpbToBeHashed, rgcbToBeHashed, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptVerifyDetachedMessageHash', 'ptr', pHashPara, 'uchar*', &pbDetachedHashBlob, 'uint', cbDetachedHashBlob, 'uint', cToBeHashed, 'uchar*', &rgpbToBeHashed, 'uint', rgcbToBeHashed, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptVerifyDetachedMessageSignature(pVerifyPara, dwSignerIndex, &pbDetachedSignBlob, cbDetachedSignBlob, cToBeSigned, &rgpbToBeSigned, rgcbToBeSigned, ppSignerCert) => DllCall('Crypt32\CryptVerifyDetachedMessageSignature', 'ptr', pVerifyPara, 'uint', dwSignerIndex, 'uchar*', &pbDetachedSignBlob, 'uint', cbDetachedSignBlob, 'uint', cToBeSigned, 'uchar*', &rgpbToBeSigned, 'uint', rgcbToBeSigned, 'ptr', ppSignerCert, 'int')
CryptVerifyMessageHash(pHashPara, &pbHashedBlob, cbHashedBlob, &pbToBeHashed, &pcbToBeHashed, &pbComputedHash, &pcbComputedHash) => DllCall('Crypt32\CryptVerifyMessageHash', 'ptr', pHashPara, 'uchar*', &pbHashedBlob, 'uint', cbHashedBlob, 'uchar*', &pbToBeHashed, 'uint*', &pcbToBeHashed, 'uchar*', &pbComputedHash, 'uint*', &pcbComputedHash, 'int')
CryptVerifyMessageSignature(pVerifyPara, dwSignerIndex, &pbSignedBlob, cbSignedBlob, &pbDecoded, &pcbDecoded, ppSignerCert) => DllCall('Crypt32\CryptVerifyMessageSignature', 'ptr', pVerifyPara, 'uint', dwSignerIndex, 'uchar*', &pbSignedBlob, 'uint', cbSignedBlob, 'uchar*', &pbDecoded, 'uint*', &pcbDecoded, 'ptr', ppSignerCert, 'int')
CryptVerifyMessageSignatureWithKey(pVerifyPara, pPublicKeyInfo, &pbSignedBlob, cbSignedBlob, &pbDecoded, &pcbDecoded) => DllCall('Crypt32\CryptVerifyMessageSignatureWithKey', 'ptr', pVerifyPara, 'ptr', pPublicKeyInfo, 'uchar*', &pbSignedBlob, 'uint', cbSignedBlob, 'uchar*', &pbDecoded, 'uint*', &pcbDecoded, 'int')
CryptVerifyTimeStampSignature(pbTSContentInfo, cbTSContentInfo, pbData, cbData, hAdditionalStore, ppTsContext, ppTsSigner, phStore) => DllCall('Crypt32\CryptVerifyTimeStampSignature', 'uchar', pbTSContentInfo, 'uint', cbTSContentInfo, 'uint', pbData, 'uint', cbData, 'ptr', hAdditionalStore, 'ptr', ppTsContext, 'ptr', ppTsSigner, 'ptr', phStore, 'int')
PFXExportCertStore(hStore, pPFX, szPassword, dwFlags) => DllCall('Crypt32\PFXExportCertStore', 'ptr', hStore, 'ptr', pPFX, 'wstr', szPassword, 'uint', dwFlags, 'int')
PFXExportCertStoreEx(hStore, pPFX, szPassword, pvPara, dwFlags) => DllCall('Crypt32\PFXExportCertStoreEx', 'ptr', hStore, 'ptr', pPFX, 'wstr', szPassword, 'ptr', pvPara, 'uint', dwFlags, 'int')
PFXImportCertStore(pPFX, szPassword, dwFlags) => DllCall('Crypt32\PFXImportCertStore', 'ptr', pPFX, 'wstr', szPassword, 'uint', dwFlags, 'ptr')
PFXIsPFXBlob(pPFX) => DllCall('Crypt32\PFXIsPFXBlob', 'ptr', pPFX, 'int')
PFXVerifyPassword(pPFX, szPassword, dwFlags) => DllCall('Crypt32\PFXVerifyPassword', 'ptr', pPFX, 'wstr', szPassword, 'uint', dwFlags, 'int')
