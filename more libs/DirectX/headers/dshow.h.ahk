;File automatically generated by CrappyCppHeaderParser.ahk (Copyright@ peixoto)

Global dshow := {}
dshow.LIBID_QuartzTypeLib := "{56a868b0-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IAMCollection := "{56a868b9-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IMediaControl := "{56a868b1-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IMediaEvent := "{56a868b6-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IMediaEventEx := "{56a868c0-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IMediaPosition := "{56a868b2-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IBasicAudio := "{56a868b3-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IVideoWindow := "{56a868b4-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IBasicVideo := "{56a868b5-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IBasicVideo2 := "{329bb360-f6ea-11d1-9038-00a0c9697298}"
dshow.IID_IDeferredCommand := "{56a868b8-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IQueueCommand := "{56a868b7-0ad4-11ce-b03a-0020af0ba770}"
dshow.CLSID_FilgraphManager := "{e436ebb3-524f-11ce-9f53-0020af0ba770}"
dshow.IID_IFilterInfo := "{56a868ba-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IRegFilterInfo := "{56a868bb-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IMediaTypeInfo := "{56a868bc-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IPinInfo := "{56a868bd-0ad4-11ce-b03a-0020af0ba770}"
dshow.IID_IAMStats := "{bc9bcf80-dcd2-11d2-abf6-00a0c905f375}"

dshow.IAMCollection:= {}
dshow.IAMCollection.name := "IAMCollection"
dshow.IAMCollection.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_Count)(This,plCount)
STDMETHOD(Item)(This,lItem,ppUnk)
STDMETHOD(get__NewEnum)(This,ppUnk)
"
)

dshow.IAMStats:= {}
dshow.IAMStats.name := "IAMStats"
dshow.IAMStats.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(Reset)(This)
STDMETHOD(get_Count)(This,plCount)
STDMETHOD(GetValueByIndex)(This,lIndex,szName,lCount,dLast,dAverage,dStdDev,dMin,dMax)
STDMETHOD(GetValueByName)(This,szName,lIndex,lCount,dLast,dAverage,dStdDev,dMin,dMax)
STDMETHOD(GetIndex)(This,szName,lCreate,plIndex)
STDMETHOD(AddValue)(This,lIndex,dValue)
"
)

dshow.IBasicAudio:= {}
dshow.IBasicAudio.name := "IBasicAudio"
dshow.IBasicAudio.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(put_Volume)(This,lVolume)
STDMETHOD(get_Volume)(This,plVolume)
STDMETHOD(put_Balance)(This,lBalance)
STDMETHOD(get_Balance)(This,plBalance)
"
)

dshow.IBasicVideo:= {}
dshow.IBasicVideo.name := "IBasicVideo"
dshow.IBasicVideo.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_AvgTimePerFrame)(This,pAvgTimePerFrame)
STDMETHOD(get_BitRate)(This,pBitRate)
STDMETHOD(get_BitErrorRate)(This,pBitErrorRate)
STDMETHOD(get_VideoWidth)(This,pVideoWidth)
STDMETHOD(get_VideoHeight)(This,pVideoHeight)
STDMETHOD(put_SourceLeft)(This,SourceLeft)
STDMETHOD(get_SourceLeft)(This,pSourceLeft)
STDMETHOD(put_SourceWidth)(This,SourceWidth)
STDMETHOD(get_SourceWidth)(This,pSourceWidth)
STDMETHOD(put_SourceTop)(This,SourceTop)
STDMETHOD(get_SourceTop)(This,pSourceTop)
STDMETHOD(put_SourceHeight)(This,SourceHeight)
STDMETHOD(get_SourceHeight)(This,pSourceHeight)
STDMETHOD(put_DestinationLeft)(This,DestinationLeft)
STDMETHOD(get_DestinationLeft)(This,pDestinationLeft)
STDMETHOD(put_DestinationWidth)(This,DestinationWidth)
STDMETHOD(get_DestinationWidth)(This,pDestinationWidth)
STDMETHOD(put_DestinationTop)(This,DestinationTop)
STDMETHOD(get_DestinationTop)(This,pDestinationTop)
STDMETHOD(put_DestinationHeight)(This,DestinationHeight)
STDMETHOD(get_DestinationHeight)(This,pDestinationHeight)
STDMETHOD(SetSourcePosition)(This,Left,Top,Width,Height)
STDMETHOD(GetSourcePosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(SetDefaultSourcePosition)(This)
STDMETHOD(SetDestinationPosition)(This,Left,Top,Width,Height)
STDMETHOD(GetDestinationPosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(SetDefaultDestinationPosition)(This)
STDMETHOD(GetVideoSize)(This,pWidth,pHeight)
STDMETHOD(GetVideoPaletteEntries)(This,StartIndex,Entries,pRetrieved,pPalette)
STDMETHOD(GetCurrentImage)(This,pBufferSize,pDIBImage)
STDMETHOD(IsUsingDefaultSource)(This)
STDMETHOD(IsUsingDefaultDestination)(This)
"
)

dshow.IBasicVideo2:= {}
dshow.IBasicVideo2.name := "IBasicVideo2"
dshow.IBasicVideo2.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_AvgTimePerFrame)(This,pAvgTimePerFrame)
STDMETHOD(get_BitRate)(This,pBitRate)
STDMETHOD(get_BitErrorRate)(This,pBitErrorRate)
STDMETHOD(get_VideoWidth)(This,pVideoWidth)
STDMETHOD(get_VideoHeight)(This,pVideoHeight)
STDMETHOD(put_SourceLeft)(This,SourceLeft)
STDMETHOD(get_SourceLeft)(This,pSourceLeft)
STDMETHOD(put_SourceWidth)(This,SourceWidth)
STDMETHOD(get_SourceWidth)(This,pSourceWidth)
STDMETHOD(put_SourceTop)(This,SourceTop)
STDMETHOD(get_SourceTop)(This,pSourceTop)
STDMETHOD(put_SourceHeight)(This,SourceHeight)
STDMETHOD(get_SourceHeight)(This,pSourceHeight)
STDMETHOD(put_DestinationLeft)(This,DestinationLeft)
STDMETHOD(get_DestinationLeft)(This,pDestinationLeft)
STDMETHOD(put_DestinationWidth)(This,DestinationWidth)
STDMETHOD(get_DestinationWidth)(This,pDestinationWidth)
STDMETHOD(put_DestinationTop)(This,DestinationTop)
STDMETHOD(get_DestinationTop)(This,pDestinationTop)
STDMETHOD(put_DestinationHeight)(This,DestinationHeight)
STDMETHOD(get_DestinationHeight)(This,pDestinationHeight)
STDMETHOD(SetSourcePosition)(This,Left,Top,Width,Height)
STDMETHOD(GetSourcePosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(SetDefaultSourcePosition)(This)
STDMETHOD(SetDestinationPosition)(This,Left,Top,Width,Height)
STDMETHOD(GetDestinationPosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(SetDefaultDestinationPosition)(This)
STDMETHOD(GetVideoSize)(This,pWidth,pHeight)
STDMETHOD(GetVideoPaletteEntries)(This,StartIndex,Entries,pRetrieved,pPalette)
STDMETHOD(GetCurrentImage)(This,pBufferSize,pDIBImage)
STDMETHOD(IsUsingDefaultSource)(This)
STDMETHOD(IsUsingDefaultDestination)(This)
STDMETHOD(GetPreferredAspectRatio)(This,plAspectX,plAspectY)
"
)

dshow.IDeferredCommand:= {}
dshow.IDeferredCommand.name := "IDeferredCommand"
dshow.IDeferredCommand.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(Cancel)(This)
STDMETHOD(Confidence)(This,pConfidence)
STDMETHOD(Postpone)(This,newtime)
STDMETHOD(GetHResult)(This,phrResult)
"
)

dshow.IFilterInfo:= {}
dshow.IFilterInfo.name := "IFilterInfo"
dshow.IFilterInfo.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(FindPin)(This,strPinID,ppUnk)
STDMETHOD(get_Name)(This,strName)
STDMETHOD(get_VendorInfo)(This,strVendorInfo)
STDMETHOD(get_Filter)(This,ppUnk)
STDMETHOD(get_Pins)(This,ppUnk)
STDMETHOD(get_IsFileSource)(This,pbIsSource)
STDMETHOD(get_Filename)(This,pstrFilename)
STDMETHOD(put_Filename)(This,strFilename)
"
)

dshow.IMediaControl:= {}
dshow.IMediaControl.name := "IMediaControl"
dshow.IMediaControl.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(Run)(This)
STDMETHOD(Pause)(This)
STDMETHOD(Stop)(This)
STDMETHOD(GetState)(This,msTimeout,pfs)
STDMETHOD(RenderFile)(This,strFilename)
STDMETHOD(AddSourceFilter)(This,strFilename,ppUnk)
STDMETHOD(get_FilterCollection)(This,ppUnk)
STDMETHOD(get_RegFilterCollection)(This,ppUnk)
STDMETHOD(StopWhenReady)(This)
"
)

dshow.IMediaEvent:= {}
dshow.IMediaEvent.name := "IMediaEvent"
dshow.IMediaEvent.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(GetEventHandle)(This,hEvent)
STDMETHOD(GetEvent)(This,lEventCode,lParam1,lParam2,msTimeout)
STDMETHOD(WaitForCompletion)(This,msTimeout,pEvCode)
STDMETHOD(CancelDefaultHandling)(This,lEvCode)
STDMETHOD(RestoreDefaultHandling)(This,lEvCode)
STDMETHOD(FreeEventParams)(This,lEvCode,lParam1,lParam2)
"
)

dshow.IMediaEventEx:= {}
dshow.IMediaEventEx.name := "IMediaEventEx"
dshow.IMediaEventEx.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(GetEventHandle)(This,hEvent)
STDMETHOD(GetEvent)(This,lEventCode,lParam1,lParam2,msTimeout)
STDMETHOD(WaitForCompletion)(This,msTimeout,pEvCode)
STDMETHOD(CancelDefaultHandling)(This,lEvCode)
STDMETHOD(RestoreDefaultHandling)(This,lEvCode)
STDMETHOD(FreeEventParams)(This,lEvCode,lParam1,lParam2)
STDMETHOD(SetNotifyWindow)(This,hwnd,lMsg,lInstanceData)
STDMETHOD(SetNotifyFlags)(This,lNoNotifyFlags)
STDMETHOD(GetNotifyFlags)(This,lplNoNotifyFlags)
"
)

dshow.IMediaPosition:= {}
dshow.IMediaPosition.name := "IMediaPosition"
dshow.IMediaPosition.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_Duration)(This,plength)
STDMETHOD(put_CurrentPosition)(This,llTime)
STDMETHOD(get_CurrentPosition)(This,pllTime)
STDMETHOD(get_StopTime)(This,pllTime)
STDMETHOD(put_StopTime)(This,llTime)
STDMETHOD(get_PrerollTime)(This,pllTime)
STDMETHOD(put_PrerollTime)(This,llTime)
STDMETHOD(put_Rate)(This,dRate)
STDMETHOD(get_Rate)(This,pdRate)
STDMETHOD(CanSeekForward)(This,pCanSeekForward)
STDMETHOD(CanSeekBackward)(This,pCanSeekBackward)
"
)

dshow.IMediaTypeInfo:= {}
dshow.IMediaTypeInfo.name := "IMediaTypeInfo"
dshow.IMediaTypeInfo.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_Type)(This,strType)
STDMETHOD(get_Subtype)(This,strType)
"
)

dshow.IPinInfo:= {}
dshow.IPinInfo.name := "IPinInfo"
dshow.IPinInfo.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_Pin)(This,ppUnk)
STDMETHOD(get_ConnectedTo)(This,ppUnk)
STDMETHOD(get_ConnectionMediaType)(This,ppUnk)
STDMETHOD(get_FilterInfo)(This,ppUnk)
STDMETHOD(get_Name)(This,ppUnk)
STDMETHOD(get_Direction)(This,ppDirection)
STDMETHOD(get_PinID)(This,strPinID)
STDMETHOD(get_MediaTypes)(This,ppUnk)
STDMETHOD(Connect)(This,pPin)
STDMETHOD(ConnectDirect)(This,pPin)
STDMETHOD(ConnectWithType)(This,pPin,pMediaType)
STDMETHOD(Disconnect)(This)
STDMETHOD(Render)(This)
"
)

dshow.IQueueCommand:= {}
dshow.IQueueCommand.name := "IQueueCommand"
dshow.IQueueCommand.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(InvokeAtStreamTime)(This,pCmd,time,iid,dispidMethod,wFlags,cArgs,pDispParams,pvarResult,puArgErr)
STDMETHOD(InvokeAtPresentationTime)(This,pCmd,time,iid,dispidMethod,wFlags,cArgs,pDispParams,pvarResult,puArgErr)
"
)

dshow.IRegFilterInfo:= {}
dshow.IRegFilterInfo.name := "IRegFilterInfo"
dshow.IRegFilterInfo.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(get_Name)(This,strName)
STDMETHOD(Filter)(This,ppUnk)
"
)

dshow.IVideoWindow:= {}
dshow.IVideoWindow.name := "IVideoWindow"
dshow.IVideoWindow.def :=
( 
"
STDMETHOD(QueryInterface)(This,riid,ppvObject)
STDMETHOD(AddRef)(This)
STDMETHOD(Release)(This)
STDMETHOD(GetTypeInfoCount)(This,pctinfo)
STDMETHOD(GetTypeInfo)(This,iTInfo,lcid,ppTInfo)
STDMETHOD(GetIDsOfNames)(This,riid,rgszNames,cNames,lcid,rgDispId)
STDMETHOD(Invoke)(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)
STDMETHOD(put_Caption)(This,strCaption)
STDMETHOD(get_Caption)(This,strCaption)
STDMETHOD(put_WindowStyle)(This,WindowStyle)
STDMETHOD(get_WindowStyle)(This,WindowStyle)
STDMETHOD(put_WindowStyleEx)(This,WindowStyleEx)
STDMETHOD(get_WindowStyleEx)(This,WindowStyleEx)
STDMETHOD(put_AutoShow)(This,AutoShow)
STDMETHOD(get_AutoShow)(This,AutoShow)
STDMETHOD(put_WindowState)(This,WindowState)
STDMETHOD(get_WindowState)(This,WindowState)
STDMETHOD(put_BackgroundPalette)(This,BackgroundPalette)
STDMETHOD(get_BackgroundPalette)(This,pBackgroundPalette)
STDMETHOD(put_Visible)(This,Visible)
STDMETHOD(get_Visible)(This,pVisible)
STDMETHOD(put_Left)(This,Left)
STDMETHOD(get_Left)(This,pLeft)
STDMETHOD(put_Width)(This,Width)
STDMETHOD(get_Width)(This,pWidth)
STDMETHOD(put_Top)(This,Top)
STDMETHOD(get_Top)(This,pTop)
STDMETHOD(put_Height)(This,Height)
STDMETHOD(get_Height)(This,pHeight)
STDMETHOD(put_Owner)(This,Owner)
STDMETHOD(get_Owner)(This,Owner)
STDMETHOD(put_MessageDrain)(This,Drain)
STDMETHOD(get_MessageDrain)(This,Drain)
STDMETHOD(get_BorderColor)(This,Color)
STDMETHOD(put_BorderColor)(This,Color)
STDMETHOD(get_FullScreenMode)(This,FullScreenMode)
STDMETHOD(put_FullScreenMode)(This,FullScreenMode)
STDMETHOD(SetWindowForeground)(This,Focus)
STDMETHOD(NotifyOwnerMessage)(This,hwnd,uMsg,wParam,lParam)
STDMETHOD(SetWindowPosition)(This,Left,Top,Width,Height)
STDMETHOD(GetWindowPosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(GetMinIdealImageSize)(This,pWidth,pHeight)
STDMETHOD(GetMaxIdealImageSize)(This,pWidth,pHeight)
STDMETHOD(GetRestorePosition)(This,pLeft,pTop,pWidth,pHeight)
STDMETHOD(HideCursor)(This,HideCursor)
STDMETHOD(IsCursorHidden)(This,CursorHidden)
"
)

dshow.constant := {}
dshow.constant[500 . ""] := "__REQUIRED_RPCNDR_H_VERSION__"
dshow.constant[100 . ""] := "__REQUIRED_RPCSAL_H_VERSION__"


Global __REQUIRED_RPCNDR_H_VERSION__ := 500
Global __REQUIRED_RPCSAL_H_VERSION__ := 100

dshow.result := {}

